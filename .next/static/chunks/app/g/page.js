/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/g/page"],{

/***/ "(app-client)/./node_modules/@tweenjs/tween.js/dist/tween.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tweenjs/tween.js/dist/tween.esm.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Easing: function() { return /* binding */ Easing; },\n/* harmony export */   Group: function() { return /* binding */ Group; },\n/* harmony export */   Interpolation: function() { return /* binding */ Interpolation; },\n/* harmony export */   Sequence: function() { return /* binding */ Sequence; },\n/* harmony export */   Tween: function() { return /* binding */ Tween; },\n/* harmony export */   VERSION: function() { return /* binding */ VERSION; },\n/* harmony export */   add: function() { return /* binding */ add; },\n/* harmony export */   getAll: function() { return /* binding */ getAll; },\n/* harmony export */   nextId: function() { return /* binding */ nextId; },\n/* harmony export */   now: function() { return /* binding */ now$1; },\n/* harmony export */   remove: function() { return /* binding */ remove; },\n/* harmony export */   removeAll: function() { return /* binding */ removeAll; },\n/* harmony export */   update: function() { return /* binding */ update; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-client)/./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * The Ease class provides a collection of easing functions for use with tween.js.\n */\nvar Easing = {\n    Linear: {\n        None: function (amount) {\n            return amount;\n        },\n    },\n    Quadratic: {\n        In: function (amount) {\n            return amount * amount;\n        },\n        Out: function (amount) {\n            return amount * (2 - amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount;\n            }\n            return -0.5 * (--amount * (amount - 2) - 1);\n        },\n    },\n    Cubic: {\n        In: function (amount) {\n            return amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount + 2);\n        },\n    },\n    Quartic: {\n        In: function (amount) {\n            return amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return 1 - --amount * amount * amount * amount;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount;\n            }\n            return -0.5 * ((amount -= 2) * amount * amount * amount - 2);\n        },\n    },\n    Quintic: {\n        In: function (amount) {\n            return amount * amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount * amount * amount + 2);\n        },\n    },\n    Sinusoidal: {\n        In: function (amount) {\n            return 1 - Math.cos((amount * Math.PI) / 2);\n        },\n        Out: function (amount) {\n            return Math.sin((amount * Math.PI) / 2);\n        },\n        InOut: function (amount) {\n            return 0.5 * (1 - Math.cos(Math.PI * amount));\n        },\n    },\n    Exponential: {\n        In: function (amount) {\n            return amount === 0 ? 0 : Math.pow(1024, amount - 1);\n        },\n        Out: function (amount) {\n            return amount === 1 ? 1 : 1 - Math.pow(2, -10 * amount);\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            if ((amount *= 2) < 1) {\n                return 0.5 * Math.pow(1024, amount - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (amount - 1)) + 2);\n        },\n    },\n    Circular: {\n        In: function (amount) {\n            return 1 - Math.sqrt(1 - amount * amount);\n        },\n        Out: function (amount) {\n            return Math.sqrt(1 - --amount * amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - amount * amount) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (amount -= 2) * amount) + 1);\n        },\n    },\n    Elastic: {\n        In: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return -Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n        },\n        Out: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return Math.pow(2, -10 * amount) * Math.sin((amount - 0.1) * 5 * Math.PI) + 1;\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            amount *= 2;\n            if (amount < 1) {\n                return -0.5 * Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n            }\n            return 0.5 * Math.pow(2, -10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI) + 1;\n        },\n    },\n    Back: {\n        In: function (amount) {\n            var s = 1.70158;\n            return amount * amount * ((s + 1) * amount - s);\n        },\n        Out: function (amount) {\n            var s = 1.70158;\n            return --amount * amount * ((s + 1) * amount + s) + 1;\n        },\n        InOut: function (amount) {\n            var s = 1.70158 * 1.525;\n            if ((amount *= 2) < 1) {\n                return 0.5 * (amount * amount * ((s + 1) * amount - s));\n            }\n            return 0.5 * ((amount -= 2) * amount * ((s + 1) * amount + s) + 2);\n        },\n    },\n    Bounce: {\n        In: function (amount) {\n            return 1 - Easing.Bounce.Out(1 - amount);\n        },\n        Out: function (amount) {\n            if (amount < 1 / 2.75) {\n                return 7.5625 * amount * amount;\n            }\n            else if (amount < 2 / 2.75) {\n                return 7.5625 * (amount -= 1.5 / 2.75) * amount + 0.75;\n            }\n            else if (amount < 2.5 / 2.75) {\n                return 7.5625 * (amount -= 2.25 / 2.75) * amount + 0.9375;\n            }\n            else {\n                return 7.5625 * (amount -= 2.625 / 2.75) * amount + 0.984375;\n            }\n        },\n        InOut: function (amount) {\n            if (amount < 0.5) {\n                return Easing.Bounce.In(amount * 2) * 0.5;\n            }\n            return Easing.Bounce.Out(amount * 2 - 1) * 0.5 + 0.5;\n        },\n    },\n};\n\nvar now;\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\n// eslint-disable-next-line\n// @ts-ignore\nif (typeof self === 'undefined' && typeof process !== 'undefined' && process.hrtime) {\n    now = function () {\n        // eslint-disable-next-line\n        // @ts-ignore\n        var time = process.hrtime();\n        // Convert [seconds, nanoseconds] to milliseconds.\n        return time[0] * 1000 + time[1] / 1000000;\n    };\n}\n// In a browser, use self.performance.now if it is available.\nelse if (typeof self !== 'undefined' && self.performance !== undefined && self.performance.now !== undefined) {\n    // This must be bound, because directly assigning this function\n    // leads to an invocation exception in Chrome.\n    now = self.performance.now.bind(self.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n    now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n    now = function () {\n        return new Date().getTime();\n    };\n}\nvar now$1 = now;\n\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tween\n */\nvar Group = /** @class */ (function () {\n    function Group() {\n        this._tweens = {};\n        this._tweensAddedDuringUpdate = {};\n    }\n    Group.prototype.getAll = function () {\n        var _this = this;\n        return Object.keys(this._tweens).map(function (tweenId) {\n            return _this._tweens[tweenId];\n        });\n    };\n    Group.prototype.removeAll = function () {\n        this._tweens = {};\n    };\n    Group.prototype.add = function (tween) {\n        this._tweens[tween.getId()] = tween;\n        this._tweensAddedDuringUpdate[tween.getId()] = tween;\n    };\n    Group.prototype.remove = function (tween) {\n        delete this._tweens[tween.getId()];\n        delete this._tweensAddedDuringUpdate[tween.getId()];\n    };\n    Group.prototype.update = function (time, preserve) {\n        if (time === void 0) { time = now$1(); }\n        if (preserve === void 0) { preserve = false; }\n        var tweenIds = Object.keys(this._tweens);\n        if (tweenIds.length === 0) {\n            return false;\n        }\n        // Tweens are updated in \"batches\". If you add a new tween during an\n        // update, then the new tween will be updated in the next batch.\n        // If you remove a tween during an update, it may or may not be updated.\n        // However, if the removed tween was added during the current batch,\n        // then it will not be updated.\n        while (tweenIds.length > 0) {\n            this._tweensAddedDuringUpdate = {};\n            for (var i = 0; i < tweenIds.length; i++) {\n                var tween = this._tweens[tweenIds[i]];\n                var autoStart = !preserve;\n                if (tween && tween.update(time, autoStart) === false && !preserve) {\n                    delete this._tweens[tweenIds[i]];\n                }\n            }\n            tweenIds = Object.keys(this._tweensAddedDuringUpdate);\n        }\n        return true;\n    };\n    return Group;\n}());\n\n/**\n *\n */\nvar Interpolation = {\n    Linear: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.Linear;\n        if (k < 0) {\n            return fn(v[0], v[1], f);\n        }\n        if (k > 1) {\n            return fn(v[m], v[m - 1], m - f);\n        }\n        return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n    },\n    Bezier: function (v, k) {\n        var b = 0;\n        var n = v.length - 1;\n        var pw = Math.pow;\n        var bn = Interpolation.Utils.Bernstein;\n        for (var i = 0; i <= n; i++) {\n            b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n        }\n        return b;\n    },\n    CatmullRom: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.CatmullRom;\n        if (v[0] === v[m]) {\n            if (k < 0) {\n                i = Math.floor((f = m * (1 + k)));\n            }\n            return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n        }\n        else {\n            if (k < 0) {\n                return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n            }\n            if (k > 1) {\n                return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n            }\n            return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n        }\n    },\n    Utils: {\n        Linear: function (p0, p1, t) {\n            return (p1 - p0) * t + p0;\n        },\n        Bernstein: function (n, i) {\n            var fc = Interpolation.Utils.Factorial;\n            return fc(n) / fc(i) / fc(n - i);\n        },\n        Factorial: (function () {\n            var a = [1];\n            return function (n) {\n                var s = 1;\n                if (a[n]) {\n                    return a[n];\n                }\n                for (var i = n; i > 1; i--) {\n                    s *= i;\n                }\n                a[n] = s;\n                return s;\n            };\n        })(),\n        CatmullRom: function (p0, p1, p2, p3, t) {\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            var t2 = t * t;\n            var t3 = t * t2;\n            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n        },\n    },\n};\n\n/**\n * Utils\n */\nvar Sequence = /** @class */ (function () {\n    function Sequence() {\n    }\n    Sequence.nextId = function () {\n        return Sequence._nextId++;\n    };\n    Sequence._nextId = 0;\n    return Sequence;\n}());\n\nvar mainGroup = new Group();\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar Tween = /** @class */ (function () {\n    function Tween(_object, _group) {\n        if (_group === void 0) { _group = mainGroup; }\n        this._object = _object;\n        this._group = _group;\n        this._isPaused = false;\n        this._pauseStart = 0;\n        this._valuesStart = {};\n        this._valuesEnd = {};\n        this._valuesStartRepeat = {};\n        this._duration = 1000;\n        this._initialRepeat = 0;\n        this._repeat = 0;\n        this._yoyo = false;\n        this._isPlaying = false;\n        this._reversed = false;\n        this._delayTime = 0;\n        this._startTime = 0;\n        this._easingFunction = Easing.Linear.None;\n        this._interpolationFunction = Interpolation.Linear;\n        this._chainedTweens = [];\n        this._onStartCallbackFired = false;\n        this._id = Sequence.nextId();\n        this._isChainStopped = false;\n        this._goToEnd = false;\n    }\n    Tween.prototype.getId = function () {\n        return this._id;\n    };\n    Tween.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    Tween.prototype.isPaused = function () {\n        return this._isPaused;\n    };\n    Tween.prototype.to = function (properties, duration) {\n        // TODO? restore this, then update the 07_dynamic_to example to set fox\n        // tween's to on each update. That way the behavior is opt-in (there's\n        // currently no opt-out).\n        // for (const prop in properties) this._valuesEnd[prop] = properties[prop]\n        this._valuesEnd = Object.create(properties);\n        if (duration !== undefined) {\n            this._duration = duration;\n        }\n        return this;\n    };\n    Tween.prototype.duration = function (d) {\n        this._duration = d;\n        return this;\n    };\n    Tween.prototype.start = function (time) {\n        if (this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        this._repeat = this._initialRepeat;\n        if (this._reversed) {\n            // If we were reversed (f.e. using the yoyo feature) then we need to\n            // flip the tween direction back to forward.\n            this._reversed = false;\n            for (var property in this._valuesStartRepeat) {\n                this._swapEndStartRepeatValues(property);\n                this._valuesStart[property] = this._valuesStartRepeat[property];\n            }\n        }\n        this._isPlaying = true;\n        this._isPaused = false;\n        this._onStartCallbackFired = false;\n        this._isChainStopped = false;\n        this._startTime = time !== undefined ? (typeof time === 'string' ? now$1() + parseFloat(time) : time) : now$1();\n        this._startTime += this._delayTime;\n        this._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat);\n        return this;\n    };\n    Tween.prototype._setupProperties = function (_object, _valuesStart, _valuesEnd, _valuesStartRepeat) {\n        for (var property in _valuesEnd) {\n            var startValue = _object[property];\n            var startValueIsArray = Array.isArray(startValue);\n            var propType = startValueIsArray ? 'array' : typeof startValue;\n            var isInterpolationList = !startValueIsArray && Array.isArray(_valuesEnd[property]);\n            // If `to()` specifies a property that doesn't exist in the source object,\n            // we should not set that property in the object\n            if (propType === 'undefined' || propType === 'function') {\n                continue;\n            }\n            // Check if an Array was provided as property value\n            if (isInterpolationList) {\n                var endValues = _valuesEnd[property];\n                if (endValues.length === 0) {\n                    continue;\n                }\n                // handle an array of relative values\n                endValues = endValues.map(this._handleRelativeValue.bind(this, startValue));\n                // Create a local copy of the Array with the start value at the front\n                _valuesEnd[property] = [startValue].concat(endValues);\n            }\n            // handle the deepness of the values\n            if ((propType === 'object' || startValueIsArray) && startValue && !isInterpolationList) {\n                _valuesStart[property] = startValueIsArray ? [] : {};\n                // eslint-disable-next-line\n                for (var prop in startValue) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property][prop] = startValue[prop];\n                }\n                _valuesStartRepeat[property] = startValueIsArray ? [] : {}; // TODO? repeat nested values? And yoyo? And array values?\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._setupProperties(startValue, _valuesStart[property], _valuesEnd[property], _valuesStartRepeat[property]);\n            }\n            else {\n                // Save the starting value, but only once.\n                if (typeof _valuesStart[property] === 'undefined') {\n                    _valuesStart[property] = startValue;\n                }\n                if (!startValueIsArray) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n                }\n                if (isInterpolationList) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStartRepeat[property] = _valuesEnd[property].slice().reverse();\n                }\n                else {\n                    _valuesStartRepeat[property] = _valuesStart[property] || 0;\n                }\n            }\n        }\n    };\n    Tween.prototype.stop = function () {\n        if (!this._isChainStopped) {\n            this._isChainStopped = true;\n            this.stopChainedTweens();\n        }\n        if (!this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        this._isPlaying = false;\n        this._isPaused = false;\n        if (this._onStopCallback) {\n            this._onStopCallback(this._object);\n        }\n        return this;\n    };\n    Tween.prototype.end = function () {\n        this._goToEnd = true;\n        this.update(Infinity);\n        return this;\n    };\n    Tween.prototype.pause = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = true;\n        this._pauseStart = time;\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        return this;\n    };\n    Tween.prototype.resume = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (!this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = false;\n        this._startTime += time - this._pauseStart;\n        this._pauseStart = 0;\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        return this;\n    };\n    Tween.prototype.stopChainedTweens = function () {\n        for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n            this._chainedTweens[i].stop();\n        }\n        return this;\n    };\n    Tween.prototype.group = function (group) {\n        this._group = group;\n        return this;\n    };\n    Tween.prototype.delay = function (amount) {\n        this._delayTime = amount;\n        return this;\n    };\n    Tween.prototype.repeat = function (times) {\n        this._initialRepeat = times;\n        this._repeat = times;\n        return this;\n    };\n    Tween.prototype.repeatDelay = function (amount) {\n        this._repeatDelayTime = amount;\n        return this;\n    };\n    Tween.prototype.yoyo = function (yoyo) {\n        this._yoyo = yoyo;\n        return this;\n    };\n    Tween.prototype.easing = function (easingFunction) {\n        this._easingFunction = easingFunction;\n        return this;\n    };\n    Tween.prototype.interpolation = function (interpolationFunction) {\n        this._interpolationFunction = interpolationFunction;\n        return this;\n    };\n    Tween.prototype.chain = function () {\n        var tweens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tweens[_i] = arguments[_i];\n        }\n        this._chainedTweens = tweens;\n        return this;\n    };\n    Tween.prototype.onStart = function (callback) {\n        this._onStartCallback = callback;\n        return this;\n    };\n    Tween.prototype.onUpdate = function (callback) {\n        this._onUpdateCallback = callback;\n        return this;\n    };\n    Tween.prototype.onRepeat = function (callback) {\n        this._onRepeatCallback = callback;\n        return this;\n    };\n    Tween.prototype.onComplete = function (callback) {\n        this._onCompleteCallback = callback;\n        return this;\n    };\n    Tween.prototype.onStop = function (callback) {\n        this._onStopCallback = callback;\n        return this;\n    };\n    /**\n     * @returns true if the tween is still playing after the update, false\n     * otherwise (calling update on a paused tween still returns true because\n     * it is still playing, just paused).\n     */\n    Tween.prototype.update = function (time, autoStart) {\n        if (time === void 0) { time = now$1(); }\n        if (autoStart === void 0) { autoStart = true; }\n        if (this._isPaused)\n            return true;\n        var property;\n        var elapsed;\n        var endTime = this._startTime + this._duration;\n        if (!this._goToEnd && !this._isPlaying) {\n            if (time > endTime)\n                return false;\n            if (autoStart)\n                this.start(time);\n        }\n        this._goToEnd = false;\n        if (time < this._startTime) {\n            return true;\n        }\n        if (this._onStartCallbackFired === false) {\n            if (this._onStartCallback) {\n                this._onStartCallback(this._object);\n            }\n            this._onStartCallbackFired = true;\n        }\n        elapsed = (time - this._startTime) / this._duration;\n        elapsed = this._duration === 0 || elapsed > 1 ? 1 : elapsed;\n        var value = this._easingFunction(elapsed);\n        // properties transformations\n        this._updateProperties(this._object, this._valuesStart, this._valuesEnd, value);\n        if (this._onUpdateCallback) {\n            this._onUpdateCallback(this._object, elapsed);\n        }\n        if (elapsed === 1) {\n            if (this._repeat > 0) {\n                if (isFinite(this._repeat)) {\n                    this._repeat--;\n                }\n                // Reassign starting values, restart by making startTime = now\n                for (property in this._valuesStartRepeat) {\n                    if (!this._yoyo && typeof this._valuesEnd[property] === 'string') {\n                        this._valuesStartRepeat[property] =\n                            // eslint-disable-next-line\n                            // @ts-ignore FIXME?\n                            this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n                    }\n                    if (this._yoyo) {\n                        this._swapEndStartRepeatValues(property);\n                    }\n                    this._valuesStart[property] = this._valuesStartRepeat[property];\n                }\n                if (this._yoyo) {\n                    this._reversed = !this._reversed;\n                }\n                if (this._repeatDelayTime !== undefined) {\n                    this._startTime = time + this._repeatDelayTime;\n                }\n                else {\n                    this._startTime = time + this._delayTime;\n                }\n                if (this._onRepeatCallback) {\n                    this._onRepeatCallback(this._object);\n                }\n                return true;\n            }\n            else {\n                if (this._onCompleteCallback) {\n                    this._onCompleteCallback(this._object);\n                }\n                for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n                    // Make the chained tweens start exactly at the time they should,\n                    // even if the `update()` method was called way past the duration of the tween\n                    this._chainedTweens[i].start(this._startTime + this._duration);\n                }\n                this._isPlaying = false;\n                return false;\n            }\n        }\n        return true;\n    };\n    Tween.prototype._updateProperties = function (_object, _valuesStart, _valuesEnd, value) {\n        for (var property in _valuesEnd) {\n            // Don't update properties that do not exist in the source object\n            if (_valuesStart[property] === undefined) {\n                continue;\n            }\n            var start = _valuesStart[property] || 0;\n            var end = _valuesEnd[property];\n            var startIsArray = Array.isArray(_object[property]);\n            var endIsArray = Array.isArray(end);\n            var isInterpolationList = !startIsArray && endIsArray;\n            if (isInterpolationList) {\n                _object[property] = this._interpolationFunction(end, value);\n            }\n            else if (typeof end === 'object' && end) {\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._updateProperties(_object[property], start, end, value);\n            }\n            else {\n                // Parses relative end values with start as base (e.g.: +10, -3)\n                end = this._handleRelativeValue(start, end);\n                // Protect against non numeric properties.\n                if (typeof end === 'number') {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _object[property] = start + (end - start) * value;\n                }\n            }\n        }\n    };\n    Tween.prototype._handleRelativeValue = function (start, end) {\n        if (typeof end !== 'string') {\n            return end;\n        }\n        if (end.charAt(0) === '+' || end.charAt(0) === '-') {\n            return start + parseFloat(end);\n        }\n        else {\n            return parseFloat(end);\n        }\n    };\n    Tween.prototype._swapEndStartRepeatValues = function (property) {\n        var tmp = this._valuesStartRepeat[property];\n        var endValue = this._valuesEnd[property];\n        if (typeof endValue === 'string') {\n            this._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(endValue);\n        }\n        else {\n            this._valuesStartRepeat[property] = this._valuesEnd[property];\n        }\n        this._valuesEnd[property] = tmp;\n    };\n    return Tween;\n}());\n\nvar VERSION = '18.6.4';\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar nextId = Sequence.nextId;\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tweens.\n */\nvar TWEEN = mainGroup;\n// This is the best way to export things in a way that's compatible with both ES\n// Modules and CommonJS, without build hacks, and so as not to break the\n// existing API.\n// https://github.com/rollup/rollup/issues/1961#issuecomment-423037881\nvar getAll = TWEEN.getAll.bind(TWEEN);\nvar removeAll = TWEEN.removeAll.bind(TWEEN);\nvar add = TWEEN.add.bind(TWEEN);\nvar remove = TWEEN.remove.bind(TWEEN);\nvar update = TWEEN.update.bind(TWEEN);\nvar exports = {\n    Easing: Easing,\n    Group: Group,\n    Interpolation: Interpolation,\n    now: now$1,\n    Sequence: Sequence,\n    nextId: nextId,\n    Tween: Tween,\n    VERSION: VERSION,\n    getAll: getAll,\n    removeAll: removeAll,\n    add: add,\n    remove: remove,\n    update: update,\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (exports);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/@tweenjs/tween.js/dist/tween.esm.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/colyseus.js/dist/colyseus.js":
/*!***************************************************!*\
  !*** ./node_modules/colyseus.js/dist/colyseus.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("// colyseus.js@0.15.11 (@colyseus/schema 2.0.9)\n(function (global, factory) {\n     true ? factory(exports) :\n    0;\n})(this, (function (exports) { 'use strict';\n\n    function _mergeNamespaces(n, m) {\n        m.forEach(function (e) {\n            e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {\n                if (k !== 'default' && !(k in n)) {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () { return e[k]; }\n                    });\n                }\n            });\n        });\n        return Object.freeze(n);\n    }\n\n    //\n    // Polyfills for legacy environments\n    //\n    /*\n     * Support Android 4.4.x\n     */\n    if (!ArrayBuffer.isView) {\n        ArrayBuffer.isView = function (a) {\n            return a !== null && typeof (a) === 'object' && a.buffer instanceof ArrayBuffer;\n        };\n    }\n    // Define globalThis if not available.\n    // https://github.com/colyseus/colyseus.js/issues/86\n    if (typeof (globalThis) === \"undefined\" &&\n        typeof (window) !== \"undefined\") {\n        // @ts-ignore\n        window['globalThis'] = window;\n    }\n\n    /******************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\n\n    function apply(src, tar) {\n    \ttar.statusMessage = src.statusText;\n    \ttar.statusCode = src.status;\n    \ttar.data = src.body;\n    }\n\n    function send(method, uri, opts) {\n    \topts = opts || {};\n    \tvar timer, ctrl, tmp=opts.body;\n\n    \topts.method = method;\n    \topts.headers = opts.headers || {};\n\n    \tif (tmp instanceof FormData) ; else if (tmp && typeof tmp == 'object') {\n    \t\topts.headers['content-type'] = 'application/json';\n    \t\topts.body = JSON.stringify(tmp);\n    \t}\n\n    \tif (opts.withCredentials) {\n    \t\topts.credentials = 'include';\n    \t}\n\n    \tif (opts.timeout) {\n    \t\tctrl = new AbortController;\n    \t\topts.signal = ctrl.signal;\n    \t\ttimer = setTimeout(ctrl.abort, opts.timeout);\n    \t}\n\n    \treturn new Promise((res, rej) => {\n    \t\tfetch(uri, opts).then((rr, reply) => {\n    \t\t\tclearTimeout(timer);\n\n    \t\t\tapply(rr, rr); //=> rr.headers\n    \t\t\treply = rr.status >= 400 ? rej : res;\n\n    \t\t\ttmp = rr.headers.get('content-type');\n    \t\t\tif (!tmp || !~tmp.indexOf('application/json')) {\n    \t\t\t\treply(rr);\n    \t\t\t} else {\n    \t\t\t\trr.text().then(str => {\n    \t\t\t\t\ttry {\n    \t\t\t\t\t\trr.data = JSON.parse(str, opts.reviver);\n    \t\t\t\t\t\treply(rr);\n    \t\t\t\t\t} catch (err) {\n    \t\t\t\t\t\terr.headers = rr.headers;\n    \t\t\t\t\t\tapply(rr, err);\n    \t\t\t\t\t\trej(err);\n    \t\t\t\t\t}\n    \t\t\t\t});\n    \t\t\t}\n    \t\t}).catch(err => {\n    \t\t\terr.timeout = ctrl && ctrl.signal.aborted;\n    \t\t\trej(err);\n    \t\t});\n    \t});\n    }\n\n    var get = /*#__PURE__*/ send.bind(send, 'GET');\n    var post = /*#__PURE__*/ send.bind(send, 'POST');\n    var patch = /*#__PURE__*/ send.bind(send, 'PATCH');\n    var del = /*#__PURE__*/ send.bind(send, 'DELETE');\n    var put = /*#__PURE__*/ send.bind(send, 'PUT');\n\n    var del_1 = del;\n    var get_1 = get;\n    var patch_1 = patch;\n    var post_1 = post;\n    var put_1 = put;\n    var send_1 = send;\n\n    var fetch_1 = {\n    \tdel: del_1,\n    \tget: get_1,\n    \tpatch: patch_1,\n    \tpost: post_1,\n    \tput: put_1,\n    \tsend: send_1\n    };\n\n    var http = /*#__PURE__*/_mergeNamespaces({\n        __proto__: null,\n        'default': fetch_1,\n        del: del_1,\n        get: get_1,\n        patch: patch_1,\n        post: post_1,\n        put: put_1,\n        send: send_1\n    }, [fetch_1]);\n\n    var CloseCode;\n    (function (CloseCode) {\n        CloseCode[CloseCode[\"CONSENTED\"] = 4000] = \"CONSENTED\";\n        CloseCode[CloseCode[\"DEVMODE_RESTART\"] = 4010] = \"DEVMODE_RESTART\";\n    })(CloseCode || (CloseCode = {}));\n    var ServerError = /** @class */ (function (_super) {\n        __extends(ServerError, _super);\n        function ServerError(code, message) {\n            var _this = _super.call(this, message) || this;\n            _this.name = \"ServerError\";\n            _this.code = code;\n            return _this;\n        }\n        return ServerError;\n    }(Error));\n\n    /**\n     * Copyright (c) 2014 Ion Drive Software Ltd.\n     * https://github.com/darrachequesne/notepack/\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all\n     * copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE.\n     */\n    /**\n     * Patch for Colyseus:\n     * -------------------\n     * notepack.io@3.0.1\n     *\n     * added `offset` on Decoder constructor, for messages arriving with a code\n     * before actual msgpack data\n     */\n    //\n    // DECODER\n    //\n    function Decoder(buffer, offset) {\n        this._offset = offset;\n        if (buffer instanceof ArrayBuffer) {\n            this._buffer = buffer;\n            this._view = new DataView(this._buffer);\n        }\n        else if (ArrayBuffer.isView(buffer)) {\n            this._buffer = buffer.buffer;\n            this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n        }\n        else {\n            throw new Error('Invalid argument');\n        }\n    }\n    function utf8Read$1(view, offset, length) {\n        var string = '', chr = 0;\n        for (var i = offset, end = offset + length; i < end; i++) {\n            var byte = view.getUint8(i);\n            if ((byte & 0x80) === 0x00) {\n                string += String.fromCharCode(byte);\n                continue;\n            }\n            if ((byte & 0xe0) === 0xc0) {\n                string += String.fromCharCode(((byte & 0x1f) << 6) |\n                    (view.getUint8(++i) & 0x3f));\n                continue;\n            }\n            if ((byte & 0xf0) === 0xe0) {\n                string += String.fromCharCode(((byte & 0x0f) << 12) |\n                    ((view.getUint8(++i) & 0x3f) << 6) |\n                    ((view.getUint8(++i) & 0x3f) << 0));\n                continue;\n            }\n            if ((byte & 0xf8) === 0xf0) {\n                chr = ((byte & 0x07) << 18) |\n                    ((view.getUint8(++i) & 0x3f) << 12) |\n                    ((view.getUint8(++i) & 0x3f) << 6) |\n                    ((view.getUint8(++i) & 0x3f) << 0);\n                if (chr >= 0x010000) { // surrogate pair\n                    chr -= 0x010000;\n                    string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n                }\n                else {\n                    string += String.fromCharCode(chr);\n                }\n                continue;\n            }\n            throw new Error('Invalid byte ' + byte.toString(16));\n        }\n        return string;\n    }\n    Decoder.prototype._array = function (length) {\n        var value = new Array(length);\n        for (var i = 0; i < length; i++) {\n            value[i] = this._parse();\n        }\n        return value;\n    };\n    Decoder.prototype._map = function (length) {\n        var key = '', value = {};\n        for (var i = 0; i < length; i++) {\n            key = this._parse();\n            value[key] = this._parse();\n        }\n        return value;\n    };\n    Decoder.prototype._str = function (length) {\n        var value = utf8Read$1(this._view, this._offset, length);\n        this._offset += length;\n        return value;\n    };\n    Decoder.prototype._bin = function (length) {\n        var value = this._buffer.slice(this._offset, this._offset + length);\n        this._offset += length;\n        return value;\n    };\n    Decoder.prototype._parse = function () {\n        var prefix = this._view.getUint8(this._offset++);\n        var value, length = 0, type = 0, hi = 0, lo = 0;\n        if (prefix < 0xc0) {\n            // positive fixint\n            if (prefix < 0x80) {\n                return prefix;\n            }\n            // fixmap\n            if (prefix < 0x90) {\n                return this._map(prefix & 0x0f);\n            }\n            // fixarray\n            if (prefix < 0xa0) {\n                return this._array(prefix & 0x0f);\n            }\n            // fixstr\n            return this._str(prefix & 0x1f);\n        }\n        // negative fixint\n        if (prefix > 0xdf) {\n            return (0xff - prefix + 1) * -1;\n        }\n        switch (prefix) {\n            // nil\n            case 0xc0:\n                return null;\n            // false\n            case 0xc2:\n                return false;\n            // true\n            case 0xc3:\n                return true;\n            // bin\n            case 0xc4:\n                length = this._view.getUint8(this._offset);\n                this._offset += 1;\n                return this._bin(length);\n            case 0xc5:\n                length = this._view.getUint16(this._offset);\n                this._offset += 2;\n                return this._bin(length);\n            case 0xc6:\n                length = this._view.getUint32(this._offset);\n                this._offset += 4;\n                return this._bin(length);\n            // ext\n            case 0xc7:\n                length = this._view.getUint8(this._offset);\n                type = this._view.getInt8(this._offset + 1);\n                this._offset += 2;\n                if (type === -1) {\n                    // timestamp 96\n                    var ns = this._view.getUint32(this._offset);\n                    hi = this._view.getInt32(this._offset + 4);\n                    lo = this._view.getUint32(this._offset + 8);\n                    this._offset += 12;\n                    return new Date((hi * 0x100000000 + lo) * 1e3 + ns / 1e6);\n                }\n                return [type, this._bin(length)];\n            case 0xc8:\n                length = this._view.getUint16(this._offset);\n                type = this._view.getInt8(this._offset + 2);\n                this._offset += 3;\n                return [type, this._bin(length)];\n            case 0xc9:\n                length = this._view.getUint32(this._offset);\n                type = this._view.getInt8(this._offset + 4);\n                this._offset += 5;\n                return [type, this._bin(length)];\n            // float\n            case 0xca:\n                value = this._view.getFloat32(this._offset);\n                this._offset += 4;\n                return value;\n            case 0xcb:\n                value = this._view.getFloat64(this._offset);\n                this._offset += 8;\n                return value;\n            // uint\n            case 0xcc:\n                value = this._view.getUint8(this._offset);\n                this._offset += 1;\n                return value;\n            case 0xcd:\n                value = this._view.getUint16(this._offset);\n                this._offset += 2;\n                return value;\n            case 0xce:\n                value = this._view.getUint32(this._offset);\n                this._offset += 4;\n                return value;\n            case 0xcf:\n                hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n                lo = this._view.getUint32(this._offset + 4);\n                this._offset += 8;\n                return hi + lo;\n            // int\n            case 0xd0:\n                value = this._view.getInt8(this._offset);\n                this._offset += 1;\n                return value;\n            case 0xd1:\n                value = this._view.getInt16(this._offset);\n                this._offset += 2;\n                return value;\n            case 0xd2:\n                value = this._view.getInt32(this._offset);\n                this._offset += 4;\n                return value;\n            case 0xd3:\n                hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n                lo = this._view.getUint32(this._offset + 4);\n                this._offset += 8;\n                return hi + lo;\n            // fixext\n            case 0xd4:\n                type = this._view.getInt8(this._offset);\n                this._offset += 1;\n                if (type === 0x00) {\n                    // custom encoding for 'undefined' (kept for backward-compatibility)\n                    this._offset += 1;\n                    return void 0;\n                }\n                return [type, this._bin(1)];\n            case 0xd5:\n                type = this._view.getInt8(this._offset);\n                this._offset += 1;\n                return [type, this._bin(2)];\n            case 0xd6:\n                type = this._view.getInt8(this._offset);\n                this._offset += 1;\n                if (type === -1) {\n                    // timestamp 32\n                    value = this._view.getUint32(this._offset);\n                    this._offset += 4;\n                    return new Date(value * 1e3);\n                }\n                return [type, this._bin(4)];\n            case 0xd7:\n                type = this._view.getInt8(this._offset);\n                this._offset += 1;\n                if (type === 0x00) {\n                    // custom date encoding (kept for backward-compatibility)\n                    hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n                    lo = this._view.getUint32(this._offset + 4);\n                    this._offset += 8;\n                    return new Date(hi + lo);\n                }\n                if (type === -1) {\n                    // timestamp 64\n                    hi = this._view.getUint32(this._offset);\n                    lo = this._view.getUint32(this._offset + 4);\n                    this._offset += 8;\n                    var s = (hi & 0x3) * 0x100000000 + lo;\n                    return new Date(s * 1e3 + (hi >>> 2) / 1e6);\n                }\n                return [type, this._bin(8)];\n            case 0xd8:\n                type = this._view.getInt8(this._offset);\n                this._offset += 1;\n                return [type, this._bin(16)];\n            // str\n            case 0xd9:\n                length = this._view.getUint8(this._offset);\n                this._offset += 1;\n                return this._str(length);\n            case 0xda:\n                length = this._view.getUint16(this._offset);\n                this._offset += 2;\n                return this._str(length);\n            case 0xdb:\n                length = this._view.getUint32(this._offset);\n                this._offset += 4;\n                return this._str(length);\n            // array\n            case 0xdc:\n                length = this._view.getUint16(this._offset);\n                this._offset += 2;\n                return this._array(length);\n            case 0xdd:\n                length = this._view.getUint32(this._offset);\n                this._offset += 4;\n                return this._array(length);\n            // map\n            case 0xde:\n                length = this._view.getUint16(this._offset);\n                this._offset += 2;\n                return this._map(length);\n            case 0xdf:\n                length = this._view.getUint32(this._offset);\n                this._offset += 4;\n                return this._map(length);\n        }\n        throw new Error('Could not parse');\n    };\n    function decode(buffer, offset) {\n        if (offset === void 0) { offset = 0; }\n        var decoder = new Decoder(buffer, offset);\n        var value = decoder._parse();\n        if (decoder._offset !== buffer.byteLength) {\n            throw new Error((buffer.byteLength - decoder._offset) + ' trailing bytes');\n        }\n        return value;\n    }\n    //\n    // ENCODER\n    //\n    var TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\n    var TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n    function utf8Write(view, offset, str) {\n        var c = 0;\n        for (var i = 0, l = str.length; i < l; i++) {\n            c = str.charCodeAt(i);\n            if (c < 0x80) {\n                view.setUint8(offset++, c);\n            }\n            else if (c < 0x800) {\n                view.setUint8(offset++, 0xc0 | (c >> 6));\n                view.setUint8(offset++, 0x80 | (c & 0x3f));\n            }\n            else if (c < 0xd800 || c >= 0xe000) {\n                view.setUint8(offset++, 0xe0 | (c >> 12));\n                view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n                view.setUint8(offset++, 0x80 | (c & 0x3f));\n            }\n            else {\n                i++;\n                c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n                view.setUint8(offset++, 0xf0 | (c >> 18));\n                view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n                view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n                view.setUint8(offset++, 0x80 | (c & 0x3f));\n            }\n        }\n    }\n    function utf8Length$1(str) {\n        var c = 0, length = 0;\n        for (var i = 0, l = str.length; i < l; i++) {\n            c = str.charCodeAt(i);\n            if (c < 0x80) {\n                length += 1;\n            }\n            else if (c < 0x800) {\n                length += 2;\n            }\n            else if (c < 0xd800 || c >= 0xe000) {\n                length += 3;\n            }\n            else {\n                i++;\n                length += 4;\n            }\n        }\n        return length;\n    }\n    function _encode(bytes, defers, value) {\n        var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n        if (type === 'string') {\n            length = utf8Length$1(value);\n            // fixstr\n            if (length < 0x20) {\n                bytes.push(length | 0xa0);\n                size = 1;\n            }\n            // str 8\n            else if (length < 0x100) {\n                bytes.push(0xd9, length);\n                size = 2;\n            }\n            // str 16\n            else if (length < 0x10000) {\n                bytes.push(0xda, length >> 8, length);\n                size = 3;\n            }\n            // str 32\n            else if (length < 0x100000000) {\n                bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n                size = 5;\n            }\n            else {\n                throw new Error('String too long');\n            }\n            defers.push({ _str: value, _length: length, _offset: bytes.length });\n            return size + length;\n        }\n        if (type === 'number') {\n            // TODO: encode to float 32?\n            // float 64\n            if (Math.floor(value) !== value || !isFinite(value)) {\n                bytes.push(0xcb);\n                defers.push({ _float: value, _length: 8, _offset: bytes.length });\n                return 9;\n            }\n            if (value >= 0) {\n                // positive fixnum\n                if (value < 0x80) {\n                    bytes.push(value);\n                    return 1;\n                }\n                // uint 8\n                if (value < 0x100) {\n                    bytes.push(0xcc, value);\n                    return 2;\n                }\n                // uint 16\n                if (value < 0x10000) {\n                    bytes.push(0xcd, value >> 8, value);\n                    return 3;\n                }\n                // uint 32\n                if (value < 0x100000000) {\n                    bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n                    return 5;\n                }\n                // uint 64\n                hi = (value / Math.pow(2, 32)) >> 0;\n                lo = value >>> 0;\n                bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n                return 9;\n            }\n            else {\n                // negative fixnum\n                if (value >= -0x20) {\n                    bytes.push(value);\n                    return 1;\n                }\n                // int 8\n                if (value >= -0x80) {\n                    bytes.push(0xd0, value);\n                    return 2;\n                }\n                // int 16\n                if (value >= -0x8000) {\n                    bytes.push(0xd1, value >> 8, value);\n                    return 3;\n                }\n                // int 32\n                if (value >= -0x80000000) {\n                    bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n                    return 5;\n                }\n                // int 64\n                hi = Math.floor(value / Math.pow(2, 32));\n                lo = value >>> 0;\n                bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n                return 9;\n            }\n        }\n        if (type === 'object') {\n            // nil\n            if (value === null) {\n                bytes.push(0xc0);\n                return 1;\n            }\n            if (Array.isArray(value)) {\n                length = value.length;\n                // fixarray\n                if (length < 0x10) {\n                    bytes.push(length | 0x90);\n                    size = 1;\n                }\n                // array 16\n                else if (length < 0x10000) {\n                    bytes.push(0xdc, length >> 8, length);\n                    size = 3;\n                }\n                // array 32\n                else if (length < 0x100000000) {\n                    bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n                    size = 5;\n                }\n                else {\n                    throw new Error('Array too large');\n                }\n                for (i = 0; i < length; i++) {\n                    size += _encode(bytes, defers, value[i]);\n                }\n                return size;\n            }\n            if (value instanceof Date) {\n                var ms = value.getTime();\n                var s = Math.floor(ms / 1e3);\n                var ns = (ms - s * 1e3) * 1e6;\n                if (s >= 0 && ns >= 0 && s <= TIMESTAMP64_MAX_SEC) {\n                    if (ns === 0 && s <= TIMESTAMP32_MAX_SEC) {\n                        // timestamp 32\n                        bytes.push(0xd6, 0xff, s >> 24, s >> 16, s >> 8, s);\n                        return 6;\n                    }\n                    else {\n                        // timestamp 64\n                        hi = s / 0x100000000;\n                        lo = s & 0xffffffff;\n                        bytes.push(0xd7, 0xff, ns >> 22, ns >> 14, ns >> 6, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n                        return 10;\n                    }\n                }\n                else {\n                    // timestamp 96\n                    hi = Math.floor(s / 0x100000000);\n                    lo = s >>> 0;\n                    bytes.push(0xc7, 0x0c, 0xff, ns >> 24, ns >> 16, ns >> 8, ns, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n                    return 15;\n                }\n            }\n            if (value instanceof ArrayBuffer) {\n                length = value.byteLength;\n                // bin 8\n                if (length < 0x100) {\n                    bytes.push(0xc4, length);\n                    size = 2;\n                }\n                else \n                // bin 16\n                if (length < 0x10000) {\n                    bytes.push(0xc5, length >> 8, length);\n                    size = 3;\n                }\n                else \n                // bin 32\n                if (length < 0x100000000) {\n                    bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n                    size = 5;\n                }\n                else {\n                    throw new Error('Buffer too large');\n                }\n                defers.push({ _bin: value, _length: length, _offset: bytes.length });\n                return size + length;\n            }\n            if (typeof value.toJSON === 'function') {\n                return _encode(bytes, defers, value.toJSON());\n            }\n            var keys = [], key = '';\n            var allKeys = Object.keys(value);\n            for (i = 0, l = allKeys.length; i < l; i++) {\n                key = allKeys[i];\n                if (value[key] !== undefined && typeof value[key] !== 'function') {\n                    keys.push(key);\n                }\n            }\n            length = keys.length;\n            // fixmap\n            if (length < 0x10) {\n                bytes.push(length | 0x80);\n                size = 1;\n            }\n            // map 16\n            else if (length < 0x10000) {\n                bytes.push(0xde, length >> 8, length);\n                size = 3;\n            }\n            // map 32\n            else if (length < 0x100000000) {\n                bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n                size = 5;\n            }\n            else {\n                throw new Error('Object too large');\n            }\n            for (i = 0; i < length; i++) {\n                key = keys[i];\n                size += _encode(bytes, defers, key);\n                size += _encode(bytes, defers, value[key]);\n            }\n            return size;\n        }\n        // false/true\n        if (type === 'boolean') {\n            bytes.push(value ? 0xc3 : 0xc2);\n            return 1;\n        }\n        if (type === 'undefined') {\n            bytes.push(0xc0);\n            return 1;\n        }\n        // custom types like BigInt (typeof value === 'bigint')\n        if (typeof value.toJSON === 'function') {\n            return _encode(bytes, defers, value.toJSON());\n        }\n        throw new Error('Could not encode');\n    }\n    function encode(value) {\n        var bytes = [];\n        var defers = [];\n        var size = _encode(bytes, defers, value);\n        var buf = new ArrayBuffer(size);\n        var view = new DataView(buf);\n        var deferIndex = 0;\n        var deferWritten = 0;\n        var nextOffset = -1;\n        if (defers.length > 0) {\n            nextOffset = defers[0]._offset;\n        }\n        var defer, deferLength = 0, offset = 0;\n        for (var i = 0, l = bytes.length; i < l; i++) {\n            view.setUint8(deferWritten + i, bytes[i]);\n            if (i + 1 !== nextOffset) {\n                continue;\n            }\n            defer = defers[deferIndex];\n            deferLength = defer._length;\n            offset = deferWritten + nextOffset;\n            if (defer._bin) {\n                var bin = new Uint8Array(defer._bin);\n                for (var j = 0; j < deferLength; j++) {\n                    view.setUint8(offset + j, bin[j]);\n                }\n            }\n            else if (defer._str) {\n                utf8Write(view, offset, defer._str);\n            }\n            else if (defer._float !== undefined) {\n                view.setFloat64(offset, defer._float);\n            }\n            deferIndex++;\n            deferWritten += deferLength;\n            if (defers[deferIndex]) {\n                nextOffset = defers[deferIndex]._offset;\n            }\n        }\n        return buf;\n    }\n\n    var browser = function () {\n      throw new Error(\n        'ws does not work in the browser. Browser clients must use the native ' +\n          'WebSocket object'\n      );\n    };\n\n    var WebSocket = globalThis.WebSocket || browser;\n    var WebSocketTransport = /** @class */ (function () {\n        function WebSocketTransport(events) {\n            this.events = events;\n        }\n        WebSocketTransport.prototype.send = function (data) {\n            if (data instanceof ArrayBuffer) {\n                this.ws.send(data);\n            }\n            else if (Array.isArray(data)) {\n                this.ws.send((new Uint8Array(data)).buffer);\n            }\n        };\n        WebSocketTransport.prototype.connect = function (url) {\n            this.ws = new WebSocket(url, this.protocols);\n            this.ws.binaryType = 'arraybuffer';\n            this.ws.onopen = this.events.onopen;\n            this.ws.onmessage = this.events.onmessage;\n            this.ws.onclose = this.events.onclose;\n            this.ws.onerror = this.events.onerror;\n        };\n        WebSocketTransport.prototype.close = function (code, reason) {\n            this.ws.close(code, reason);\n        };\n        Object.defineProperty(WebSocketTransport.prototype, \"isOpen\", {\n            get: function () {\n                return this.ws.readyState === WebSocket.OPEN;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return WebSocketTransport;\n    }());\n\n    var Connection = /** @class */ (function () {\n        function Connection() {\n            this.events = {};\n            this.transport = new WebSocketTransport(this.events);\n        }\n        Connection.prototype.send = function (data) {\n            this.transport.send(data);\n        };\n        Connection.prototype.connect = function (url) {\n            this.transport.connect(url);\n        };\n        Connection.prototype.close = function (code, reason) {\n            this.transport.close(code, reason);\n        };\n        Object.defineProperty(Connection.prototype, \"isOpen\", {\n            get: function () {\n                return this.transport.isOpen;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return Connection;\n    }());\n\n    // Use codes between 0~127 for lesser throughput (1 byte)\n    exports.Protocol = void 0;\n    (function (Protocol) {\n        // Room-related (10~19)\n        Protocol[Protocol[\"HANDSHAKE\"] = 9] = \"HANDSHAKE\";\n        Protocol[Protocol[\"JOIN_ROOM\"] = 10] = \"JOIN_ROOM\";\n        Protocol[Protocol[\"ERROR\"] = 11] = \"ERROR\";\n        Protocol[Protocol[\"LEAVE_ROOM\"] = 12] = \"LEAVE_ROOM\";\n        Protocol[Protocol[\"ROOM_DATA\"] = 13] = \"ROOM_DATA\";\n        Protocol[Protocol[\"ROOM_STATE\"] = 14] = \"ROOM_STATE\";\n        Protocol[Protocol[\"ROOM_STATE_PATCH\"] = 15] = \"ROOM_STATE_PATCH\";\n        Protocol[Protocol[\"ROOM_DATA_SCHEMA\"] = 16] = \"ROOM_DATA_SCHEMA\";\n        Protocol[Protocol[\"ROOM_DATA_BYTES\"] = 17] = \"ROOM_DATA_BYTES\";\n    })(exports.Protocol || (exports.Protocol = {}));\n    exports.ErrorCode = void 0;\n    (function (ErrorCode) {\n        ErrorCode[ErrorCode[\"MATCHMAKE_NO_HANDLER\"] = 4210] = \"MATCHMAKE_NO_HANDLER\";\n        ErrorCode[ErrorCode[\"MATCHMAKE_INVALID_CRITERIA\"] = 4211] = \"MATCHMAKE_INVALID_CRITERIA\";\n        ErrorCode[ErrorCode[\"MATCHMAKE_INVALID_ROOM_ID\"] = 4212] = \"MATCHMAKE_INVALID_ROOM_ID\";\n        ErrorCode[ErrorCode[\"MATCHMAKE_UNHANDLED\"] = 4213] = \"MATCHMAKE_UNHANDLED\";\n        ErrorCode[ErrorCode[\"MATCHMAKE_EXPIRED\"] = 4214] = \"MATCHMAKE_EXPIRED\";\n        ErrorCode[ErrorCode[\"AUTH_FAILED\"] = 4215] = \"AUTH_FAILED\";\n        ErrorCode[ErrorCode[\"APPLICATION_ERROR\"] = 4216] = \"APPLICATION_ERROR\";\n    })(exports.ErrorCode || (exports.ErrorCode = {}));\n    function utf8Read(view, offset) {\n        var length = view[offset++];\n        var string = '', chr = 0;\n        for (var i = offset, end = offset + length; i < end; i++) {\n            var byte = view[i];\n            if ((byte & 0x80) === 0x00) {\n                string += String.fromCharCode(byte);\n                continue;\n            }\n            if ((byte & 0xe0) === 0xc0) {\n                string += String.fromCharCode(((byte & 0x1f) << 6) |\n                    (view[++i] & 0x3f));\n                continue;\n            }\n            if ((byte & 0xf0) === 0xe0) {\n                string += String.fromCharCode(((byte & 0x0f) << 12) |\n                    ((view[++i] & 0x3f) << 6) |\n                    ((view[++i] & 0x3f) << 0));\n                continue;\n            }\n            if ((byte & 0xf8) === 0xf0) {\n                chr = ((byte & 0x07) << 18) |\n                    ((view[++i] & 0x3f) << 12) |\n                    ((view[++i] & 0x3f) << 6) |\n                    ((view[++i] & 0x3f) << 0);\n                if (chr >= 0x010000) { // surrogate pair\n                    chr -= 0x010000;\n                    string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n                }\n                else {\n                    string += String.fromCharCode(chr);\n                }\n                continue;\n            }\n            throw new Error('Invalid byte ' + byte.toString(16));\n        }\n        return string;\n    }\n    // Faster for short strings than Buffer.byteLength\n    function utf8Length(str) {\n        if (str === void 0) { str = ''; }\n        var c = 0;\n        var length = 0;\n        for (var i = 0, l = str.length; i < l; i++) {\n            c = str.charCodeAt(i);\n            if (c < 0x80) {\n                length += 1;\n            }\n            else if (c < 0x800) {\n                length += 2;\n            }\n            else if (c < 0xd800 || c >= 0xe000) {\n                length += 3;\n            }\n            else {\n                i++;\n                length += 4;\n            }\n        }\n        return length + 1;\n    }\n\n    var serializers = {};\n    function registerSerializer(id, serializer) {\n        serializers[id] = serializer;\n    }\n    function getSerializer(id) {\n        var serializer = serializers[id];\n        if (!serializer) {\n            throw new Error(\"missing serializer: \" + id);\n        }\n        return serializer;\n    }\n\n    let createNanoEvents = () => ({\n      events: {},\n      emit(event, ...args) {\n    (this.events[event] || []).forEach(i => i(...args));\n      },\n      on(event, cb) {\n    (this.events[event] = this.events[event] || []).push(cb);\n        return () =>\n          (this.events[event] = (this.events[event] || []).filter(i => i !== cb))\n      }\n    });\n\n    var EventEmitter = /** @class */ (function () {\n        function EventEmitter() {\n            this.handlers = [];\n        }\n        EventEmitter.prototype.register = function (cb, once) {\n            this.handlers.push(cb);\n            return this;\n        };\n        EventEmitter.prototype.invoke = function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            this.handlers.forEach(function (handler) { return handler.apply(_this, args); });\n        };\n        EventEmitter.prototype.invokeAsync = function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return Promise.all(this.handlers.map(function (handler) { return handler.apply(_this, args); }));\n        };\n        EventEmitter.prototype.remove = function (cb) {\n            var index = this.handlers.indexOf(cb);\n            this.handlers[index] = this.handlers[this.handlers.length - 1];\n            this.handlers.pop();\n        };\n        EventEmitter.prototype.clear = function () {\n            this.handlers = [];\n        };\n        return EventEmitter;\n    }());\n    function createSignal() {\n        var emitter = new EventEmitter();\n        function register(cb) {\n            return emitter.register(cb, this === null);\n        }\n        register.once = function (cb) {\n            var callback = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                cb.apply(this, args);\n                emitter.remove(callback);\n            };\n            emitter.register(callback);\n        };\n        register.remove = function (cb) { return emitter.remove(cb); };\n        register.invoke = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return emitter.invoke.apply(emitter, args);\n        };\n        register.invokeAsync = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return emitter.invokeAsync.apply(emitter, args);\n        };\n        register.clear = function () { return emitter.clear(); };\n        return register;\n    }\n\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\n    function createCommonjsModule(fn) {\n      var module = { exports: {} };\n    \treturn fn(module, module.exports), module.exports;\n    }\n\n    var umd = createCommonjsModule(function (module, exports) {\n    (function (global, factory) {\n        factory(exports) ;\n    })(commonjsGlobal, (function (exports) {\n        /******************************************************************************\r\n        Copyright (c) Microsoft Corporation.\r\n\r\n        Permission to use, copy, modify, and/or distribute this software for any\r\n        purpose with or without fee is hereby granted.\r\n\r\n        THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n        REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n        AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n        INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n        LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n        OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n        PERFORMANCE OF THIS SOFTWARE.\r\n        ***************************************************************************** */\r\n        /* global Reflect, Promise */\r\n\r\n        var extendStatics = function(d, b) {\r\n            extendStatics = Object.setPrototypeOf ||\r\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n                function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n            return extendStatics(d, b);\r\n        };\r\n\r\n        function __extends(d, b) {\r\n            if (typeof b !== \"function\" && b !== null)\r\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n            extendStatics(d, b);\r\n            function __() { this.constructor = d; }\r\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n        }\r\n\r\n        function __decorate(decorators, target, key, desc) {\r\n            var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n            if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n            else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n        }\r\n\r\n        function __spreadArray(to, from, pack) {\r\n            if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n                if (ar || !(i in from)) {\r\n                    if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                    ar[i] = from[i];\r\n                }\r\n            }\r\n            return to.concat(ar || Array.prototype.slice.call(from));\r\n        }\n\n        // export const SWITCH_TO_STRUCTURE = 193; (easily collides with DELETE_AND_ADD + fieldIndex = 2)\n        var SWITCH_TO_STRUCTURE = 255; // (decoding collides with DELETE_AND_ADD + fieldIndex = 63)\n        var TYPE_ID = 213;\n        /**\n         * Encoding Schema field operations.\n         */\n        exports.OPERATION = void 0;\n        (function (OPERATION) {\n            // add new structure/primitive\n            OPERATION[OPERATION[\"ADD\"] = 128] = \"ADD\";\n            // replace structure/primitive\n            OPERATION[OPERATION[\"REPLACE\"] = 0] = \"REPLACE\";\n            // delete field\n            OPERATION[OPERATION[\"DELETE\"] = 64] = \"DELETE\";\n            // DELETE field, followed by an ADD\n            OPERATION[OPERATION[\"DELETE_AND_ADD\"] = 192] = \"DELETE_AND_ADD\";\n            // TOUCH is used to determine hierarchy of nested Schema structures during serialization.\n            // touches are NOT encoded.\n            OPERATION[OPERATION[\"TOUCH\"] = 1] = \"TOUCH\";\n            // MapSchema Operations\n            OPERATION[OPERATION[\"CLEAR\"] = 10] = \"CLEAR\";\n        })(exports.OPERATION || (exports.OPERATION = {}));\n        // export enum OPERATION {\n        //     // add new structure/primitive\n        //     // (128)\n        //     ADD = 128, // 10000000,\n        //     // replace structure/primitive\n        //     REPLACE = 1,// 00000001\n        //     // delete field\n        //     DELETE = 192, // 11000000\n        //     // DELETE field, followed by an ADD\n        //     DELETE_AND_ADD = 224, // 11100000\n        //     // TOUCH is used to determine hierarchy of nested Schema structures during serialization.\n        //     // touches are NOT encoded.\n        //     TOUCH = 0, // 00000000\n        //     // MapSchema Operations\n        //     CLEAR = 10,\n        // }\n\n        var ChangeTree = /** @class */ (function () {\n            function ChangeTree(ref, parent, root) {\n                this.changed = false;\n                this.changes = new Map();\n                this.allChanges = new Set();\n                // cached indexes for filtering\n                this.caches = {};\n                this.currentCustomOperation = 0;\n                this.ref = ref;\n                this.setParent(parent, root);\n            }\n            ChangeTree.prototype.setParent = function (parent, root, parentIndex) {\n                var _this = this;\n                if (!this.indexes) {\n                    this.indexes = (this.ref instanceof Schema)\n                        ? this.ref['_definition'].indexes\n                        : {};\n                }\n                this.parent = parent;\n                this.parentIndex = parentIndex;\n                // avoid setting parents with empty `root`\n                if (!root) {\n                    return;\n                }\n                this.root = root;\n                //\n                // assign same parent on child structures\n                //\n                if (this.ref instanceof Schema) {\n                    var definition = this.ref['_definition'];\n                    for (var field in definition.schema) {\n                        var value = this.ref[field];\n                        if (value && value['$changes']) {\n                            var parentIndex_1 = definition.indexes[field];\n                            value['$changes'].setParent(this.ref, root, parentIndex_1);\n                        }\n                    }\n                }\n                else if (typeof (this.ref) === \"object\") {\n                    this.ref.forEach(function (value, key) {\n                        if (value instanceof Schema) {\n                            var changeTreee = value['$changes'];\n                            var parentIndex_2 = _this.ref['$changes'].indexes[key];\n                            changeTreee.setParent(_this.ref, _this.root, parentIndex_2);\n                        }\n                    });\n                }\n            };\n            ChangeTree.prototype.operation = function (op) {\n                this.changes.set(--this.currentCustomOperation, op);\n            };\n            ChangeTree.prototype.change = function (fieldName, operation) {\n                if (operation === void 0) { operation = exports.OPERATION.ADD; }\n                var index = (typeof (fieldName) === \"number\")\n                    ? fieldName\n                    : this.indexes[fieldName];\n                this.assertValidIndex(index, fieldName);\n                var previousChange = this.changes.get(index);\n                if (!previousChange ||\n                    previousChange.op === exports.OPERATION.DELETE ||\n                    previousChange.op === exports.OPERATION.TOUCH // (mazmorra.io's BattleAction issue)\n                ) {\n                    this.changes.set(index, {\n                        op: (!previousChange)\n                            ? operation\n                            : (previousChange.op === exports.OPERATION.DELETE)\n                                ? exports.OPERATION.DELETE_AND_ADD\n                                : operation,\n                        // : OPERATION.REPLACE,\n                        index: index\n                    });\n                }\n                this.allChanges.add(index);\n                this.changed = true;\n                this.touchParents();\n            };\n            ChangeTree.prototype.touch = function (fieldName) {\n                var index = (typeof (fieldName) === \"number\")\n                    ? fieldName\n                    : this.indexes[fieldName];\n                this.assertValidIndex(index, fieldName);\n                if (!this.changes.has(index)) {\n                    this.changes.set(index, { op: exports.OPERATION.TOUCH, index: index });\n                }\n                this.allChanges.add(index);\n                // ensure touch is placed until the $root is found.\n                this.touchParents();\n            };\n            ChangeTree.prototype.touchParents = function () {\n                if (this.parent) {\n                    this.parent['$changes'].touch(this.parentIndex);\n                }\n            };\n            ChangeTree.prototype.getType = function (index) {\n                if (this.ref['_definition']) {\n                    var definition = this.ref['_definition'];\n                    return definition.schema[definition.fieldsByIndex[index]];\n                }\n                else {\n                    var definition = this.parent['_definition'];\n                    var parentType = definition.schema[definition.fieldsByIndex[this.parentIndex]];\n                    //\n                    // Get the child type from parent structure.\n                    // - [\"string\"] => \"string\"\n                    // - { map: \"string\" } => \"string\"\n                    // - { set: \"string\" } => \"string\"\n                    //\n                    return Object.values(parentType)[0];\n                }\n            };\n            ChangeTree.prototype.getChildrenFilter = function () {\n                var childFilters = this.parent['_definition'].childFilters;\n                return childFilters && childFilters[this.parentIndex];\n            };\n            //\n            // used during `.encode()`\n            //\n            ChangeTree.prototype.getValue = function (index) {\n                return this.ref['getByIndex'](index);\n            };\n            ChangeTree.prototype.delete = function (fieldName) {\n                var index = (typeof (fieldName) === \"number\")\n                    ? fieldName\n                    : this.indexes[fieldName];\n                if (index === undefined) {\n                    console.warn(\"@colyseus/schema \".concat(this.ref.constructor.name, \": trying to delete non-existing index: \").concat(fieldName, \" (\").concat(index, \")\"));\n                    return;\n                }\n                var previousValue = this.getValue(index);\n                // console.log(\"$changes.delete =>\", { fieldName, index, previousValue });\n                this.changes.set(index, { op: exports.OPERATION.DELETE, index: index });\n                this.allChanges.delete(index);\n                // delete cache\n                delete this.caches[index];\n                // remove `root` reference\n                if (previousValue && previousValue['$changes']) {\n                    previousValue['$changes'].parent = undefined;\n                }\n                this.changed = true;\n                this.touchParents();\n            };\n            ChangeTree.prototype.discard = function (changed, discardAll) {\n                var _this = this;\n                if (changed === void 0) { changed = false; }\n                if (discardAll === void 0) { discardAll = false; }\n                //\n                // Map, Array, etc:\n                // Remove cached key to ensure ADD operations is unsed instead of\n                // REPLACE in case same key is used on next patches.\n                //\n                // TODO: refactor this. this is not relevant for Collection and Set.\n                //\n                if (!(this.ref instanceof Schema)) {\n                    this.changes.forEach(function (change) {\n                        if (change.op === exports.OPERATION.DELETE) {\n                            var index = _this.ref['getIndex'](change.index);\n                            delete _this.indexes[index];\n                        }\n                    });\n                }\n                this.changes.clear();\n                this.changed = changed;\n                if (discardAll) {\n                    this.allChanges.clear();\n                }\n                // re-set `currentCustomOperation`\n                this.currentCustomOperation = 0;\n            };\n            /**\n             * Recursively discard all changes from this, and child structures.\n             */\n            ChangeTree.prototype.discardAll = function () {\n                var _this = this;\n                this.changes.forEach(function (change) {\n                    var value = _this.getValue(change.index);\n                    if (value && value['$changes']) {\n                        value['$changes'].discardAll();\n                    }\n                });\n                this.discard();\n            };\n            // cache(field: number, beginIndex: number, endIndex: number) {\n            ChangeTree.prototype.cache = function (field, cachedBytes) {\n                this.caches[field] = cachedBytes;\n            };\n            ChangeTree.prototype.clone = function () {\n                return new ChangeTree(this.ref, this.parent, this.root);\n            };\n            ChangeTree.prototype.ensureRefId = function () {\n                // skip if refId is already set.\n                if (this.refId !== undefined) {\n                    return;\n                }\n                this.refId = this.root.getNextUniqueId();\n            };\n            ChangeTree.prototype.assertValidIndex = function (index, fieldName) {\n                if (index === undefined) {\n                    throw new Error(\"ChangeTree: missing index for field \\\"\".concat(fieldName, \"\\\"\"));\n                }\n            };\n            return ChangeTree;\n        }());\n\n        function addCallback($callbacks, op, callback, existing) {\n            // initialize list of callbacks\n            if (!$callbacks[op]) {\n                $callbacks[op] = [];\n            }\n            $callbacks[op].push(callback);\n            //\n            // Trigger callback for existing elements\n            // - OPERATION.ADD\n            // - OPERATION.REPLACE\n            //\n            existing === null || existing === void 0 ? void 0 : existing.forEach(function (item, key) { return callback(item, key); });\n            return function () { return spliceOne($callbacks[op], $callbacks[op].indexOf(callback)); };\n        }\n        function removeChildRefs(changes) {\n            var _this = this;\n            var needRemoveRef = (typeof (this.$changes.getType()) !== \"string\");\n            this.$items.forEach(function (item, key) {\n                changes.push({\n                    refId: _this.$changes.refId,\n                    op: exports.OPERATION.DELETE,\n                    field: key,\n                    value: undefined,\n                    previousValue: item\n                });\n                if (needRemoveRef) {\n                    _this.$changes.root.removeRef(item['$changes'].refId);\n                }\n            });\n        }\n        function spliceOne(arr, index) {\n            // manually splice an array\n            if (index === -1 || index >= arr.length) {\n                return false;\n            }\n            var len = arr.length - 1;\n            for (var i = index; i < len; i++) {\n                arr[i] = arr[i + 1];\n            }\n            arr.length = len;\n            return true;\n        }\n\n        var DEFAULT_SORT = function (a, b) {\n            var A = a.toString();\n            var B = b.toString();\n            if (A < B)\n                return -1;\n            else if (A > B)\n                return 1;\n            else\n                return 0;\n        };\n        function getArrayProxy(value) {\n            value['$proxy'] = true;\n            //\n            // compatibility with @colyseus/schema 0.5.x\n            // - allow `map[\"key\"]`\n            // - allow `map[\"key\"] = \"xxx\"`\n            // - allow `delete map[\"key\"]`\n            //\n            value = new Proxy(value, {\n                get: function (obj, prop) {\n                    if (typeof (prop) !== \"symbol\" &&\n                        !isNaN(prop) // https://stackoverflow.com/a/175787/892698\n                    ) {\n                        return obj.at(prop);\n                    }\n                    else {\n                        return obj[prop];\n                    }\n                },\n                set: function (obj, prop, setValue) {\n                    if (typeof (prop) !== \"symbol\" &&\n                        !isNaN(prop)) {\n                        var indexes = Array.from(obj['$items'].keys());\n                        var key = parseInt(indexes[prop] || prop);\n                        if (setValue === undefined || setValue === null) {\n                            obj.deleteAt(key);\n                        }\n                        else {\n                            obj.setAt(key, setValue);\n                        }\n                    }\n                    else {\n                        obj[prop] = setValue;\n                    }\n                    return true;\n                },\n                deleteProperty: function (obj, prop) {\n                    if (typeof (prop) === \"number\") {\n                        obj.deleteAt(prop);\n                    }\n                    else {\n                        delete obj[prop];\n                    }\n                    return true;\n                },\n            });\n            return value;\n        }\n        var ArraySchema = /** @class */ (function () {\n            function ArraySchema() {\n                var items = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    items[_i] = arguments[_i];\n                }\n                this.$changes = new ChangeTree(this);\n                this.$items = new Map();\n                this.$indexes = new Map();\n                this.$refId = 0;\n                this.push.apply(this, items);\n            }\n            ArraySchema.prototype.onAdd = function (callback, triggerAll) {\n                if (triggerAll === void 0) { triggerAll = true; }\n                return addCallback((this.$callbacks || (this.$callbacks = [])), exports.OPERATION.ADD, callback, (triggerAll)\n                    ? this.$items\n                    : undefined);\n            };\n            ArraySchema.prototype.onRemove = function (callback) { return addCallback(this.$callbacks || (this.$callbacks = []), exports.OPERATION.DELETE, callback); };\n            ArraySchema.prototype.onChange = function (callback) { return addCallback(this.$callbacks || (this.$callbacks = []), exports.OPERATION.REPLACE, callback); };\n            ArraySchema.is = function (type) {\n                return (\n                // type format: [\"string\"]\n                Array.isArray(type) ||\n                    // type format: { array: \"string\" }\n                    (type['array'] !== undefined));\n            };\n            Object.defineProperty(ArraySchema.prototype, \"length\", {\n                get: function () {\n                    return this.$items.size;\n                },\n                set: function (value) {\n                    if (value === 0) {\n                        this.clear();\n                    }\n                    else {\n                        this.splice(value, this.length - value);\n                    }\n                },\n                enumerable: false,\n                configurable: true\n            });\n            ArraySchema.prototype.push = function () {\n                var _this = this;\n                var values = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    values[_i] = arguments[_i];\n                }\n                var lastIndex;\n                values.forEach(function (value) {\n                    // set \"index\" for reference.\n                    lastIndex = _this.$refId++;\n                    _this.setAt(lastIndex, value);\n                });\n                return lastIndex;\n            };\n            /**\n             * Removes the last element from an array and returns it.\n             */\n            ArraySchema.prototype.pop = function () {\n                var key = Array.from(this.$indexes.values()).pop();\n                if (key === undefined) {\n                    return undefined;\n                }\n                this.$changes.delete(key);\n                this.$indexes.delete(key);\n                var value = this.$items.get(key);\n                this.$items.delete(key);\n                return value;\n            };\n            ArraySchema.prototype.at = function (index) {\n                //\n                // FIXME: this should be O(1)\n                //\n                var key = Array.from(this.$items.keys())[index];\n                return this.$items.get(key);\n            };\n            ArraySchema.prototype.setAt = function (index, value) {\n                var _a, _b;\n                if (value['$changes'] !== undefined) {\n                    value['$changes'].setParent(this, this.$changes.root, index);\n                }\n                var operation = (_b = (_a = this.$changes.indexes[index]) === null || _a === void 0 ? void 0 : _a.op) !== null && _b !== void 0 ? _b : exports.OPERATION.ADD;\n                this.$changes.indexes[index] = index;\n                this.$indexes.set(index, index);\n                this.$items.set(index, value);\n                this.$changes.change(index, operation);\n            };\n            ArraySchema.prototype.deleteAt = function (index) {\n                var key = Array.from(this.$items.keys())[index];\n                if (key === undefined) {\n                    return false;\n                }\n                return this.$deleteAt(key);\n            };\n            ArraySchema.prototype.$deleteAt = function (index) {\n                // delete at internal index\n                this.$changes.delete(index);\n                this.$indexes.delete(index);\n                return this.$items.delete(index);\n            };\n            ArraySchema.prototype.clear = function (changes) {\n                // discard previous operations.\n                this.$changes.discard(true, true);\n                this.$changes.indexes = {};\n                // clear previous indexes\n                this.$indexes.clear();\n                //\n                // When decoding:\n                // - enqueue items for DELETE callback.\n                // - flag child items for garbage collection.\n                //\n                if (changes) {\n                    removeChildRefs.call(this, changes);\n                }\n                // clear items\n                this.$items.clear();\n                this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n                // touch all structures until reach root\n                this.$changes.touchParents();\n            };\n            /**\n             * Combines two or more arrays.\n             * @param items Additional items to add to the end of array1.\n             */\n            // @ts-ignore\n            ArraySchema.prototype.concat = function () {\n                var _a;\n                var items = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    items[_i] = arguments[_i];\n                }\n                return new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], (_a = Array.from(this.$items.values())).concat.apply(_a, items), false)))();\n            };\n            /**\n             * Adds all the elements of an array separated by the specified separator string.\n             * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n             */\n            ArraySchema.prototype.join = function (separator) {\n                return Array.from(this.$items.values()).join(separator);\n            };\n            /**\n             * Reverses the elements in an Array.\n             */\n            // @ts-ignore\n            ArraySchema.prototype.reverse = function () {\n                var _this = this;\n                var indexes = Array.from(this.$items.keys());\n                var reversedItems = Array.from(this.$items.values()).reverse();\n                reversedItems.forEach(function (item, i) {\n                    _this.setAt(indexes[i], item);\n                });\n                return this;\n            };\n            /**\n             * Removes the first element from an array and returns it.\n             */\n            ArraySchema.prototype.shift = function () {\n                var indexes = Array.from(this.$items.keys());\n                var shiftAt = indexes.shift();\n                if (shiftAt === undefined) {\n                    return undefined;\n                }\n                var value = this.$items.get(shiftAt);\n                this.$deleteAt(shiftAt);\n                return value;\n            };\n            /**\n             * Returns a section of an array.\n             * @param start The beginning of the specified portion of the array.\n             * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n             */\n            ArraySchema.prototype.slice = function (start, end) {\n                var sliced = new ArraySchema();\n                sliced.push.apply(sliced, Array.from(this.$items.values()).slice(start, end));\n                return sliced;\n            };\n            /**\n             * Sorts an array.\n             * @param compareFn Function used to determine the order of the elements. It is expected to return\n             * a negative value if first argument is less than second argument, zero if they're equal and a positive\n             * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n             * ```ts\n             * [11,2,22,1].sort((a, b) => a - b)\n             * ```\n             */\n            ArraySchema.prototype.sort = function (compareFn) {\n                var _this = this;\n                if (compareFn === void 0) { compareFn = DEFAULT_SORT; }\n                var indexes = Array.from(this.$items.keys());\n                var sortedItems = Array.from(this.$items.values()).sort(compareFn);\n                sortedItems.forEach(function (item, i) {\n                    _this.setAt(indexes[i], item);\n                });\n                return this;\n            };\n            /**\n             * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n             * @param start The zero-based location in the array from which to start removing elements.\n             * @param deleteCount The number of elements to remove.\n             * @param items Elements to insert into the array in place of the deleted elements.\n             */\n            ArraySchema.prototype.splice = function (start, deleteCount) {\n                if (deleteCount === void 0) { deleteCount = this.length - start; }\n                var indexes = Array.from(this.$items.keys());\n                var removedItems = [];\n                for (var i = start; i < start + deleteCount; i++) {\n                    removedItems.push(this.$items.get(indexes[i]));\n                    this.$deleteAt(indexes[i]);\n                }\n                return removedItems;\n            };\n            /**\n             * Inserts new elements at the start of an array.\n             * @param items  Elements to insert at the start of the Array.\n             */\n            ArraySchema.prototype.unshift = function () {\n                var _this = this;\n                var items = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    items[_i] = arguments[_i];\n                }\n                var length = this.length;\n                var addedLength = items.length;\n                // const indexes = Array.from(this.$items.keys());\n                var previousValues = Array.from(this.$items.values());\n                items.forEach(function (item, i) {\n                    _this.setAt(i, item);\n                });\n                previousValues.forEach(function (previousValue, i) {\n                    _this.setAt(addedLength + i, previousValue);\n                });\n                return length + addedLength;\n            };\n            /**\n             * Returns the index of the first occurrence of a value in an array.\n             * @param searchElement The value to locate in the array.\n             * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n             */\n            ArraySchema.prototype.indexOf = function (searchElement, fromIndex) {\n                return Array.from(this.$items.values()).indexOf(searchElement, fromIndex);\n            };\n            /**\n             * Returns the index of the last occurrence of a specified value in an array.\n             * @param searchElement The value to locate in the array.\n             * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n             */\n            ArraySchema.prototype.lastIndexOf = function (searchElement, fromIndex) {\n                if (fromIndex === void 0) { fromIndex = this.length - 1; }\n                return Array.from(this.$items.values()).lastIndexOf(searchElement, fromIndex);\n            };\n            /**\n             * Determines whether all the members of an array satisfy the specified test.\n             * @param callbackfn A function that accepts up to three arguments. The every method calls\n             * the callbackfn function for each element in the array until the callbackfn returns a value\n             * which is coercible to the Boolean value false, or until the end of the array.\n             * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n             * If thisArg is omitted, undefined is used as the this value.\n             */\n            ArraySchema.prototype.every = function (callbackfn, thisArg) {\n                return Array.from(this.$items.values()).every(callbackfn, thisArg);\n            };\n            /**\n             * Determines whether the specified callback function returns true for any element of an array.\n             * @param callbackfn A function that accepts up to three arguments. The some method calls\n             * the callbackfn function for each element in the array until the callbackfn returns a value\n             * which is coercible to the Boolean value true, or until the end of the array.\n             * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n             * If thisArg is omitted, undefined is used as the this value.\n             */\n            ArraySchema.prototype.some = function (callbackfn, thisArg) {\n                return Array.from(this.$items.values()).some(callbackfn, thisArg);\n            };\n            /**\n             * Performs the specified action for each element in an array.\n             * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n             * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n             */\n            ArraySchema.prototype.forEach = function (callbackfn, thisArg) {\n                Array.from(this.$items.values()).forEach(callbackfn, thisArg);\n            };\n            /**\n             * Calls a defined callback function on each element of an array, and returns an array that contains the results.\n             * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n             * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n             */\n            ArraySchema.prototype.map = function (callbackfn, thisArg) {\n                return Array.from(this.$items.values()).map(callbackfn, thisArg);\n            };\n            ArraySchema.prototype.filter = function (callbackfn, thisArg) {\n                return Array.from(this.$items.values()).filter(callbackfn, thisArg);\n            };\n            /**\n             * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n             * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n             * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n             */\n            ArraySchema.prototype.reduce = function (callbackfn, initialValue) {\n                return Array.prototype.reduce.apply(Array.from(this.$items.values()), arguments);\n            };\n            /**\n             * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n             * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n             * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n             */\n            ArraySchema.prototype.reduceRight = function (callbackfn, initialValue) {\n                return Array.prototype.reduceRight.apply(Array.from(this.$items.values()), arguments);\n            };\n            /**\n             * Returns the value of the first element in the array where predicate is true, and undefined\n             * otherwise.\n             * @param predicate find calls predicate once for each element of the array, in ascending\n             * order, until it finds one where predicate returns true. If such an element is found, find\n             * immediately returns that element value. Otherwise, find returns undefined.\n             * @param thisArg If provided, it will be used as the this value for each invocation of\n             * predicate. If it is not provided, undefined is used instead.\n             */\n            ArraySchema.prototype.find = function (predicate, thisArg) {\n                return Array.from(this.$items.values()).find(predicate, thisArg);\n            };\n            /**\n             * Returns the index of the first element in the array where predicate is true, and -1\n             * otherwise.\n             * @param predicate find calls predicate once for each element of the array, in ascending\n             * order, until it finds one where predicate returns true. If such an element is found,\n             * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n             * @param thisArg If provided, it will be used as the this value for each invocation of\n             * predicate. If it is not provided, undefined is used instead.\n             */\n            ArraySchema.prototype.findIndex = function (predicate, thisArg) {\n                return Array.from(this.$items.values()).findIndex(predicate, thisArg);\n            };\n            /**\n             * Returns the this object after filling the section identified by start and end with value\n             * @param value value to fill array section with\n             * @param start index to start filling the array at. If start is negative, it is treated as\n             * length+start where length is the length of the array.\n             * @param end index to stop filling the array at. If end is negative, it is treated as\n             * length+end.\n             */\n            ArraySchema.prototype.fill = function (value, start, end) {\n                //\n                // TODO\n                //\n                throw new Error(\"ArraySchema#fill() not implemented\");\n            };\n            /**\n             * Returns the this object after copying a section of the array identified by start and end\n             * to the same array starting at position target\n             * @param target If target is negative, it is treated as length+target where length is the\n             * length of the array.\n             * @param start If start is negative, it is treated as length+start. If end is negative, it\n             * is treated as length+end.\n             * @param end If not specified, length of the this object is used as its default value.\n             */\n            ArraySchema.prototype.copyWithin = function (target, start, end) {\n                //\n                // TODO\n                //\n                throw new Error(\"ArraySchema#copyWithin() not implemented\");\n            };\n            /**\n             * Returns a string representation of an array.\n             */\n            ArraySchema.prototype.toString = function () { return this.$items.toString(); };\n            /**\n             * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\n             */\n            ArraySchema.prototype.toLocaleString = function () { return this.$items.toLocaleString(); };\n            /** Iterator */\n            ArraySchema.prototype[Symbol.iterator] = function () {\n                return Array.from(this.$items.values())[Symbol.iterator]();\n            };\n            /**\n             * Returns an iterable of key, value pairs for every entry in the array\n             */\n            ArraySchema.prototype.entries = function () { return this.$items.entries(); };\n            /**\n             * Returns an iterable of keys in the array\n             */\n            ArraySchema.prototype.keys = function () { return this.$items.keys(); };\n            /**\n             * Returns an iterable of values in the array\n             */\n            ArraySchema.prototype.values = function () { return this.$items.values(); };\n            /**\n             * Determines whether an array includes a certain element, returning true or false as appropriate.\n             * @param searchElement The element to search for.\n             * @param fromIndex The position in this array at which to begin searching for searchElement.\n             */\n            ArraySchema.prototype.includes = function (searchElement, fromIndex) {\n                return Array.from(this.$items.values()).includes(searchElement, fromIndex);\n            };\n            /**\n             * Calls a defined callback function on each element of an array. Then, flattens the result into\n             * a new array.\n             * This is identical to a map followed by flat with depth 1.\n             *\n             * @param callback A function that accepts up to three arguments. The flatMap method calls the\n             * callback function one time for each element in the array.\n             * @param thisArg An object to which the this keyword can refer in the callback function. If\n             * thisArg is omitted, undefined is used as the this value.\n             */\n            // @ts-ignore\n            ArraySchema.prototype.flatMap = function (callback, thisArg) {\n                // @ts-ignore\n                throw new Error(\"ArraySchema#flatMap() is not supported.\");\n            };\n            /**\n             * Returns a new array with all sub-array elements concatenated into it recursively up to the\n             * specified depth.\n             *\n             * @param depth The maximum recursion depth\n             */\n            // @ts-ignore\n            ArraySchema.prototype.flat = function (depth) {\n                throw new Error(\"ArraySchema#flat() is not supported.\");\n            };\n            ArraySchema.prototype.findLast = function () {\n                var arr = Array.from(this.$items.values());\n                // @ts-ignore\n                return arr.findLast.apply(arr, arguments);\n            };\n            ArraySchema.prototype.findLastIndex = function () {\n                var arr = Array.from(this.$items.values());\n                // @ts-ignore\n                return arr.findLastIndex.apply(arr, arguments);\n            };\n            // get size () {\n            //     return this.$items.size;\n            // }\n            ArraySchema.prototype.setIndex = function (index, key) {\n                this.$indexes.set(index, key);\n            };\n            ArraySchema.prototype.getIndex = function (index) {\n                return this.$indexes.get(index);\n            };\n            ArraySchema.prototype.getByIndex = function (index) {\n                return this.$items.get(this.$indexes.get(index));\n            };\n            ArraySchema.prototype.deleteByIndex = function (index) {\n                var key = this.$indexes.get(index);\n                this.$items.delete(key);\n                this.$indexes.delete(index);\n            };\n            ArraySchema.prototype.toArray = function () {\n                return Array.from(this.$items.values());\n            };\n            ArraySchema.prototype.toJSON = function () {\n                return this.toArray().map(function (value) {\n                    return (typeof (value['toJSON']) === \"function\")\n                        ? value['toJSON']()\n                        : value;\n                });\n            };\n            //\n            // Decoding utilities\n            //\n            ArraySchema.prototype.clone = function (isDecoding) {\n                var cloned;\n                if (isDecoding) {\n                    cloned = new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], Array.from(this.$items.values()), false)))();\n                }\n                else {\n                    cloned = new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], this.map(function (item) { return ((item['$changes'])\n                        ? item.clone()\n                        : item); }), false)))();\n                }\n                return cloned;\n            };\n            return ArraySchema;\n        }());\n\n        function getMapProxy(value) {\n            value['$proxy'] = true;\n            value = new Proxy(value, {\n                get: function (obj, prop) {\n                    if (typeof (prop) !== \"symbol\" && // accessing properties\n                        typeof (obj[prop]) === \"undefined\") {\n                        return obj.get(prop);\n                    }\n                    else {\n                        return obj[prop];\n                    }\n                },\n                set: function (obj, prop, setValue) {\n                    if (typeof (prop) !== \"symbol\" &&\n                        (prop.indexOf(\"$\") === -1 &&\n                            prop !== \"onAdd\" &&\n                            prop !== \"onRemove\" &&\n                            prop !== \"onChange\")) {\n                        obj.set(prop, setValue);\n                    }\n                    else {\n                        obj[prop] = setValue;\n                    }\n                    return true;\n                },\n                deleteProperty: function (obj, prop) {\n                    obj.delete(prop);\n                    return true;\n                },\n            });\n            return value;\n        }\n        var MapSchema = /** @class */ (function () {\n            function MapSchema(initialValues) {\n                var _this = this;\n                this.$changes = new ChangeTree(this);\n                this.$items = new Map();\n                this.$indexes = new Map();\n                this.$refId = 0;\n                if (initialValues) {\n                    if (initialValues instanceof Map ||\n                        initialValues instanceof MapSchema) {\n                        initialValues.forEach(function (v, k) { return _this.set(k, v); });\n                    }\n                    else {\n                        for (var k in initialValues) {\n                            this.set(k, initialValues[k]);\n                        }\n                    }\n                }\n            }\n            MapSchema.prototype.onAdd = function (callback, triggerAll) {\n                if (triggerAll === void 0) { triggerAll = true; }\n                return addCallback((this.$callbacks || (this.$callbacks = [])), exports.OPERATION.ADD, callback, (triggerAll)\n                    ? this.$items\n                    : undefined);\n            };\n            MapSchema.prototype.onRemove = function (callback) { return addCallback(this.$callbacks || (this.$callbacks = []), exports.OPERATION.DELETE, callback); };\n            MapSchema.prototype.onChange = function (callback) { return addCallback(this.$callbacks || (this.$callbacks = []), exports.OPERATION.REPLACE, callback); };\n            MapSchema.is = function (type) {\n                return type['map'] !== undefined;\n            };\n            /** Iterator */\n            MapSchema.prototype[Symbol.iterator] = function () { return this.$items[Symbol.iterator](); };\n            Object.defineProperty(MapSchema.prototype, Symbol.toStringTag, {\n                get: function () { return this.$items[Symbol.toStringTag]; },\n                enumerable: false,\n                configurable: true\n            });\n            MapSchema.prototype.set = function (key, value) {\n                if (value === undefined || value === null) {\n                    throw new Error(\"MapSchema#set('\".concat(key, \"', \").concat(value, \"): trying to set \").concat(value, \" value on '\").concat(key, \"'.\"));\n                }\n                // get \"index\" for this value.\n                var hasIndex = typeof (this.$changes.indexes[key]) !== \"undefined\";\n                var index = (hasIndex)\n                    ? this.$changes.indexes[key]\n                    : this.$refId++;\n                var operation = (hasIndex)\n                    ? exports.OPERATION.REPLACE\n                    : exports.OPERATION.ADD;\n                var isRef = (value['$changes']) !== undefined;\n                if (isRef) {\n                    value['$changes'].setParent(this, this.$changes.root, index);\n                }\n                //\n                // (encoding)\n                // set a unique id to relate directly with this key/value.\n                //\n                if (!hasIndex) {\n                    this.$changes.indexes[key] = index;\n                    this.$indexes.set(index, key);\n                }\n                else if (isRef && // if is schema, force ADD operation if value differ from previous one.\n                    this.$items.get(key) !== value) {\n                    operation = exports.OPERATION.ADD;\n                }\n                this.$items.set(key, value);\n                this.$changes.change(key, operation);\n                return this;\n            };\n            MapSchema.prototype.get = function (key) {\n                return this.$items.get(key);\n            };\n            MapSchema.prototype.delete = function (key) {\n                //\n                // TODO: add a \"purge\" method after .encode() runs, to cleanup removed `$indexes`\n                //\n                // We don't remove $indexes to allow setting the same key in the same patch\n                // (See \"should allow to remove and set an item in the same place\" test)\n                //\n                // // const index = this.$changes.indexes[key];\n                // // this.$indexes.delete(index);\n                this.$changes.delete(key);\n                return this.$items.delete(key);\n            };\n            MapSchema.prototype.clear = function (changes) {\n                // discard previous operations.\n                this.$changes.discard(true, true);\n                this.$changes.indexes = {};\n                // clear previous indexes\n                this.$indexes.clear();\n                //\n                // When decoding:\n                // - enqueue items for DELETE callback.\n                // - flag child items for garbage collection.\n                //\n                if (changes) {\n                    removeChildRefs.call(this, changes);\n                }\n                // clear items\n                this.$items.clear();\n                this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n                // touch all structures until reach root\n                this.$changes.touchParents();\n            };\n            MapSchema.prototype.has = function (key) {\n                return this.$items.has(key);\n            };\n            MapSchema.prototype.forEach = function (callbackfn) {\n                this.$items.forEach(callbackfn);\n            };\n            MapSchema.prototype.entries = function () {\n                return this.$items.entries();\n            };\n            MapSchema.prototype.keys = function () {\n                return this.$items.keys();\n            };\n            MapSchema.prototype.values = function () {\n                return this.$items.values();\n            };\n            Object.defineProperty(MapSchema.prototype, \"size\", {\n                get: function () {\n                    return this.$items.size;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            MapSchema.prototype.setIndex = function (index, key) {\n                this.$indexes.set(index, key);\n            };\n            MapSchema.prototype.getIndex = function (index) {\n                return this.$indexes.get(index);\n            };\n            MapSchema.prototype.getByIndex = function (index) {\n                return this.$items.get(this.$indexes.get(index));\n            };\n            MapSchema.prototype.deleteByIndex = function (index) {\n                var key = this.$indexes.get(index);\n                this.$items.delete(key);\n                this.$indexes.delete(index);\n            };\n            MapSchema.prototype.toJSON = function () {\n                var map = {};\n                this.forEach(function (value, key) {\n                    map[key] = (typeof (value['toJSON']) === \"function\")\n                        ? value['toJSON']()\n                        : value;\n                });\n                return map;\n            };\n            //\n            // Decoding utilities\n            //\n            MapSchema.prototype.clone = function (isDecoding) {\n                var cloned;\n                if (isDecoding) {\n                    // client-side\n                    cloned = Object.assign(new MapSchema(), this);\n                }\n                else {\n                    // server-side\n                    cloned = new MapSchema();\n                    this.forEach(function (value, key) {\n                        if (value['$changes']) {\n                            cloned.set(key, value['clone']());\n                        }\n                        else {\n                            cloned.set(key, value);\n                        }\n                    });\n                }\n                return cloned;\n            };\n            return MapSchema;\n        }());\n\n        var registeredTypes = {};\n        function registerType(identifier, definition) {\n            registeredTypes[identifier] = definition;\n        }\n        function getType(identifier) {\n            return registeredTypes[identifier];\n        }\n\n        var SchemaDefinition = /** @class */ (function () {\n            function SchemaDefinition() {\n                //\n                // TODO: use a \"field\" structure combining all these properties per-field.\n                //\n                this.indexes = {};\n                this.fieldsByIndex = {};\n                this.deprecated = {};\n                this.descriptors = {};\n            }\n            SchemaDefinition.create = function (parent) {\n                var definition = new SchemaDefinition();\n                // support inheritance\n                definition.schema = Object.assign({}, parent && parent.schema || {});\n                definition.indexes = Object.assign({}, parent && parent.indexes || {});\n                definition.fieldsByIndex = Object.assign({}, parent && parent.fieldsByIndex || {});\n                definition.descriptors = Object.assign({}, parent && parent.descriptors || {});\n                definition.deprecated = Object.assign({}, parent && parent.deprecated || {});\n                return definition;\n            };\n            SchemaDefinition.prototype.addField = function (field, type) {\n                var index = this.getNextFieldIndex();\n                this.fieldsByIndex[index] = field;\n                this.indexes[field] = index;\n                this.schema[field] = (Array.isArray(type))\n                    ? { array: type[0] }\n                    : type;\n            };\n            SchemaDefinition.prototype.hasField = function (field) {\n                return this.indexes[field] !== undefined;\n            };\n            SchemaDefinition.prototype.addFilter = function (field, cb) {\n                if (!this.filters) {\n                    this.filters = {};\n                    this.indexesWithFilters = [];\n                }\n                this.filters[this.indexes[field]] = cb;\n                this.indexesWithFilters.push(this.indexes[field]);\n                return true;\n            };\n            SchemaDefinition.prototype.addChildrenFilter = function (field, cb) {\n                var index = this.indexes[field];\n                var type = this.schema[field];\n                if (getType(Object.keys(type)[0])) {\n                    if (!this.childFilters) {\n                        this.childFilters = {};\n                    }\n                    this.childFilters[index] = cb;\n                    return true;\n                }\n                else {\n                    console.warn(\"@filterChildren: field '\".concat(field, \"' can't have children. Ignoring filter.\"));\n                }\n            };\n            SchemaDefinition.prototype.getChildrenFilter = function (field) {\n                return this.childFilters && this.childFilters[this.indexes[field]];\n            };\n            SchemaDefinition.prototype.getNextFieldIndex = function () {\n                return Object.keys(this.schema || {}).length;\n            };\n            return SchemaDefinition;\n        }());\n        function hasFilter(klass) {\n            return klass._context && klass._context.useFilters;\n        }\n        var Context = /** @class */ (function () {\n            function Context() {\n                this.types = {};\n                this.schemas = new Map();\n                this.useFilters = false;\n            }\n            Context.prototype.has = function (schema) {\n                return this.schemas.has(schema);\n            };\n            Context.prototype.get = function (typeid) {\n                return this.types[typeid];\n            };\n            Context.prototype.add = function (schema, typeid) {\n                if (typeid === void 0) { typeid = this.schemas.size; }\n                // FIXME: move this to somewhere else?\n                // support inheritance\n                schema._definition = SchemaDefinition.create(schema._definition);\n                schema._typeid = typeid;\n                this.types[typeid] = schema;\n                this.schemas.set(schema, typeid);\n            };\n            Context.create = function (options) {\n                if (options === void 0) { options = {}; }\n                return function (definition) {\n                    if (!options.context) {\n                        options.context = new Context();\n                    }\n                    return type(definition, options);\n                };\n            };\n            return Context;\n        }());\n        var globalContext = new Context();\n        /**\n         * [See documentation](https://docs.colyseus.io/state/schema/)\n         *\n         * Annotate a Schema property to be serializeable.\n         * \\@type()'d fields are automatically flagged as \"dirty\" for the next patch.\n         *\n         * @example Standard usage, with automatic change tracking.\n         * ```\n         * \\@type(\"string\") propertyName: string;\n         * ```\n         *\n         * @example You can provide the \"manual\" option if you'd like to manually control your patches via .setDirty().\n         * ```\n         * \\@type(\"string\", { manual: true })\n         * ```\n         */\n        function type(type, options) {\n            if (options === void 0) { options = {}; }\n            return function (target, field) {\n                var context = options.context || globalContext;\n                var constructor = target.constructor;\n                constructor._context = context;\n                if (!type) {\n                    throw new Error(\"\".concat(constructor.name, \": @type() reference provided for \\\"\").concat(field, \"\\\" is undefined. Make sure you don't have any circular dependencies.\"));\n                }\n                /*\n                 * static schema\n                 */\n                if (!context.has(constructor)) {\n                    context.add(constructor);\n                }\n                var definition = constructor._definition;\n                definition.addField(field, type);\n                /**\n                 * skip if descriptor already exists for this field (`@deprecated()`)\n                 */\n                if (definition.descriptors[field]) {\n                    if (definition.deprecated[field]) {\n                        // do not create accessors for deprecated properties.\n                        return;\n                    }\n                    else {\n                        // trying to define same property multiple times across inheritance.\n                        // https://github.com/colyseus/colyseus-unity3d/issues/131#issuecomment-814308572\n                        try {\n                            throw new Error(\"@colyseus/schema: Duplicate '\".concat(field, \"' definition on '\").concat(constructor.name, \"'.\\nCheck @type() annotation\"));\n                        }\n                        catch (e) {\n                            var definitionAtLine = e.stack.split(\"\\n\")[4].trim();\n                            throw new Error(\"\".concat(e.message, \" \").concat(definitionAtLine));\n                        }\n                    }\n                }\n                var isArray = ArraySchema.is(type);\n                var isMap = !isArray && MapSchema.is(type);\n                // TODO: refactor me.\n                // Allow abstract intermediary classes with no fields to be serialized\n                // (See \"should support an inheritance with a Schema type without fields\" test)\n                if (typeof (type) !== \"string\" && !Schema.is(type)) {\n                    var childType = Object.values(type)[0];\n                    if (typeof (childType) !== \"string\" && !context.has(childType)) {\n                        context.add(childType);\n                    }\n                }\n                if (options.manual) {\n                    // do not declare getter/setter descriptor\n                    definition.descriptors[field] = {\n                        enumerable: true,\n                        configurable: true,\n                        writable: true,\n                    };\n                    return;\n                }\n                var fieldCached = \"_\".concat(field);\n                definition.descriptors[fieldCached] = {\n                    enumerable: false,\n                    configurable: false,\n                    writable: true,\n                };\n                definition.descriptors[field] = {\n                    get: function () {\n                        return this[fieldCached];\n                    },\n                    set: function (value) {\n                        /**\n                         * Create Proxy for array or map items\n                         */\n                        // skip if value is the same as cached.\n                        if (value === this[fieldCached]) {\n                            return;\n                        }\n                        if (value !== undefined &&\n                            value !== null) {\n                            // automaticallty transform Array into ArraySchema\n                            if (isArray && !(value instanceof ArraySchema)) {\n                                value = new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], value, false)))();\n                            }\n                            // automaticallty transform Map into MapSchema\n                            if (isMap && !(value instanceof MapSchema)) {\n                                value = new MapSchema(value);\n                            }\n                            // try to turn provided structure into a Proxy\n                            if (value['$proxy'] === undefined) {\n                                if (isMap) {\n                                    value = getMapProxy(value);\n                                }\n                                else if (isArray) {\n                                    value = getArrayProxy(value);\n                                }\n                            }\n                            // flag the change for encoding.\n                            this.$changes.change(field);\n                            //\n                            // call setParent() recursively for this and its child\n                            // structures.\n                            //\n                            if (value['$changes']) {\n                                value['$changes'].setParent(this, this.$changes.root, this._definition.indexes[field]);\n                            }\n                        }\n                        else if (this[fieldCached]) {\n                            //\n                            // Setting a field to `null` or `undefined` will delete it.\n                            //\n                            this.$changes.delete(field);\n                        }\n                        this[fieldCached] = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            };\n        }\n        /**\n         * `@filter()` decorator for defining data filters per client\n         */\n        function filter(cb) {\n            return function (target, field) {\n                var constructor = target.constructor;\n                var definition = constructor._definition;\n                if (definition.addFilter(field, cb)) {\n                    constructor._context.useFilters = true;\n                }\n            };\n        }\n        function filterChildren(cb) {\n            return function (target, field) {\n                var constructor = target.constructor;\n                var definition = constructor._definition;\n                if (definition.addChildrenFilter(field, cb)) {\n                    constructor._context.useFilters = true;\n                }\n            };\n        }\n        /**\n         * `@deprecated()` flag a field as deprecated.\n         * The previous `@type()` annotation should remain along with this one.\n         */\n        function deprecated(throws) {\n            if (throws === void 0) { throws = true; }\n            return function (target, field) {\n                var constructor = target.constructor;\n                var definition = constructor._definition;\n                definition.deprecated[field] = true;\n                if (throws) {\n                    definition.descriptors[field] = {\n                        get: function () { throw new Error(\"\".concat(field, \" is deprecated.\")); },\n                        set: function (value) { },\n                        enumerable: false,\n                        configurable: true\n                    };\n                }\n            };\n        }\n        function defineTypes(target, fields, options) {\n            if (options === void 0) { options = {}; }\n            if (!options.context) {\n                options.context = target._context || options.context || globalContext;\n            }\n            for (var field in fields) {\n                type(fields[field], options)(target.prototype, field);\n            }\n            return target;\n        }\n\n        /**\n         * Copyright (c) 2018 Endel Dreyer\n         * Copyright (c) 2014 Ion Drive Software Ltd.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in all\n         * copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n         * SOFTWARE\n         */\n        /**\n         * msgpack implementation highly based on notepack.io\n         * https://github.com/darrachequesne/notepack\n         */\n        function utf8Length(str) {\n            var c = 0, length = 0;\n            for (var i = 0, l = str.length; i < l; i++) {\n                c = str.charCodeAt(i);\n                if (c < 0x80) {\n                    length += 1;\n                }\n                else if (c < 0x800) {\n                    length += 2;\n                }\n                else if (c < 0xd800 || c >= 0xe000) {\n                    length += 3;\n                }\n                else {\n                    i++;\n                    length += 4;\n                }\n            }\n            return length;\n        }\n        function utf8Write(view, offset, str) {\n            var c = 0;\n            for (var i = 0, l = str.length; i < l; i++) {\n                c = str.charCodeAt(i);\n                if (c < 0x80) {\n                    view[offset++] = c;\n                }\n                else if (c < 0x800) {\n                    view[offset++] = 0xc0 | (c >> 6);\n                    view[offset++] = 0x80 | (c & 0x3f);\n                }\n                else if (c < 0xd800 || c >= 0xe000) {\n                    view[offset++] = 0xe0 | (c >> 12);\n                    view[offset++] = 0x80 | (c >> 6 & 0x3f);\n                    view[offset++] = 0x80 | (c & 0x3f);\n                }\n                else {\n                    i++;\n                    c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n                    view[offset++] = 0xf0 | (c >> 18);\n                    view[offset++] = 0x80 | (c >> 12 & 0x3f);\n                    view[offset++] = 0x80 | (c >> 6 & 0x3f);\n                    view[offset++] = 0x80 | (c & 0x3f);\n                }\n            }\n        }\n        function int8$1(bytes, value) {\n            bytes.push(value & 255);\n        }\n        function uint8$1(bytes, value) {\n            bytes.push(value & 255);\n        }\n        function int16$1(bytes, value) {\n            bytes.push(value & 255);\n            bytes.push((value >> 8) & 255);\n        }\n        function uint16$1(bytes, value) {\n            bytes.push(value & 255);\n            bytes.push((value >> 8) & 255);\n        }\n        function int32$1(bytes, value) {\n            bytes.push(value & 255);\n            bytes.push((value >> 8) & 255);\n            bytes.push((value >> 16) & 255);\n            bytes.push((value >> 24) & 255);\n        }\n        function uint32$1(bytes, value) {\n            var b4 = value >> 24;\n            var b3 = value >> 16;\n            var b2 = value >> 8;\n            var b1 = value;\n            bytes.push(b1 & 255);\n            bytes.push(b2 & 255);\n            bytes.push(b3 & 255);\n            bytes.push(b4 & 255);\n        }\n        function int64$1(bytes, value) {\n            var high = Math.floor(value / Math.pow(2, 32));\n            var low = value >>> 0;\n            uint32$1(bytes, low);\n            uint32$1(bytes, high);\n        }\n        function uint64$1(bytes, value) {\n            var high = (value / Math.pow(2, 32)) >> 0;\n            var low = value >>> 0;\n            uint32$1(bytes, low);\n            uint32$1(bytes, high);\n        }\n        function float32$1(bytes, value) {\n            writeFloat32(bytes, value);\n        }\n        function float64$1(bytes, value) {\n            writeFloat64(bytes, value);\n        }\n        var _int32$1 = new Int32Array(2);\n        var _float32$1 = new Float32Array(_int32$1.buffer);\n        var _float64$1 = new Float64Array(_int32$1.buffer);\n        function writeFloat32(bytes, value) {\n            _float32$1[0] = value;\n            int32$1(bytes, _int32$1[0]);\n        }\n        function writeFloat64(bytes, value) {\n            _float64$1[0] = value;\n            int32$1(bytes, _int32$1[0 ]);\n            int32$1(bytes, _int32$1[1 ]);\n        }\n        function boolean$1(bytes, value) {\n            return uint8$1(bytes, value ? 1 : 0);\n        }\n        function string$1(bytes, value) {\n            // encode `null` strings as empty.\n            if (!value) {\n                value = \"\";\n            }\n            var length = utf8Length(value);\n            var size = 0;\n            // fixstr\n            if (length < 0x20) {\n                bytes.push(length | 0xa0);\n                size = 1;\n            }\n            // str 8\n            else if (length < 0x100) {\n                bytes.push(0xd9);\n                uint8$1(bytes, length);\n                size = 2;\n            }\n            // str 16\n            else if (length < 0x10000) {\n                bytes.push(0xda);\n                uint16$1(bytes, length);\n                size = 3;\n            }\n            // str 32\n            else if (length < 0x100000000) {\n                bytes.push(0xdb);\n                uint32$1(bytes, length);\n                size = 5;\n            }\n            else {\n                throw new Error('String too long');\n            }\n            utf8Write(bytes, bytes.length, value);\n            return size + length;\n        }\n        function number$1(bytes, value) {\n            if (isNaN(value)) {\n                return number$1(bytes, 0);\n            }\n            else if (!isFinite(value)) {\n                return number$1(bytes, (value > 0) ? Number.MAX_SAFE_INTEGER : -Number.MAX_SAFE_INTEGER);\n            }\n            else if (value !== (value | 0)) {\n                bytes.push(0xcb);\n                writeFloat64(bytes, value);\n                return 9;\n                // TODO: encode float 32?\n                // is it possible to differentiate between float32 / float64 here?\n                // // float 32\n                // bytes.push(0xca);\n                // writeFloat32(bytes, value);\n                // return 5;\n            }\n            if (value >= 0) {\n                // positive fixnum\n                if (value < 0x80) {\n                    uint8$1(bytes, value);\n                    return 1;\n                }\n                // uint 8\n                if (value < 0x100) {\n                    bytes.push(0xcc);\n                    uint8$1(bytes, value);\n                    return 2;\n                }\n                // uint 16\n                if (value < 0x10000) {\n                    bytes.push(0xcd);\n                    uint16$1(bytes, value);\n                    return 3;\n                }\n                // uint 32\n                if (value < 0x100000000) {\n                    bytes.push(0xce);\n                    uint32$1(bytes, value);\n                    return 5;\n                }\n                // uint 64\n                bytes.push(0xcf);\n                uint64$1(bytes, value);\n                return 9;\n            }\n            else {\n                // negative fixnum\n                if (value >= -0x20) {\n                    bytes.push(0xe0 | (value + 0x20));\n                    return 1;\n                }\n                // int 8\n                if (value >= -0x80) {\n                    bytes.push(0xd0);\n                    int8$1(bytes, value);\n                    return 2;\n                }\n                // int 16\n                if (value >= -0x8000) {\n                    bytes.push(0xd1);\n                    int16$1(bytes, value);\n                    return 3;\n                }\n                // int 32\n                if (value >= -0x80000000) {\n                    bytes.push(0xd2);\n                    int32$1(bytes, value);\n                    return 5;\n                }\n                // int 64\n                bytes.push(0xd3);\n                int64$1(bytes, value);\n                return 9;\n            }\n        }\n\n        var encode = /*#__PURE__*/Object.freeze({\n            __proto__: null,\n            utf8Write: utf8Write,\n            int8: int8$1,\n            uint8: uint8$1,\n            int16: int16$1,\n            uint16: uint16$1,\n            int32: int32$1,\n            uint32: uint32$1,\n            int64: int64$1,\n            uint64: uint64$1,\n            float32: float32$1,\n            float64: float64$1,\n            writeFloat32: writeFloat32,\n            writeFloat64: writeFloat64,\n            boolean: boolean$1,\n            string: string$1,\n            number: number$1\n        });\n\n        /**\n         * Copyright (c) 2018 Endel Dreyer\n         * Copyright (c) 2014 Ion Drive Software Ltd.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in all\n         * copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n         * SOFTWARE\n         */\n        function utf8Read(bytes, offset, length) {\n            var string = '', chr = 0;\n            for (var i = offset, end = offset + length; i < end; i++) {\n                var byte = bytes[i];\n                if ((byte & 0x80) === 0x00) {\n                    string += String.fromCharCode(byte);\n                    continue;\n                }\n                if ((byte & 0xe0) === 0xc0) {\n                    string += String.fromCharCode(((byte & 0x1f) << 6) |\n                        (bytes[++i] & 0x3f));\n                    continue;\n                }\n                if ((byte & 0xf0) === 0xe0) {\n                    string += String.fromCharCode(((byte & 0x0f) << 12) |\n                        ((bytes[++i] & 0x3f) << 6) |\n                        ((bytes[++i] & 0x3f) << 0));\n                    continue;\n                }\n                if ((byte & 0xf8) === 0xf0) {\n                    chr = ((byte & 0x07) << 18) |\n                        ((bytes[++i] & 0x3f) << 12) |\n                        ((bytes[++i] & 0x3f) << 6) |\n                        ((bytes[++i] & 0x3f) << 0);\n                    if (chr >= 0x010000) { // surrogate pair\n                        chr -= 0x010000;\n                        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n                    }\n                    else {\n                        string += String.fromCharCode(chr);\n                    }\n                    continue;\n                }\n                console.error('Invalid byte ' + byte.toString(16));\n                // (do not throw error to avoid server/client from crashing due to hack attemps)\n                // throw new Error('Invalid byte ' + byte.toString(16));\n            }\n            return string;\n        }\n        function int8(bytes, it) {\n            return uint8(bytes, it) << 24 >> 24;\n        }\n        function uint8(bytes, it) {\n            return bytes[it.offset++];\n        }\n        function int16(bytes, it) {\n            return uint16(bytes, it) << 16 >> 16;\n        }\n        function uint16(bytes, it) {\n            return bytes[it.offset++] | bytes[it.offset++] << 8;\n        }\n        function int32(bytes, it) {\n            return bytes[it.offset++] | bytes[it.offset++] << 8 | bytes[it.offset++] << 16 | bytes[it.offset++] << 24;\n        }\n        function uint32(bytes, it) {\n            return int32(bytes, it) >>> 0;\n        }\n        function float32(bytes, it) {\n            return readFloat32(bytes, it);\n        }\n        function float64(bytes, it) {\n            return readFloat64(bytes, it);\n        }\n        function int64(bytes, it) {\n            var low = uint32(bytes, it);\n            var high = int32(bytes, it) * Math.pow(2, 32);\n            return high + low;\n        }\n        function uint64(bytes, it) {\n            var low = uint32(bytes, it);\n            var high = uint32(bytes, it) * Math.pow(2, 32);\n            return high + low;\n        }\n        var _int32 = new Int32Array(2);\n        var _float32 = new Float32Array(_int32.buffer);\n        var _float64 = new Float64Array(_int32.buffer);\n        function readFloat32(bytes, it) {\n            _int32[0] = int32(bytes, it);\n            return _float32[0];\n        }\n        function readFloat64(bytes, it) {\n            _int32[0 ] = int32(bytes, it);\n            _int32[1 ] = int32(bytes, it);\n            return _float64[0];\n        }\n        function boolean(bytes, it) {\n            return uint8(bytes, it) > 0;\n        }\n        function string(bytes, it) {\n            var prefix = bytes[it.offset++];\n            var length;\n            if (prefix < 0xc0) {\n                // fixstr\n                length = prefix & 0x1f;\n            }\n            else if (prefix === 0xd9) {\n                length = uint8(bytes, it);\n            }\n            else if (prefix === 0xda) {\n                length = uint16(bytes, it);\n            }\n            else if (prefix === 0xdb) {\n                length = uint32(bytes, it);\n            }\n            var value = utf8Read(bytes, it.offset, length);\n            it.offset += length;\n            return value;\n        }\n        function stringCheck(bytes, it) {\n            var prefix = bytes[it.offset];\n            return (\n            // fixstr\n            (prefix < 0xc0 && prefix > 0xa0) ||\n                // str 8\n                prefix === 0xd9 ||\n                // str 16\n                prefix === 0xda ||\n                // str 32\n                prefix === 0xdb);\n        }\n        function number(bytes, it) {\n            var prefix = bytes[it.offset++];\n            if (prefix < 0x80) {\n                // positive fixint\n                return prefix;\n            }\n            else if (prefix === 0xca) {\n                // float 32\n                return readFloat32(bytes, it);\n            }\n            else if (prefix === 0xcb) {\n                // float 64\n                return readFloat64(bytes, it);\n            }\n            else if (prefix === 0xcc) {\n                // uint 8\n                return uint8(bytes, it);\n            }\n            else if (prefix === 0xcd) {\n                // uint 16\n                return uint16(bytes, it);\n            }\n            else if (prefix === 0xce) {\n                // uint 32\n                return uint32(bytes, it);\n            }\n            else if (prefix === 0xcf) {\n                // uint 64\n                return uint64(bytes, it);\n            }\n            else if (prefix === 0xd0) {\n                // int 8\n                return int8(bytes, it);\n            }\n            else if (prefix === 0xd1) {\n                // int 16\n                return int16(bytes, it);\n            }\n            else if (prefix === 0xd2) {\n                // int 32\n                return int32(bytes, it);\n            }\n            else if (prefix === 0xd3) {\n                // int 64\n                return int64(bytes, it);\n            }\n            else if (prefix > 0xdf) {\n                // negative fixint\n                return (0xff - prefix + 1) * -1;\n            }\n        }\n        function numberCheck(bytes, it) {\n            var prefix = bytes[it.offset];\n            // positive fixint - 0x00 - 0x7f\n            // float 32        - 0xca\n            // float 64        - 0xcb\n            // uint 8          - 0xcc\n            // uint 16         - 0xcd\n            // uint 32         - 0xce\n            // uint 64         - 0xcf\n            // int 8           - 0xd0\n            // int 16          - 0xd1\n            // int 32          - 0xd2\n            // int 64          - 0xd3\n            return (prefix < 0x80 ||\n                (prefix >= 0xca && prefix <= 0xd3));\n        }\n        function arrayCheck(bytes, it) {\n            return bytes[it.offset] < 0xa0;\n            // const prefix = bytes[it.offset] ;\n            // if (prefix < 0xa0) {\n            //   return prefix;\n            // // array\n            // } else if (prefix === 0xdc) {\n            //   it.offset += 2;\n            // } else if (0xdd) {\n            //   it.offset += 4;\n            // }\n            // return prefix;\n        }\n        function switchStructureCheck(bytes, it) {\n            return (\n            // previous byte should be `SWITCH_TO_STRUCTURE`\n            bytes[it.offset - 1] === SWITCH_TO_STRUCTURE &&\n                // next byte should be a number\n                (bytes[it.offset] < 0x80 || (bytes[it.offset] >= 0xca && bytes[it.offset] <= 0xd3)));\n        }\n\n        var decode = /*#__PURE__*/Object.freeze({\n            __proto__: null,\n            int8: int8,\n            uint8: uint8,\n            int16: int16,\n            uint16: uint16,\n            int32: int32,\n            uint32: uint32,\n            float32: float32,\n            float64: float64,\n            int64: int64,\n            uint64: uint64,\n            readFloat32: readFloat32,\n            readFloat64: readFloat64,\n            boolean: boolean,\n            string: string,\n            stringCheck: stringCheck,\n            number: number,\n            numberCheck: numberCheck,\n            arrayCheck: arrayCheck,\n            switchStructureCheck: switchStructureCheck\n        });\n\n        var CollectionSchema = /** @class */ (function () {\n            function CollectionSchema(initialValues) {\n                var _this = this;\n                this.$changes = new ChangeTree(this);\n                this.$items = new Map();\n                this.$indexes = new Map();\n                this.$refId = 0;\n                if (initialValues) {\n                    initialValues.forEach(function (v) { return _this.add(v); });\n                }\n            }\n            CollectionSchema.prototype.onAdd = function (callback, triggerAll) {\n                if (triggerAll === void 0) { triggerAll = true; }\n                return addCallback((this.$callbacks || (this.$callbacks = [])), exports.OPERATION.ADD, callback, (triggerAll)\n                    ? this.$items\n                    : undefined);\n            };\n            CollectionSchema.prototype.onRemove = function (callback) { return addCallback(this.$callbacks || (this.$callbacks = []), exports.OPERATION.DELETE, callback); };\n            CollectionSchema.prototype.onChange = function (callback) { return addCallback(this.$callbacks || (this.$callbacks = []), exports.OPERATION.REPLACE, callback); };\n            CollectionSchema.is = function (type) {\n                return type['collection'] !== undefined;\n            };\n            CollectionSchema.prototype.add = function (value) {\n                // set \"index\" for reference.\n                var index = this.$refId++;\n                var isRef = (value['$changes']) !== undefined;\n                if (isRef) {\n                    value['$changes'].setParent(this, this.$changes.root, index);\n                }\n                this.$changes.indexes[index] = index;\n                this.$indexes.set(index, index);\n                this.$items.set(index, value);\n                this.$changes.change(index);\n                return index;\n            };\n            CollectionSchema.prototype.at = function (index) {\n                var key = Array.from(this.$items.keys())[index];\n                return this.$items.get(key);\n            };\n            CollectionSchema.prototype.entries = function () {\n                return this.$items.entries();\n            };\n            CollectionSchema.prototype.delete = function (item) {\n                var entries = this.$items.entries();\n                var index;\n                var entry;\n                while (entry = entries.next()) {\n                    if (entry.done) {\n                        break;\n                    }\n                    if (item === entry.value[1]) {\n                        index = entry.value[0];\n                        break;\n                    }\n                }\n                if (index === undefined) {\n                    return false;\n                }\n                this.$changes.delete(index);\n                this.$indexes.delete(index);\n                return this.$items.delete(index);\n            };\n            CollectionSchema.prototype.clear = function (changes) {\n                // discard previous operations.\n                this.$changes.discard(true, true);\n                this.$changes.indexes = {};\n                // clear previous indexes\n                this.$indexes.clear();\n                //\n                // When decoding:\n                // - enqueue items for DELETE callback.\n                // - flag child items for garbage collection.\n                //\n                if (changes) {\n                    removeChildRefs.call(this, changes);\n                }\n                // clear items\n                this.$items.clear();\n                this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n                // touch all structures until reach root\n                this.$changes.touchParents();\n            };\n            CollectionSchema.prototype.has = function (value) {\n                return Array.from(this.$items.values()).some(function (v) { return v === value; });\n            };\n            CollectionSchema.prototype.forEach = function (callbackfn) {\n                var _this = this;\n                this.$items.forEach(function (value, key, _) { return callbackfn(value, key, _this); });\n            };\n            CollectionSchema.prototype.values = function () {\n                return this.$items.values();\n            };\n            Object.defineProperty(CollectionSchema.prototype, \"size\", {\n                get: function () {\n                    return this.$items.size;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            CollectionSchema.prototype.setIndex = function (index, key) {\n                this.$indexes.set(index, key);\n            };\n            CollectionSchema.prototype.getIndex = function (index) {\n                return this.$indexes.get(index);\n            };\n            CollectionSchema.prototype.getByIndex = function (index) {\n                return this.$items.get(this.$indexes.get(index));\n            };\n            CollectionSchema.prototype.deleteByIndex = function (index) {\n                var key = this.$indexes.get(index);\n                this.$items.delete(key);\n                this.$indexes.delete(index);\n            };\n            CollectionSchema.prototype.toArray = function () {\n                return Array.from(this.$items.values());\n            };\n            CollectionSchema.prototype.toJSON = function () {\n                var values = [];\n                this.forEach(function (value, key) {\n                    values.push((typeof (value['toJSON']) === \"function\")\n                        ? value['toJSON']()\n                        : value);\n                });\n                return values;\n            };\n            //\n            // Decoding utilities\n            //\n            CollectionSchema.prototype.clone = function (isDecoding) {\n                var cloned;\n                if (isDecoding) {\n                    // client-side\n                    cloned = Object.assign(new CollectionSchema(), this);\n                }\n                else {\n                    // server-side\n                    cloned = new CollectionSchema();\n                    this.forEach(function (value) {\n                        if (value['$changes']) {\n                            cloned.add(value['clone']());\n                        }\n                        else {\n                            cloned.add(value);\n                        }\n                    });\n                }\n                return cloned;\n            };\n            return CollectionSchema;\n        }());\n\n        var SetSchema = /** @class */ (function () {\n            function SetSchema(initialValues) {\n                var _this = this;\n                this.$changes = new ChangeTree(this);\n                this.$items = new Map();\n                this.$indexes = new Map();\n                this.$refId = 0;\n                if (initialValues) {\n                    initialValues.forEach(function (v) { return _this.add(v); });\n                }\n            }\n            SetSchema.prototype.onAdd = function (callback, triggerAll) {\n                if (triggerAll === void 0) { triggerAll = true; }\n                return addCallback((this.$callbacks || (this.$callbacks = [])), exports.OPERATION.ADD, callback, (triggerAll)\n                    ? this.$items\n                    : undefined);\n            };\n            SetSchema.prototype.onRemove = function (callback) { return addCallback(this.$callbacks || (this.$callbacks = []), exports.OPERATION.DELETE, callback); };\n            SetSchema.prototype.onChange = function (callback) { return addCallback(this.$callbacks || (this.$callbacks = []), exports.OPERATION.REPLACE, callback); };\n            SetSchema.is = function (type) {\n                return type['set'] !== undefined;\n            };\n            SetSchema.prototype.add = function (value) {\n                var _a, _b;\n                // immediatelly return false if value already added.\n                if (this.has(value)) {\n                    return false;\n                }\n                // set \"index\" for reference.\n                var index = this.$refId++;\n                if ((value['$changes']) !== undefined) {\n                    value['$changes'].setParent(this, this.$changes.root, index);\n                }\n                var operation = (_b = (_a = this.$changes.indexes[index]) === null || _a === void 0 ? void 0 : _a.op) !== null && _b !== void 0 ? _b : exports.OPERATION.ADD;\n                this.$changes.indexes[index] = index;\n                this.$indexes.set(index, index);\n                this.$items.set(index, value);\n                this.$changes.change(index, operation);\n                return index;\n            };\n            SetSchema.prototype.entries = function () {\n                return this.$items.entries();\n            };\n            SetSchema.prototype.delete = function (item) {\n                var entries = this.$items.entries();\n                var index;\n                var entry;\n                while (entry = entries.next()) {\n                    if (entry.done) {\n                        break;\n                    }\n                    if (item === entry.value[1]) {\n                        index = entry.value[0];\n                        break;\n                    }\n                }\n                if (index === undefined) {\n                    return false;\n                }\n                this.$changes.delete(index);\n                this.$indexes.delete(index);\n                return this.$items.delete(index);\n            };\n            SetSchema.prototype.clear = function (changes) {\n                // discard previous operations.\n                this.$changes.discard(true, true);\n                this.$changes.indexes = {};\n                // clear previous indexes\n                this.$indexes.clear();\n                //\n                // When decoding:\n                // - enqueue items for DELETE callback.\n                // - flag child items for garbage collection.\n                //\n                if (changes) {\n                    removeChildRefs.call(this, changes);\n                }\n                // clear items\n                this.$items.clear();\n                this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n                // touch all structures until reach root\n                this.$changes.touchParents();\n            };\n            SetSchema.prototype.has = function (value) {\n                var values = this.$items.values();\n                var has = false;\n                var entry;\n                while (entry = values.next()) {\n                    if (entry.done) {\n                        break;\n                    }\n                    if (value === entry.value) {\n                        has = true;\n                        break;\n                    }\n                }\n                return has;\n            };\n            SetSchema.prototype.forEach = function (callbackfn) {\n                var _this = this;\n                this.$items.forEach(function (value, key, _) { return callbackfn(value, key, _this); });\n            };\n            SetSchema.prototype.values = function () {\n                return this.$items.values();\n            };\n            Object.defineProperty(SetSchema.prototype, \"size\", {\n                get: function () {\n                    return this.$items.size;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            SetSchema.prototype.setIndex = function (index, key) {\n                this.$indexes.set(index, key);\n            };\n            SetSchema.prototype.getIndex = function (index) {\n                return this.$indexes.get(index);\n            };\n            SetSchema.prototype.getByIndex = function (index) {\n                return this.$items.get(this.$indexes.get(index));\n            };\n            SetSchema.prototype.deleteByIndex = function (index) {\n                var key = this.$indexes.get(index);\n                this.$items.delete(key);\n                this.$indexes.delete(index);\n            };\n            SetSchema.prototype.toArray = function () {\n                return Array.from(this.$items.values());\n            };\n            SetSchema.prototype.toJSON = function () {\n                var values = [];\n                this.forEach(function (value, key) {\n                    values.push((typeof (value['toJSON']) === \"function\")\n                        ? value['toJSON']()\n                        : value);\n                });\n                return values;\n            };\n            //\n            // Decoding utilities\n            //\n            SetSchema.prototype.clone = function (isDecoding) {\n                var cloned;\n                if (isDecoding) {\n                    // client-side\n                    cloned = Object.assign(new SetSchema(), this);\n                }\n                else {\n                    // server-side\n                    cloned = new SetSchema();\n                    this.forEach(function (value) {\n                        if (value['$changes']) {\n                            cloned.add(value['clone']());\n                        }\n                        else {\n                            cloned.add(value);\n                        }\n                    });\n                }\n                return cloned;\n            };\n            return SetSchema;\n        }());\n\n        var ClientState = /** @class */ (function () {\n            function ClientState() {\n                this.refIds = new WeakSet();\n                this.containerIndexes = new WeakMap();\n            }\n            // containerIndexes = new Map<ChangeTree, Set<number>>();\n            ClientState.prototype.addRefId = function (changeTree) {\n                if (!this.refIds.has(changeTree)) {\n                    this.refIds.add(changeTree);\n                    this.containerIndexes.set(changeTree, new Set());\n                }\n            };\n            ClientState.get = function (client) {\n                if (client.$filterState === undefined) {\n                    client.$filterState = new ClientState();\n                }\n                return client.$filterState;\n            };\n            return ClientState;\n        }());\n\n        var ReferenceTracker = /** @class */ (function () {\n            function ReferenceTracker() {\n                //\n                // Relation of refId => Schema structure\n                // For direct access of structures during decoding time.\n                //\n                this.refs = new Map();\n                this.refCounts = {};\n                this.deletedRefs = new Set();\n                this.nextUniqueId = 0;\n            }\n            ReferenceTracker.prototype.getNextUniqueId = function () {\n                return this.nextUniqueId++;\n            };\n            // for decoding\n            ReferenceTracker.prototype.addRef = function (refId, ref, incrementCount) {\n                if (incrementCount === void 0) { incrementCount = true; }\n                this.refs.set(refId, ref);\n                if (incrementCount) {\n                    this.refCounts[refId] = (this.refCounts[refId] || 0) + 1;\n                }\n            };\n            // for decoding\n            ReferenceTracker.prototype.removeRef = function (refId) {\n                this.refCounts[refId] = this.refCounts[refId] - 1;\n                this.deletedRefs.add(refId);\n            };\n            ReferenceTracker.prototype.clearRefs = function () {\n                this.refs.clear();\n                this.deletedRefs.clear();\n                this.refCounts = {};\n            };\n            // for decoding\n            ReferenceTracker.prototype.garbageCollectDeletedRefs = function () {\n                var _this = this;\n                this.deletedRefs.forEach(function (refId) {\n                    //\n                    // Skip active references.\n                    //\n                    if (_this.refCounts[refId] > 0) {\n                        return;\n                    }\n                    var ref = _this.refs.get(refId);\n                    //\n                    // Ensure child schema instances have their references removed as well.\n                    //\n                    if (ref instanceof Schema) {\n                        for (var fieldName in ref['_definition'].schema) {\n                            if (typeof (ref['_definition'].schema[fieldName]) !== \"string\" &&\n                                ref[fieldName] &&\n                                ref[fieldName]['$changes']) {\n                                _this.removeRef(ref[fieldName]['$changes'].refId);\n                            }\n                        }\n                    }\n                    else {\n                        var definition = ref['$changes'].parent._definition;\n                        var type = definition.schema[definition.fieldsByIndex[ref['$changes'].parentIndex]];\n                        if (typeof (Object.values(type)[0]) === \"function\") {\n                            Array.from(ref.values())\n                                .forEach(function (child) { return _this.removeRef(child['$changes'].refId); });\n                        }\n                    }\n                    _this.refs.delete(refId);\n                    delete _this.refCounts[refId];\n                });\n                // clear deleted refs.\n                this.deletedRefs.clear();\n            };\n            return ReferenceTracker;\n        }());\n\n        var EncodeSchemaError = /** @class */ (function (_super) {\n            __extends(EncodeSchemaError, _super);\n            function EncodeSchemaError() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return EncodeSchemaError;\n        }(Error));\n        function assertType(value, type, klass, field) {\n            var typeofTarget;\n            var allowNull = false;\n            switch (type) {\n                case \"number\":\n                case \"int8\":\n                case \"uint8\":\n                case \"int16\":\n                case \"uint16\":\n                case \"int32\":\n                case \"uint32\":\n                case \"int64\":\n                case \"uint64\":\n                case \"float32\":\n                case \"float64\":\n                    typeofTarget = \"number\";\n                    if (isNaN(value)) {\n                        console.log(\"trying to encode \\\"NaN\\\" in \".concat(klass.constructor.name, \"#\").concat(field));\n                    }\n                    break;\n                case \"string\":\n                    typeofTarget = \"string\";\n                    allowNull = true;\n                    break;\n                case \"boolean\":\n                    // boolean is always encoded as true/false based on truthiness\n                    return;\n            }\n            if (typeof (value) !== typeofTarget && (!allowNull || (allowNull && value !== null))) {\n                var foundValue = \"'\".concat(JSON.stringify(value), \"'\").concat((value && value.constructor && \" (\".concat(value.constructor.name, \")\")) || '');\n                throw new EncodeSchemaError(\"a '\".concat(typeofTarget, \"' was expected, but \").concat(foundValue, \" was provided in \").concat(klass.constructor.name, \"#\").concat(field));\n            }\n        }\n        function assertInstanceType(value, type, klass, field) {\n            if (!(value instanceof type)) {\n                throw new EncodeSchemaError(\"a '\".concat(type.name, \"' was expected, but '\").concat(value.constructor.name, \"' was provided in \").concat(klass.constructor.name, \"#\").concat(field));\n            }\n        }\n        function encodePrimitiveType(type, bytes, value, klass, field) {\n            assertType(value, type, klass, field);\n            var encodeFunc = encode[type];\n            if (encodeFunc) {\n                encodeFunc(bytes, value);\n            }\n            else {\n                throw new EncodeSchemaError(\"a '\".concat(type, \"' was expected, but \").concat(value, \" was provided in \").concat(klass.constructor.name, \"#\").concat(field));\n            }\n        }\n        function decodePrimitiveType(type, bytes, it) {\n            return decode[type](bytes, it);\n        }\n        /**\n         * Schema encoder / decoder\n         */\n        var Schema = /** @class */ (function () {\n            // allow inherited classes to have a constructor\n            function Schema() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                // fix enumerability of fields for end-user\n                Object.defineProperties(this, {\n                    $changes: {\n                        value: new ChangeTree(this, undefined, new ReferenceTracker()),\n                        enumerable: false,\n                        writable: true\n                    },\n                    // $listeners: {\n                    //     value: undefined,\n                    //     enumerable: false,\n                    //     writable: true\n                    // },\n                    $callbacks: {\n                        value: undefined,\n                        enumerable: false,\n                        writable: true\n                    },\n                });\n                var descriptors = this._definition.descriptors;\n                if (descriptors) {\n                    Object.defineProperties(this, descriptors);\n                }\n                //\n                // Assign initial values\n                //\n                if (args[0]) {\n                    this.assign(args[0]);\n                }\n            }\n            Schema.onError = function (e) {\n                console.error(e);\n            };\n            Schema.is = function (type) {\n                return (type['_definition'] &&\n                    type['_definition'].schema !== undefined);\n            };\n            Schema.prototype.onChange = function (callback) {\n                return addCallback((this.$callbacks || (this.$callbacks = [])), exports.OPERATION.REPLACE, callback);\n            };\n            Schema.prototype.onRemove = function (callback) {\n                return addCallback((this.$callbacks || (this.$callbacks = [])), exports.OPERATION.DELETE, callback);\n            };\n            Schema.prototype.assign = function (props) {\n                Object.assign(this, props);\n                return this;\n            };\n            Object.defineProperty(Schema.prototype, \"_definition\", {\n                get: function () { return this.constructor._definition; },\n                enumerable: false,\n                configurable: true\n            });\n            /**\n             * (Server-side): Flag a property to be encoded for the next patch.\n             * @param instance Schema instance\n             * @param property string representing the property name, or number representing the index of the property.\n             * @param operation OPERATION to perform (detected automatically)\n             */\n            Schema.prototype.setDirty = function (property, operation) {\n                this.$changes.change(property, operation);\n            };\n            /**\n             * Client-side: listen for changes on property.\n             * @param prop the property name\n             * @param callback callback to be triggered on property change\n             * @param immediate trigger immediatelly if property has been already set.\n             */\n            Schema.prototype.listen = function (prop, callback, immediate) {\n                var _this = this;\n                if (immediate === void 0) { immediate = true; }\n                if (!this.$callbacks) {\n                    this.$callbacks = {};\n                }\n                if (!this.$callbacks[prop]) {\n                    this.$callbacks[prop] = [];\n                }\n                this.$callbacks[prop].push(callback);\n                if (immediate && this[prop] !== undefined) {\n                    callback(this[prop], undefined);\n                }\n                // return un-register callback.\n                return function () { return spliceOne(_this.$callbacks[prop], _this.$callbacks[prop].indexOf(callback)); };\n            };\n            Schema.prototype.decode = function (bytes, it, ref) {\n                var _a;\n                if (it === void 0) { it = { offset: 0 }; }\n                if (ref === void 0) { ref = this; }\n                var allChanges = [];\n                var $root = this.$changes.root;\n                var totalBytes = bytes.length;\n                var refId = 0;\n                $root.refs.set(refId, this);\n                while (it.offset < totalBytes) {\n                    var byte = bytes[it.offset++];\n                    if (byte == SWITCH_TO_STRUCTURE) {\n                        refId = number(bytes, it);\n                        var nextRef = $root.refs.get(refId);\n                        //\n                        // Trying to access a reference that haven't been decoded yet.\n                        //\n                        if (!nextRef) {\n                            throw new Error(\"\\\"refId\\\" not found: \".concat(refId));\n                        }\n                        ref = nextRef;\n                        continue;\n                    }\n                    var changeTree = ref['$changes'];\n                    var isSchema = (ref['_definition'] !== undefined);\n                    var operation = (isSchema)\n                        ? (byte >> 6) << 6 // \"compressed\" index + operation\n                        : byte; // \"uncompressed\" index + operation (array/map items)\n                    if (operation === exports.OPERATION.CLEAR) {\n                        //\n                        // TODO: refactor me!\n                        // The `.clear()` method is calling `$root.removeRef(refId)` for\n                        // each item inside this collection\n                        //\n                        ref.clear(allChanges);\n                        continue;\n                    }\n                    var fieldIndex = (isSchema)\n                        ? byte % (operation || 255) // if \"REPLACE\" operation (0), use 255\n                        : number(bytes, it);\n                    var fieldName = (isSchema)\n                        ? (ref['_definition'].fieldsByIndex[fieldIndex])\n                        : \"\";\n                    var type = changeTree.getType(fieldIndex);\n                    var value = void 0;\n                    var previousValue = void 0;\n                    var dynamicIndex = void 0;\n                    if (!isSchema) {\n                        previousValue = ref['getByIndex'](fieldIndex);\n                        if ((operation & exports.OPERATION.ADD) === exports.OPERATION.ADD) { // ADD or DELETE_AND_ADD\n                            dynamicIndex = (ref instanceof MapSchema)\n                                ? string(bytes, it)\n                                : fieldIndex;\n                            ref['setIndex'](fieldIndex, dynamicIndex);\n                        }\n                        else {\n                            // here\n                            dynamicIndex = ref['getIndex'](fieldIndex);\n                        }\n                    }\n                    else {\n                        previousValue = ref[\"_\".concat(fieldName)];\n                    }\n                    //\n                    // Delete operations\n                    //\n                    if ((operation & exports.OPERATION.DELETE) === exports.OPERATION.DELETE) {\n                        if (operation !== exports.OPERATION.DELETE_AND_ADD) {\n                            ref['deleteByIndex'](fieldIndex);\n                        }\n                        // Flag `refId` for garbage collection.\n                        if (previousValue && previousValue['$changes']) {\n                            $root.removeRef(previousValue['$changes'].refId);\n                        }\n                        value = null;\n                    }\n                    if (fieldName === undefined) {\n                        console.warn(\"@colyseus/schema: definition mismatch\");\n                        //\n                        // keep skipping next bytes until reaches a known structure\n                        // by local decoder.\n                        //\n                        var nextIterator = { offset: it.offset };\n                        while (it.offset < totalBytes) {\n                            if (switchStructureCheck(bytes, it)) {\n                                nextIterator.offset = it.offset + 1;\n                                if ($root.refs.has(number(bytes, nextIterator))) {\n                                    break;\n                                }\n                            }\n                            it.offset++;\n                        }\n                        continue;\n                    }\n                    else if (operation === exports.OPERATION.DELETE) ;\n                    else if (Schema.is(type)) {\n                        var refId_1 = number(bytes, it);\n                        value = $root.refs.get(refId_1);\n                        if (operation !== exports.OPERATION.REPLACE) {\n                            var childType = this.getSchemaType(bytes, it, type);\n                            if (!value) {\n                                value = this.createTypeInstance(childType);\n                                value.$changes.refId = refId_1;\n                                if (previousValue) {\n                                    value.$callbacks = previousValue.$callbacks;\n                                    // value.$listeners = previousValue.$listeners;\n                                    if (previousValue['$changes'].refId &&\n                                        refId_1 !== previousValue['$changes'].refId) {\n                                        $root.removeRef(previousValue['$changes'].refId);\n                                    }\n                                }\n                            }\n                            $root.addRef(refId_1, value, (value !== previousValue));\n                        }\n                    }\n                    else if (typeof (type) === \"string\") {\n                        //\n                        // primitive value (number, string, boolean, etc)\n                        //\n                        value = decodePrimitiveType(type, bytes, it);\n                    }\n                    else {\n                        var typeDef = getType(Object.keys(type)[0]);\n                        var refId_2 = number(bytes, it);\n                        var valueRef = ($root.refs.has(refId_2))\n                            ? previousValue || $root.refs.get(refId_2)\n                            : new typeDef.constructor();\n                        value = valueRef.clone(true);\n                        value.$changes.refId = refId_2;\n                        // preserve schema callbacks\n                        if (previousValue) {\n                            value['$callbacks'] = previousValue['$callbacks'];\n                            if (previousValue['$changes'].refId &&\n                                refId_2 !== previousValue['$changes'].refId) {\n                                $root.removeRef(previousValue['$changes'].refId);\n                                //\n                                // Trigger onRemove if structure has been replaced.\n                                //\n                                var entries = previousValue.entries();\n                                var iter = void 0;\n                                while ((iter = entries.next()) && !iter.done) {\n                                    var key = (_a = iter.value, _a[0]), value_1 = _a[1];\n                                    allChanges.push({\n                                        refId: refId_2,\n                                        op: exports.OPERATION.DELETE,\n                                        field: key,\n                                        value: undefined,\n                                        previousValue: value_1,\n                                    });\n                                }\n                            }\n                        }\n                        $root.addRef(refId_2, value, (valueRef !== previousValue));\n                    }\n                    if (value !== null &&\n                        value !== undefined) {\n                        if (value['$changes']) {\n                            value['$changes'].setParent(changeTree.ref, changeTree.root, fieldIndex);\n                        }\n                        if (ref instanceof Schema) {\n                            ref[fieldName] = value;\n                            // ref[`_${fieldName}`] = value;\n                        }\n                        else if (ref instanceof MapSchema) {\n                            // const key = ref['$indexes'].get(field);\n                            var key = dynamicIndex;\n                            // ref.set(key, value);\n                            ref['$items'].set(key, value);\n                            ref['$changes'].allChanges.add(fieldIndex);\n                        }\n                        else if (ref instanceof ArraySchema) {\n                            // const key = ref['$indexes'][field];\n                            // console.log(\"SETTING FOR ArraySchema =>\", { field, key, value });\n                            // ref[key] = value;\n                            ref.setAt(fieldIndex, value);\n                        }\n                        else if (ref instanceof CollectionSchema) {\n                            var index = ref.add(value);\n                            ref['setIndex'](fieldIndex, index);\n                        }\n                        else if (ref instanceof SetSchema) {\n                            var index = ref.add(value);\n                            if (index !== false) {\n                                ref['setIndex'](fieldIndex, index);\n                            }\n                        }\n                    }\n                    if (previousValue !== value) {\n                        allChanges.push({\n                            refId: refId,\n                            op: operation,\n                            field: fieldName,\n                            dynamicIndex: dynamicIndex,\n                            value: value,\n                            previousValue: previousValue,\n                        });\n                    }\n                }\n                this._triggerChanges(allChanges);\n                // drop references of unused schemas\n                $root.garbageCollectDeletedRefs();\n                return allChanges;\n            };\n            Schema.prototype.encode = function (encodeAll, bytes, useFilters) {\n                if (encodeAll === void 0) { encodeAll = false; }\n                if (bytes === void 0) { bytes = []; }\n                if (useFilters === void 0) { useFilters = false; }\n                var rootChangeTree = this.$changes;\n                var refIdsVisited = new WeakSet();\n                var changeTrees = [rootChangeTree];\n                var numChangeTrees = 1;\n                for (var i = 0; i < numChangeTrees; i++) {\n                    var changeTree = changeTrees[i];\n                    var ref = changeTree.ref;\n                    var isSchema = (ref instanceof Schema);\n                    // Generate unique refId for the ChangeTree.\n                    changeTree.ensureRefId();\n                    // mark this ChangeTree as visited.\n                    refIdsVisited.add(changeTree);\n                    // root `refId` is skipped.\n                    if (changeTree !== rootChangeTree &&\n                        (changeTree.changed || encodeAll)) {\n                        uint8$1(bytes, SWITCH_TO_STRUCTURE);\n                        number$1(bytes, changeTree.refId);\n                    }\n                    var changes = (encodeAll)\n                        ? Array.from(changeTree.allChanges)\n                        : Array.from(changeTree.changes.values());\n                    for (var j = 0, cl = changes.length; j < cl; j++) {\n                        var operation = (encodeAll)\n                            ? { op: exports.OPERATION.ADD, index: changes[j] }\n                            : changes[j];\n                        var fieldIndex = operation.index;\n                        var field = (isSchema)\n                            ? ref['_definition'].fieldsByIndex && ref['_definition'].fieldsByIndex[fieldIndex]\n                            : fieldIndex;\n                        // cache begin index if `useFilters`\n                        var beginIndex = bytes.length;\n                        // encode field index + operation\n                        if (operation.op !== exports.OPERATION.TOUCH) {\n                            if (isSchema) {\n                                //\n                                // Compress `fieldIndex` + `operation` into a single byte.\n                                // This adds a limitaion of 64 fields per Schema structure\n                                //\n                                uint8$1(bytes, (fieldIndex | operation.op));\n                            }\n                            else {\n                                uint8$1(bytes, operation.op);\n                                // custom operations\n                                if (operation.op === exports.OPERATION.CLEAR) {\n                                    continue;\n                                }\n                                // indexed operations\n                                number$1(bytes, fieldIndex);\n                            }\n                        }\n                        //\n                        // encode \"alias\" for dynamic fields (maps)\n                        //\n                        if (!isSchema &&\n                            (operation.op & exports.OPERATION.ADD) == exports.OPERATION.ADD // ADD or DELETE_AND_ADD\n                        ) {\n                            if (ref instanceof MapSchema) {\n                                //\n                                // MapSchema dynamic key\n                                //\n                                var dynamicIndex = changeTree.ref['$indexes'].get(fieldIndex);\n                                string$1(bytes, dynamicIndex);\n                            }\n                        }\n                        if (operation.op === exports.OPERATION.DELETE) {\n                            //\n                            // TODO: delete from filter cache data.\n                            //\n                            // if (useFilters) {\n                            //     delete changeTree.caches[fieldIndex];\n                            // }\n                            continue;\n                        }\n                        // const type = changeTree.childType || ref._schema[field];\n                        var type = changeTree.getType(fieldIndex);\n                        // const type = changeTree.getType(fieldIndex);\n                        var value = changeTree.getValue(fieldIndex);\n                        // Enqueue ChangeTree to be visited\n                        if (value &&\n                            value['$changes'] &&\n                            !refIdsVisited.has(value['$changes'])) {\n                            changeTrees.push(value['$changes']);\n                            value['$changes'].ensureRefId();\n                            numChangeTrees++;\n                        }\n                        if (operation.op === exports.OPERATION.TOUCH) {\n                            continue;\n                        }\n                        if (Schema.is(type)) {\n                            assertInstanceType(value, type, ref, field);\n                            //\n                            // Encode refId for this instance.\n                            // The actual instance is going to be encoded on next `changeTree` iteration.\n                            //\n                            number$1(bytes, value.$changes.refId);\n                            // Try to encode inherited TYPE_ID if it's an ADD operation.\n                            if ((operation.op & exports.OPERATION.ADD) === exports.OPERATION.ADD) {\n                                this.tryEncodeTypeId(bytes, type, value.constructor);\n                            }\n                        }\n                        else if (typeof (type) === \"string\") {\n                            //\n                            // Primitive values\n                            //\n                            encodePrimitiveType(type, bytes, value, ref, field);\n                        }\n                        else {\n                            //\n                            // Custom type (MapSchema, ArraySchema, etc)\n                            //\n                            var definition = getType(Object.keys(type)[0]);\n                            //\n                            // ensure a ArraySchema has been provided\n                            //\n                            assertInstanceType(ref[\"_\".concat(field)], definition.constructor, ref, field);\n                            //\n                            // Encode refId for this instance.\n                            // The actual instance is going to be encoded on next `changeTree` iteration.\n                            //\n                            number$1(bytes, value.$changes.refId);\n                        }\n                        if (useFilters) {\n                            // cache begin / end index\n                            changeTree.cache(fieldIndex, bytes.slice(beginIndex));\n                        }\n                    }\n                    if (!encodeAll && !useFilters) {\n                        changeTree.discard();\n                    }\n                }\n                return bytes;\n            };\n            Schema.prototype.encodeAll = function (useFilters) {\n                return this.encode(true, [], useFilters);\n            };\n            Schema.prototype.applyFilters = function (client, encodeAll) {\n                var _a, _b;\n                if (encodeAll === void 0) { encodeAll = false; }\n                var root = this;\n                var refIdsDissallowed = new Set();\n                var $filterState = ClientState.get(client);\n                var changeTrees = [this.$changes];\n                var numChangeTrees = 1;\n                var filteredBytes = [];\n                var _loop_1 = function (i) {\n                    var changeTree = changeTrees[i];\n                    if (refIdsDissallowed.has(changeTree.refId)) {\n                        return \"continue\";\n                    }\n                    var ref = changeTree.ref;\n                    var isSchema = ref instanceof Schema;\n                    uint8$1(filteredBytes, SWITCH_TO_STRUCTURE);\n                    number$1(filteredBytes, changeTree.refId);\n                    var clientHasRefId = $filterState.refIds.has(changeTree);\n                    var isEncodeAll = (encodeAll || !clientHasRefId);\n                    // console.log(\"REF:\", ref.constructor.name);\n                    // console.log(\"Encode all?\", isEncodeAll);\n                    //\n                    // include `changeTree` on list of known refIds by this client.\n                    //\n                    $filterState.addRefId(changeTree);\n                    var containerIndexes = $filterState.containerIndexes.get(changeTree);\n                    var changes = (isEncodeAll)\n                        ? Array.from(changeTree.allChanges)\n                        : Array.from(changeTree.changes.values());\n                    //\n                    // WORKAROUND: tries to re-evaluate previously not included @filter() attributes\n                    // - see \"DELETE a field of Schema\" test case.\n                    //\n                    if (!encodeAll &&\n                        isSchema &&\n                        ref._definition.indexesWithFilters) {\n                        var indexesWithFilters = ref._definition.indexesWithFilters;\n                        indexesWithFilters.forEach(function (indexWithFilter) {\n                            if (!containerIndexes.has(indexWithFilter) &&\n                                changeTree.allChanges.has(indexWithFilter)) {\n                                if (isEncodeAll) {\n                                    changes.push(indexWithFilter);\n                                }\n                                else {\n                                    changes.push({ op: exports.OPERATION.ADD, index: indexWithFilter, });\n                                }\n                            }\n                        });\n                    }\n                    for (var j = 0, cl = changes.length; j < cl; j++) {\n                        var change = (isEncodeAll)\n                            ? { op: exports.OPERATION.ADD, index: changes[j] }\n                            : changes[j];\n                        // custom operations\n                        if (change.op === exports.OPERATION.CLEAR) {\n                            uint8$1(filteredBytes, change.op);\n                            continue;\n                        }\n                        var fieldIndex = change.index;\n                        //\n                        // Deleting fields: encode the operation + field index\n                        //\n                        if (change.op === exports.OPERATION.DELETE) {\n                            //\n                            // DELETE operations also need to go through filtering.\n                            //\n                            // TODO: cache the previous value so we can access the value (primitive or `refId`)\n                            // (check against `$filterState.refIds`)\n                            //\n                            if (isSchema) {\n                                uint8$1(filteredBytes, change.op | fieldIndex);\n                            }\n                            else {\n                                uint8$1(filteredBytes, change.op);\n                                number$1(filteredBytes, fieldIndex);\n                            }\n                            continue;\n                        }\n                        // indexed operation\n                        var value = changeTree.getValue(fieldIndex);\n                        var type = changeTree.getType(fieldIndex);\n                        if (isSchema) {\n                            // Is a Schema!\n                            var filter = (ref._definition.filters &&\n                                ref._definition.filters[fieldIndex]);\n                            if (filter && !filter.call(ref, client, value, root)) {\n                                if (value && value['$changes']) {\n                                    refIdsDissallowed.add(value['$changes'].refId);\n                                }\n                                continue;\n                            }\n                        }\n                        else {\n                            // Is a collection! (map, array, etc.)\n                            var parent = changeTree.parent;\n                            var filter = changeTree.getChildrenFilter();\n                            if (filter && !filter.call(parent, client, ref['$indexes'].get(fieldIndex), value, root)) {\n                                if (value && value['$changes']) {\n                                    refIdsDissallowed.add(value['$changes'].refId);\n                                }\n                                continue;\n                            }\n                        }\n                        // visit child ChangeTree on further iteration.\n                        if (value['$changes']) {\n                            changeTrees.push(value['$changes']);\n                            numChangeTrees++;\n                        }\n                        //\n                        // Copy cached bytes\n                        //\n                        if (change.op !== exports.OPERATION.TOUCH) {\n                            //\n                            // TODO: refactor me!\n                            //\n                            if (change.op === exports.OPERATION.ADD || isSchema) {\n                                //\n                                // use cached bytes directly if is from Schema type.\n                                //\n                                filteredBytes.push.apply(filteredBytes, (_a = changeTree.caches[fieldIndex]) !== null && _a !== void 0 ? _a : []);\n                                containerIndexes.add(fieldIndex);\n                            }\n                            else {\n                                if (containerIndexes.has(fieldIndex)) {\n                                    //\n                                    // use cached bytes if already has the field\n                                    //\n                                    filteredBytes.push.apply(filteredBytes, (_b = changeTree.caches[fieldIndex]) !== null && _b !== void 0 ? _b : []);\n                                }\n                                else {\n                                    //\n                                    // force ADD operation if field is not known by this client.\n                                    //\n                                    containerIndexes.add(fieldIndex);\n                                    uint8$1(filteredBytes, exports.OPERATION.ADD);\n                                    number$1(filteredBytes, fieldIndex);\n                                    if (ref instanceof MapSchema) {\n                                        //\n                                        // MapSchema dynamic key\n                                        //\n                                        var dynamicIndex = changeTree.ref['$indexes'].get(fieldIndex);\n                                        string$1(filteredBytes, dynamicIndex);\n                                    }\n                                    if (value['$changes']) {\n                                        number$1(filteredBytes, value['$changes'].refId);\n                                    }\n                                    else {\n                                        // \"encodePrimitiveType\" without type checking.\n                                        // the type checking has been done on the first .encode() call.\n                                        encode[type](filteredBytes, value);\n                                    }\n                                }\n                            }\n                        }\n                        else if (value['$changes'] && !isSchema) {\n                            //\n                            // TODO:\n                            // - track ADD/REPLACE/DELETE instances on `$filterState`\n                            // - do NOT always encode dynamicIndex for MapSchema.\n                            //   (If client already has that key, only the first index is necessary.)\n                            //\n                            uint8$1(filteredBytes, exports.OPERATION.ADD);\n                            number$1(filteredBytes, fieldIndex);\n                            if (ref instanceof MapSchema) {\n                                //\n                                // MapSchema dynamic key\n                                //\n                                var dynamicIndex = changeTree.ref['$indexes'].get(fieldIndex);\n                                string$1(filteredBytes, dynamicIndex);\n                            }\n                            number$1(filteredBytes, value['$changes'].refId);\n                        }\n                    }\n                };\n                for (var i = 0; i < numChangeTrees; i++) {\n                    _loop_1(i);\n                }\n                return filteredBytes;\n            };\n            Schema.prototype.clone = function () {\n                var _a;\n                var cloned = new (this.constructor);\n                var schema = this._definition.schema;\n                for (var field in schema) {\n                    if (typeof (this[field]) === \"object\" &&\n                        typeof ((_a = this[field]) === null || _a === void 0 ? void 0 : _a.clone) === \"function\") {\n                        // deep clone\n                        cloned[field] = this[field].clone();\n                    }\n                    else {\n                        // primitive values\n                        cloned[field] = this[field];\n                    }\n                }\n                return cloned;\n            };\n            Schema.prototype.toJSON = function () {\n                var schema = this._definition.schema;\n                var deprecated = this._definition.deprecated;\n                var obj = {};\n                for (var field in schema) {\n                    if (!deprecated[field] && this[field] !== null && typeof (this[field]) !== \"undefined\") {\n                        obj[field] = (typeof (this[field]['toJSON']) === \"function\")\n                            ? this[field]['toJSON']()\n                            : this[\"_\".concat(field)];\n                    }\n                }\n                return obj;\n            };\n            Schema.prototype.discardAllChanges = function () {\n                this.$changes.discardAll();\n            };\n            Schema.prototype.getByIndex = function (index) {\n                return this[this._definition.fieldsByIndex[index]];\n            };\n            Schema.prototype.deleteByIndex = function (index) {\n                this[this._definition.fieldsByIndex[index]] = undefined;\n            };\n            Schema.prototype.tryEncodeTypeId = function (bytes, type, targetType) {\n                if (type._typeid !== targetType._typeid) {\n                    uint8$1(bytes, TYPE_ID);\n                    number$1(bytes, targetType._typeid);\n                }\n            };\n            Schema.prototype.getSchemaType = function (bytes, it, defaultType) {\n                var type;\n                if (bytes[it.offset] === TYPE_ID) {\n                    it.offset++;\n                    type = this.constructor._context.get(number(bytes, it));\n                }\n                return type || defaultType;\n            };\n            Schema.prototype.createTypeInstance = function (type) {\n                var instance = new type();\n                // assign root on $changes\n                instance.$changes.root = this.$changes.root;\n                return instance;\n            };\n            Schema.prototype._triggerChanges = function (changes) {\n                var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                var uniqueRefIds = new Set();\n                var $refs = this.$changes.root.refs;\n                var _loop_2 = function (i) {\n                    var change = changes[i];\n                    var refId = change.refId;\n                    var ref = $refs.get(refId);\n                    var $callbacks = ref['$callbacks'];\n                    //\n                    // trigger onRemove on child structure.\n                    //\n                    if ((change.op & exports.OPERATION.DELETE) === exports.OPERATION.DELETE &&\n                        change.previousValue instanceof Schema) {\n                        (_b = (_a = change.previousValue['$callbacks']) === null || _a === void 0 ? void 0 : _a[exports.OPERATION.DELETE]) === null || _b === void 0 ? void 0 : _b.forEach(function (callback) { return callback(); });\n                    }\n                    // no callbacks defined, skip this structure!\n                    if (!$callbacks) {\n                        return \"continue\";\n                    }\n                    if (ref instanceof Schema) {\n                        if (!uniqueRefIds.has(refId)) {\n                            try {\n                                // trigger onChange\n                                (_c = $callbacks === null || $callbacks === void 0 ? void 0 : $callbacks[exports.OPERATION.REPLACE]) === null || _c === void 0 ? void 0 : _c.forEach(function (callback) {\n                                    return callback(changes);\n                                });\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                        try {\n                            if ($callbacks.hasOwnProperty(change.field)) {\n                                (_d = $callbacks[change.field]) === null || _d === void 0 ? void 0 : _d.forEach(function (callback) {\n                                    return callback(change.value, change.previousValue);\n                                });\n                            }\n                        }\n                        catch (e) {\n                            Schema.onError(e);\n                        }\n                    }\n                    else {\n                        // is a collection of items\n                        if (change.op === exports.OPERATION.ADD && change.previousValue === undefined) {\n                            // triger onAdd\n                            (_e = $callbacks[exports.OPERATION.ADD]) === null || _e === void 0 ? void 0 : _e.forEach(function (callback) { var _a; return callback(change.value, (_a = change.dynamicIndex) !== null && _a !== void 0 ? _a : change.field); });\n                        }\n                        else if (change.op === exports.OPERATION.DELETE) {\n                            //\n                            // FIXME: `previousValue` should always be available.\n                            // ADD + DELETE operations are still encoding DELETE operation.\n                            //\n                            if (change.previousValue !== undefined) {\n                                // triger onRemove\n                                (_f = $callbacks[exports.OPERATION.DELETE]) === null || _f === void 0 ? void 0 : _f.forEach(function (callback) { var _a; return callback(change.previousValue, (_a = change.dynamicIndex) !== null && _a !== void 0 ? _a : change.field); });\n                            }\n                        }\n                        else if (change.op === exports.OPERATION.DELETE_AND_ADD) {\n                            // triger onRemove\n                            if (change.previousValue !== undefined) {\n                                (_g = $callbacks[exports.OPERATION.DELETE]) === null || _g === void 0 ? void 0 : _g.forEach(function (callback) { var _a; return callback(change.previousValue, (_a = change.dynamicIndex) !== null && _a !== void 0 ? _a : change.field); });\n                            }\n                            // triger onAdd\n                            (_h = $callbacks[exports.OPERATION.ADD]) === null || _h === void 0 ? void 0 : _h.forEach(function (callback) { var _a; return callback(change.value, (_a = change.dynamicIndex) !== null && _a !== void 0 ? _a : change.field); });\n                        }\n                        // trigger onChange\n                        if (change.value !== change.previousValue) {\n                            (_j = $callbacks[exports.OPERATION.REPLACE]) === null || _j === void 0 ? void 0 : _j.forEach(function (callback) { var _a; return callback(change.value, (_a = change.dynamicIndex) !== null && _a !== void 0 ? _a : change.field); });\n                        }\n                    }\n                    uniqueRefIds.add(refId);\n                };\n                for (var i = 0; i < changes.length; i++) {\n                    _loop_2(i);\n                }\n            };\n            Schema._definition = SchemaDefinition.create();\n            return Schema;\n        }());\n\n        function dumpChanges(schema) {\n            var changeTrees = [schema['$changes']];\n            var numChangeTrees = 1;\n            var dump = {};\n            var currentStructure = dump;\n            var _loop_1 = function (i) {\n                var changeTree = changeTrees[i];\n                changeTree.changes.forEach(function (change) {\n                    var ref = changeTree.ref;\n                    var fieldIndex = change.index;\n                    var field = (ref['_definition'])\n                        ? ref['_definition'].fieldsByIndex[fieldIndex]\n                        : ref['$indexes'].get(fieldIndex);\n                    currentStructure[field] = changeTree.getValue(fieldIndex);\n                });\n            };\n            for (var i = 0; i < numChangeTrees; i++) {\n                _loop_1(i);\n            }\n            return dump;\n        }\n\n        var reflectionContext = { context: new Context() };\n        /**\n         * Reflection\n         */\n        var ReflectionField = /** @class */ (function (_super) {\n            __extends(ReflectionField, _super);\n            function ReflectionField() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            __decorate([\n                type(\"string\", reflectionContext)\n            ], ReflectionField.prototype, \"name\", void 0);\n            __decorate([\n                type(\"string\", reflectionContext)\n            ], ReflectionField.prototype, \"type\", void 0);\n            __decorate([\n                type(\"number\", reflectionContext)\n            ], ReflectionField.prototype, \"referencedType\", void 0);\n            return ReflectionField;\n        }(Schema));\n        var ReflectionType = /** @class */ (function (_super) {\n            __extends(ReflectionType, _super);\n            function ReflectionType() {\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.fields = new ArraySchema();\n                return _this;\n            }\n            __decorate([\n                type(\"number\", reflectionContext)\n            ], ReflectionType.prototype, \"id\", void 0);\n            __decorate([\n                type([ReflectionField], reflectionContext)\n            ], ReflectionType.prototype, \"fields\", void 0);\n            return ReflectionType;\n        }(Schema));\n        var Reflection = /** @class */ (function (_super) {\n            __extends(Reflection, _super);\n            function Reflection() {\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.types = new ArraySchema();\n                return _this;\n            }\n            Reflection.encode = function (instance) {\n                var rootSchemaType = instance.constructor;\n                var reflection = new Reflection();\n                reflection.rootType = rootSchemaType._typeid;\n                var buildType = function (currentType, schema) {\n                    for (var fieldName in schema) {\n                        var field = new ReflectionField();\n                        field.name = fieldName;\n                        var fieldType = void 0;\n                        if (typeof (schema[fieldName]) === \"string\") {\n                            fieldType = schema[fieldName];\n                        }\n                        else {\n                            var type_1 = schema[fieldName];\n                            var childTypeSchema = void 0;\n                            //\n                            // TODO: refactor below.\n                            //\n                            if (Schema.is(type_1)) {\n                                fieldType = \"ref\";\n                                childTypeSchema = schema[fieldName];\n                            }\n                            else {\n                                fieldType = Object.keys(type_1)[0];\n                                if (typeof (type_1[fieldType]) === \"string\") {\n                                    fieldType += \":\" + type_1[fieldType]; // array:string\n                                }\n                                else {\n                                    childTypeSchema = type_1[fieldType];\n                                }\n                            }\n                            field.referencedType = (childTypeSchema)\n                                ? childTypeSchema._typeid\n                                : -1;\n                        }\n                        field.type = fieldType;\n                        currentType.fields.push(field);\n                    }\n                    reflection.types.push(currentType);\n                };\n                var types = rootSchemaType._context.types;\n                for (var typeid in types) {\n                    var type_2 = new ReflectionType();\n                    type_2.id = Number(typeid);\n                    buildType(type_2, types[typeid]._definition.schema);\n                }\n                return reflection.encodeAll();\n            };\n            Reflection.decode = function (bytes, it) {\n                var context = new Context();\n                var reflection = new Reflection();\n                reflection.decode(bytes, it);\n                var schemaTypes = reflection.types.reduce(function (types, reflectionType) {\n                    var schema = /** @class */ (function (_super) {\n                        __extends(_, _super);\n                        function _() {\n                            return _super !== null && _super.apply(this, arguments) || this;\n                        }\n                        return _;\n                    }(Schema));\n                    var typeid = reflectionType.id;\n                    types[typeid] = schema;\n                    context.add(schema, typeid);\n                    return types;\n                }, {});\n                reflection.types.forEach(function (reflectionType) {\n                    var schemaType = schemaTypes[reflectionType.id];\n                    reflectionType.fields.forEach(function (field) {\n                        var _a;\n                        if (field.referencedType !== undefined) {\n                            var fieldType = field.type;\n                            var refType = schemaTypes[field.referencedType];\n                            // map or array of primitive type (-1)\n                            if (!refType) {\n                                var typeInfo = field.type.split(\":\");\n                                fieldType = typeInfo[0];\n                                refType = typeInfo[1];\n                            }\n                            if (fieldType === \"ref\") {\n                                type(refType, { context: context })(schemaType.prototype, field.name);\n                            }\n                            else {\n                                type((_a = {}, _a[fieldType] = refType, _a), { context: context })(schemaType.prototype, field.name);\n                            }\n                        }\n                        else {\n                            type(field.type, { context: context })(schemaType.prototype, field.name);\n                        }\n                    });\n                });\n                var rootType = schemaTypes[reflection.rootType];\n                var rootInstance = new rootType();\n                /**\n                 * auto-initialize referenced types on root type\n                 * to allow registering listeners immediatelly on client-side\n                 */\n                for (var fieldName in rootType._definition.schema) {\n                    var fieldType = rootType._definition.schema[fieldName];\n                    if (typeof (fieldType) !== \"string\") {\n                        rootInstance[fieldName] = (typeof (fieldType) === \"function\")\n                            ? new fieldType() // is a schema reference\n                            : new (getType(Object.keys(fieldType)[0])).constructor(); // is a \"collection\"\n                    }\n                }\n                return rootInstance;\n            };\n            __decorate([\n                type([ReflectionType], reflectionContext)\n            ], Reflection.prototype, \"types\", void 0);\n            __decorate([\n                type(\"number\", reflectionContext)\n            ], Reflection.prototype, \"rootType\", void 0);\n            return Reflection;\n        }(Schema));\n\n        registerType(\"map\", { constructor: MapSchema });\n        registerType(\"array\", { constructor: ArraySchema });\n        registerType(\"set\", { constructor: SetSchema });\n        registerType(\"collection\", { constructor: CollectionSchema, });\n\n        exports.ArraySchema = ArraySchema;\n        exports.CollectionSchema = CollectionSchema;\n        exports.Context = Context;\n        exports.MapSchema = MapSchema;\n        exports.Reflection = Reflection;\n        exports.ReflectionField = ReflectionField;\n        exports.ReflectionType = ReflectionType;\n        exports.Schema = Schema;\n        exports.SchemaDefinition = SchemaDefinition;\n        exports.SetSchema = SetSchema;\n        exports.decode = decode;\n        exports.defineTypes = defineTypes;\n        exports.deprecated = deprecated;\n        exports.dumpChanges = dumpChanges;\n        exports.encode = encode;\n        exports.filter = filter;\n        exports.filterChildren = filterChildren;\n        exports.hasFilter = hasFilter;\n        exports.registerType = registerType;\n        exports.type = type;\n\n        Object.defineProperty(exports, '__esModule', { value: true });\n\n    }));\n    });\n\n    var Room = /** @class */ (function () {\n        function Room(name, rootSchema) {\n            var _this = this;\n            // Public signals\n            this.onStateChange = createSignal();\n            this.onError = createSignal();\n            this.onLeave = createSignal();\n            this.onJoin = createSignal();\n            this.hasJoined = false;\n            this.onMessageHandlers = createNanoEvents();\n            this.roomId = null;\n            this.name = name;\n            if (rootSchema) {\n                this.serializer = new (getSerializer(\"schema\"));\n                this.rootSchema = rootSchema;\n                this.serializer.state = new rootSchema();\n            }\n            this.onError(function (code, message) { return console.warn(\"colyseus.js - onError => (\".concat(code, \") \").concat(message)); });\n            this.onLeave(function () { return _this.removeAllListeners(); });\n        }\n        Object.defineProperty(Room.prototype, \"id\", {\n            // TODO: deprecate me on version 1.0\n            get: function () { return this.roomId; },\n            enumerable: false,\n            configurable: true\n        });\n        Room.prototype.connect = function (endpoint, devModeCloseCallback, room // when reconnecting on devMode, re-use previous room intance for handling events.\n        ) {\n            if (room === void 0) { room = this; }\n            var connection = new Connection();\n            room.connection = connection;\n            connection.events.onmessage = Room.prototype.onMessageCallback.bind(room);\n            connection.events.onclose = function (e) {\n                if (!room.hasJoined) {\n                    console.warn(\"Room connection was closed unexpectedly (\".concat(e.code, \"): \").concat(e.reason));\n                    room.onError.invoke(e.code, e.reason);\n                    return;\n                }\n                if (e.code === CloseCode.DEVMODE_RESTART && devModeCloseCallback) {\n                    devModeCloseCallback();\n                }\n                else {\n                    room.onLeave.invoke(e.code);\n                    room.destroy();\n                }\n            };\n            connection.events.onerror = function (e) {\n                console.warn(\"Room, onError (\".concat(e.code, \"): \").concat(e.reason));\n                room.onError.invoke(e.code, e.reason);\n            };\n            connection.connect(endpoint);\n        };\n        Room.prototype.leave = function (consented) {\n            var _this = this;\n            if (consented === void 0) { consented = true; }\n            return new Promise(function (resolve) {\n                _this.onLeave(function (code) { return resolve(code); });\n                if (_this.connection) {\n                    if (consented) {\n                        _this.connection.send([exports.Protocol.LEAVE_ROOM]);\n                    }\n                    else {\n                        _this.connection.close();\n                    }\n                }\n                else {\n                    _this.onLeave.invoke(CloseCode.CONSENTED);\n                }\n            });\n        };\n        Room.prototype.onMessage = function (type, callback) {\n            return this.onMessageHandlers.on(this.getMessageHandlerKey(type), callback);\n        };\n        Room.prototype.send = function (type, message) {\n            var initialBytes = [exports.Protocol.ROOM_DATA];\n            if (typeof (type) === \"string\") {\n                umd.encode.string(initialBytes, type);\n            }\n            else {\n                umd.encode.number(initialBytes, type);\n            }\n            var arr;\n            if (message !== undefined) {\n                var encoded = encode(message);\n                arr = new Uint8Array(initialBytes.length + encoded.byteLength);\n                arr.set(new Uint8Array(initialBytes), 0);\n                arr.set(new Uint8Array(encoded), initialBytes.length);\n            }\n            else {\n                arr = new Uint8Array(initialBytes);\n            }\n            this.connection.send(arr.buffer);\n        };\n        Room.prototype.sendBytes = function (type, bytes) {\n            var initialBytes = [exports.Protocol.ROOM_DATA_BYTES];\n            if (typeof (type) === \"string\") {\n                umd.encode.string(initialBytes, type);\n            }\n            else {\n                umd.encode.number(initialBytes, type);\n            }\n            var arr;\n            arr = new Uint8Array(initialBytes.length + (bytes.byteLength || bytes.length));\n            arr.set(new Uint8Array(initialBytes), 0);\n            arr.set(new Uint8Array(bytes), initialBytes.length);\n            this.connection.send(arr.buffer);\n        };\n        Object.defineProperty(Room.prototype, \"state\", {\n            get: function () {\n                return this.serializer.getState();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Room.prototype.removeAllListeners = function () {\n            this.onJoin.clear();\n            this.onStateChange.clear();\n            this.onError.clear();\n            this.onLeave.clear();\n            this.onMessageHandlers.events = {};\n        };\n        Room.prototype.onMessageCallback = function (event) {\n            var bytes = Array.from(new Uint8Array(event.data));\n            var code = bytes[0];\n            if (code === exports.Protocol.JOIN_ROOM) {\n                var offset = 1;\n                var reconnectionToken = utf8Read(bytes, offset);\n                offset += utf8Length(reconnectionToken);\n                this.serializerId = utf8Read(bytes, offset);\n                offset += utf8Length(this.serializerId);\n                // Instantiate serializer if not locally available.\n                if (!this.serializer) {\n                    var serializer = getSerializer(this.serializerId);\n                    this.serializer = new serializer();\n                }\n                if (bytes.length > offset && this.serializer.handshake) {\n                    this.serializer.handshake(bytes, { offset: offset });\n                }\n                this.reconnectionToken = \"\".concat(this.roomId, \":\").concat(reconnectionToken);\n                this.hasJoined = true;\n                this.onJoin.invoke();\n                // acknowledge successfull JOIN_ROOM\n                this.connection.send([exports.Protocol.JOIN_ROOM]);\n            }\n            else if (code === exports.Protocol.ERROR) {\n                var it_1 = { offset: 1 };\n                var code_1 = umd.decode.number(bytes, it_1);\n                var message = umd.decode.string(bytes, it_1);\n                this.onError.invoke(code_1, message);\n            }\n            else if (code === exports.Protocol.LEAVE_ROOM) {\n                this.leave();\n            }\n            else if (code === exports.Protocol.ROOM_DATA_SCHEMA) {\n                var it_2 = { offset: 1 };\n                var context_1 = this.serializer.getState().constructor._context;\n                var type = context_1.get(umd.decode.number(bytes, it_2));\n                var message = new type();\n                message.decode(bytes, it_2);\n                this.dispatchMessage(type, message);\n            }\n            else if (code === exports.Protocol.ROOM_STATE) {\n                bytes.shift(); // drop `code` byte\n                this.setState(bytes);\n            }\n            else if (code === exports.Protocol.ROOM_STATE_PATCH) {\n                bytes.shift(); // drop `code` byte\n                this.patch(bytes);\n            }\n            else if (code === exports.Protocol.ROOM_DATA) {\n                var it_3 = { offset: 1 };\n                var type = (umd.decode.stringCheck(bytes, it_3))\n                    ? umd.decode.string(bytes, it_3)\n                    : umd.decode.number(bytes, it_3);\n                var message = (bytes.length > it_3.offset)\n                    ? decode(event.data, it_3.offset)\n                    : undefined;\n                this.dispatchMessage(type, message);\n            }\n            else if (code === exports.Protocol.ROOM_DATA_BYTES) {\n                var it_4 = { offset: 1 };\n                var type = (umd.decode.stringCheck(bytes, it_4))\n                    ? umd.decode.string(bytes, it_4)\n                    : umd.decode.number(bytes, it_4);\n                this.dispatchMessage(type, new Uint8Array(bytes.slice(it_4.offset)));\n            }\n        };\n        Room.prototype.setState = function (encodedState) {\n            this.serializer.setState(encodedState);\n            this.onStateChange.invoke(this.serializer.getState());\n        };\n        Room.prototype.patch = function (binaryPatch) {\n            this.serializer.patch(binaryPatch);\n            this.onStateChange.invoke(this.serializer.getState());\n        };\n        Room.prototype.dispatchMessage = function (type, message) {\n            var messageType = this.getMessageHandlerKey(type);\n            if (this.onMessageHandlers.events[messageType]) {\n                this.onMessageHandlers.emit(messageType, message);\n            }\n            else if (this.onMessageHandlers.events['*']) {\n                this.onMessageHandlers.emit('*', type, message);\n            }\n            else {\n                console.warn(\"colyseus.js: onMessage() not registered for type '\".concat(type, \"'.\"));\n            }\n        };\n        Room.prototype.destroy = function () {\n            if (this.serializer) {\n                this.serializer.teardown();\n            }\n        };\n        Room.prototype.getMessageHandlerKey = function (type) {\n            switch (typeof (type)) {\n                // typeof Schema\n                case \"function\": return \"$\".concat(type._typeid);\n                // string\n                case \"string\": return type;\n                // number\n                case \"number\": return \"i\".concat(type);\n                default: throw new Error(\"invalid message type.\");\n            }\n        };\n        return Room;\n    }());\n\n    var _a;\n    var MatchMakeError = /** @class */ (function (_super) {\n        __extends(MatchMakeError, _super);\n        function MatchMakeError(message, code) {\n            var _this = _super.call(this, message) || this;\n            _this.code = code;\n            Object.setPrototypeOf(_this, MatchMakeError.prototype);\n            return _this;\n        }\n        return MatchMakeError;\n    }(Error));\n    // - React Native does not provide `window.location`\n    // - Cocos Creator (Native) does not provide `window.location.hostname`\n    var DEFAULT_ENDPOINT = (typeof (window) !== \"undefined\" && typeof ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.hostname) !== \"undefined\")\n        ? \"\".concat(window.location.protocol.replace(\"http\", \"ws\"), \"//\").concat(window.location.hostname).concat((window.location.port && \":\".concat(window.location.port)))\n        : \"ws://127.0.0.1:2567\";\n    var Client = /** @class */ (function () {\n        function Client(settings) {\n            if (settings === void 0) { settings = DEFAULT_ENDPOINT; }\n            if (typeof (settings) === \"string\") {\n                //\n                // endpoint by url\n                //\n                var url = new URL(settings);\n                var secure = (url.protocol === \"https:\" || url.protocol === \"wss:\");\n                var port = Number(url.port || (secure ? 443 : 80));\n                this.settings = {\n                    hostname: url.hostname,\n                    pathname: url.pathname !== \"/\" ? url.pathname : \"\",\n                    port: port,\n                    secure: secure\n                };\n            }\n            else {\n                //\n                // endpoint by settings\n                //\n                if (settings.port === undefined) {\n                    settings.port = (settings.secure) ? 443 : 80;\n                }\n                if (settings.pathname === undefined) {\n                    settings.pathname = \"\";\n                }\n                this.settings = settings;\n            }\n        }\n        Client.prototype.joinOrCreate = function (roomName, options, rootSchema) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.createMatchMakeRequest('joinOrCreate', roomName, options, rootSchema)];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        Client.prototype.create = function (roomName, options, rootSchema) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.createMatchMakeRequest('create', roomName, options, rootSchema)];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        Client.prototype.join = function (roomName, options, rootSchema) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.createMatchMakeRequest('join', roomName, options, rootSchema)];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        Client.prototype.joinById = function (roomId, options, rootSchema) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.createMatchMakeRequest('joinById', roomId, options, rootSchema)];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        /**\n         * Re-establish connection with a room this client was previously connected to.\n         *\n         * @param reconnectionToken The `room.reconnectionToken` from previously connected room.\n         * @param rootSchema (optional) Concrete root schema definition\n         * @returns Promise<Room>\n         */\n        Client.prototype.reconnect = function (reconnectionToken, rootSchema) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a, roomId, token;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (typeof (reconnectionToken) === \"string\" && typeof (rootSchema) === \"string\") {\n                                throw new Error(\"DEPRECATED: .reconnect() now only accepts 'reconnectionToken' as argument.\\nYou can get this token from previously connected `room.reconnectionToken`\");\n                            }\n                            _a = reconnectionToken.split(\":\"), roomId = _a[0], token = _a[1];\n                            return [4 /*yield*/, this.createMatchMakeRequest('reconnect', roomId, { reconnectionToken: token }, rootSchema)];\n                        case 1: return [2 /*return*/, _b.sent()];\n                    }\n                });\n            });\n        };\n        Client.prototype.getAvailableRooms = function (roomName) {\n            if (roomName === void 0) { roomName = \"\"; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, get_1(this.getHttpEndpoint(\"\".concat(roomName)), {\n                                headers: {\n                                    'Accept': 'application/json'\n                                }\n                            })];\n                        case 1: return [2 /*return*/, (_a.sent()).data];\n                    }\n                });\n            });\n        };\n        Client.prototype.consumeSeatReservation = function (response, rootSchema, reuseRoomInstance // used in devMode\n        ) {\n            return __awaiter(this, void 0, void 0, function () {\n                var room, options, targetRoom;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    room = this.createRoom(response.room.name, rootSchema);\n                    room.roomId = response.room.roomId;\n                    room.sessionId = response.sessionId;\n                    options = { sessionId: room.sessionId };\n                    // forward \"reconnection token\" in case of reconnection.\n                    if (response.reconnectionToken) {\n                        options.reconnectionToken = response.reconnectionToken;\n                    }\n                    targetRoom = reuseRoomInstance || room;\n                    room.connect(this.buildEndpoint(response.room, options), response.devMode && (function () { return __awaiter(_this, void 0, void 0, function () {\n                        var retryCount, retryMaxRetries, retryReconnection;\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            console.info(\"[Colyseus devMode]: \".concat(String.fromCodePoint(0x1F504), \" Re-establishing connection with room id '\").concat(room.roomId, \"'...\")); // 🔄\n                            retryCount = 0;\n                            retryMaxRetries = 8;\n                            retryReconnection = function () { return __awaiter(_this, void 0, void 0, function () {\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            retryCount++;\n                                            _a.label = 1;\n                                        case 1:\n                                            _a.trys.push([1, 3, , 4]);\n                                            return [4 /*yield*/, this.consumeSeatReservation(response, rootSchema, targetRoom)];\n                                        case 2:\n                                            _a.sent();\n                                            console.info(\"[Colyseus devMode]: \".concat(String.fromCodePoint(0x2705), \" Successfully re-established connection with room '\").concat(room.roomId, \"'\")); // ✅\n                                            return [3 /*break*/, 4];\n                                        case 3:\n                                            _a.sent();\n                                            if (retryCount < retryMaxRetries) {\n                                                console.info(\"[Colyseus devMode]: \".concat(String.fromCodePoint(0x1F504), \" retrying... (\").concat(retryCount, \" out of \").concat(retryMaxRetries, \")\")); // 🔄\n                                                setTimeout(retryReconnection, 2000);\n                                            }\n                                            else {\n                                                console.info(\"[Colyseus devMode]: \".concat(String.fromCodePoint(0x274C), \" Failed to reconnect. Is your server running? Please check server logs.\")); // ❌\n                                            }\n                                            return [3 /*break*/, 4];\n                                        case 4: return [2 /*return*/];\n                                    }\n                                });\n                            }); };\n                            setTimeout(retryReconnection, 2000);\n                            return [2 /*return*/];\n                        });\n                    }); }), targetRoom);\n                    return [2 /*return*/, new Promise(function (resolve, reject) {\n                            var onError = function (code, message) { return reject(new ServerError(code, message)); };\n                            targetRoom.onError.once(onError);\n                            targetRoom['onJoin'].once(function () {\n                                targetRoom.onError.remove(onError);\n                                resolve(targetRoom);\n                            });\n                        })];\n                });\n            });\n        };\n        Client.prototype.createMatchMakeRequest = function (method, roomName, options, rootSchema, reuseRoomInstance) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                var response;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, post_1(this.getHttpEndpoint(\"\".concat(method, \"/\").concat(roomName)), {\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify(options)\n                            })];\n                        case 1:\n                            response = (_a.sent()).data;\n                            if (response.error) {\n                                throw new MatchMakeError(response.error, response.code);\n                            }\n                            // forward reconnection token during \"reconnect\" methods.\n                            if (method === \"reconnect\") {\n                                response.reconnectionToken = options.reconnectionToken;\n                            }\n                            return [4 /*yield*/, this.consumeSeatReservation(response, rootSchema, reuseRoomInstance)];\n                        case 2: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        Client.prototype.createRoom = function (roomName, rootSchema) {\n            return new Room(roomName, rootSchema);\n        };\n        Client.prototype.buildEndpoint = function (room, options) {\n            if (options === void 0) { options = {}; }\n            var params = [];\n            for (var name_1 in options) {\n                if (!options.hasOwnProperty(name_1)) {\n                    continue;\n                }\n                params.push(\"\".concat(name_1, \"=\").concat(options[name_1]));\n            }\n            var endpoint = (this.settings.secure)\n                ? \"wss://\"\n                : \"ws://\";\n            if (room.publicAddress) {\n                endpoint += \"\".concat(room.publicAddress);\n            }\n            else {\n                endpoint += \"\".concat(this.settings.hostname).concat(this.getEndpointPort()).concat(this.settings.pathname);\n            }\n            return \"\".concat(endpoint, \"/\").concat(room.processId, \"/\").concat(room.roomId, \"?\").concat(params.join('&'));\n        };\n        Client.prototype.getHttpEndpoint = function (segments) {\n            if (segments === void 0) { segments = ''; }\n            return \"\".concat((this.settings.secure) ? \"https\" : \"http\", \"://\").concat(this.settings.hostname).concat(this.getEndpointPort()).concat(this.settings.pathname, \"/matchmake/\").concat(segments);\n        };\n        Client.prototype.getEndpointPort = function () {\n            return (this.settings.port !== 80 && this.settings.port !== 443)\n                ? \":\".concat(this.settings.port)\n                : \"\";\n        };\n        return Client;\n    }());\n\n    /// <reference path=\"../typings/cocos-creator.d.ts\" />\n    /**\n     * We do not assign 'storage' to window.localStorage immediatelly for React\n     * Native compatibility. window.localStorage is not present when this module is\n     * loaded.\n     */\n    var storage;\n    function getStorage() {\n        if (!storage) {\n            storage = (typeof (cc) !== 'undefined' && cc.sys && cc.sys.localStorage)\n                ? cc.sys.localStorage // compatibility with cocos creator\n                : typeof (window) !== \"undefined\" && window.localStorage //RN does have window object at this point, but localStorage is not defined\n                    ? window.localStorage // regular browser environment\n                    : {\n                        cache: {},\n                        setItem: function (key, value) { this.cache[key] = value; },\n                        getItem: function (key) { this.cache[key]; },\n                        removeItem: function (key) { delete this.cache[key]; },\n                    };\n        }\n        return storage;\n    }\n    function setItem(key, value) {\n        getStorage().setItem(key, value);\n    }\n    function removeItem(key) {\n        getStorage().removeItem(key);\n    }\n    function getItem(key, callback) {\n        var value = getStorage().getItem(key);\n        if (typeof (Promise) === 'undefined' || // old browsers\n            !(value instanceof Promise)) {\n            // browser has synchronous return\n            callback(value);\n        }\n        else {\n            // react-native is asynchronous\n            value.then(function (id) { return callback(id); });\n        }\n    }\n\n    var TOKEN_STORAGE = \"colyseus-auth-token\";\n    exports.Platform = void 0;\n    (function (Platform) {\n        Platform[\"ios\"] = \"ios\";\n        Platform[\"android\"] = \"android\";\n    })(exports.Platform || (exports.Platform = {}));\n    var Auth = /** @class */ (function () {\n        function Auth(endpoint) {\n            var _this = this;\n            this._id = undefined;\n            this.username = undefined;\n            this.displayName = undefined;\n            this.avatarUrl = undefined;\n            this.isAnonymous = undefined;\n            this.email = undefined;\n            this.lang = undefined;\n            this.location = undefined;\n            this.timezone = undefined;\n            this.metadata = undefined;\n            this.devices = undefined;\n            this.facebookId = undefined;\n            this.twitterId = undefined;\n            this.googleId = undefined;\n            this.gameCenterId = undefined;\n            this.steamId = undefined;\n            this.friendIds = undefined;\n            this.blockedUserIds = undefined;\n            this.createdAt = undefined;\n            this.updatedAt = undefined;\n            // auth token\n            this.token = undefined;\n            this.endpoint = endpoint.replace(\"ws\", \"http\");\n            getItem(TOKEN_STORAGE, function (token) { return _this.token = token; });\n        }\n        Object.defineProperty(Auth.prototype, \"hasToken\", {\n            get: function () {\n                return !!this.token;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Auth.prototype.login = function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                var queryParams, data, attr;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            queryParams = Object.assign({}, options);\n                            if (this.hasToken) {\n                                queryParams.token = this.token;\n                            }\n                            return [4 /*yield*/, this.request('post', '/auth', queryParams)];\n                        case 1:\n                            data = _a.sent();\n                            // set & cache token\n                            this.token = data.token;\n                            setItem(TOKEN_STORAGE, this.token);\n                            for (attr in data) {\n                                if (this.hasOwnProperty(attr)) {\n                                    this[attr] = data[attr];\n                                }\n                            }\n                            this.registerPingService();\n                            return [2 /*return*/, this];\n                    }\n                });\n            });\n        };\n        Auth.prototype.save = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.request('put', '/auth', {}, {\n                                username: this.username,\n                                displayName: this.displayName,\n                                avatarUrl: this.avatarUrl,\n                                lang: this.lang,\n                                location: this.location,\n                                timezone: this.timezone,\n                            })];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this];\n                    }\n                });\n            });\n        };\n        Auth.prototype.getFriends = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.request('get', '/friends/all')];\n                        case 1: return [2 /*return*/, (_a.sent())];\n                    }\n                });\n            });\n        };\n        Auth.prototype.getOnlineFriends = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.request('get', '/friends/online')];\n                        case 1: return [2 /*return*/, (_a.sent())];\n                    }\n                });\n            });\n        };\n        Auth.prototype.getFriendRequests = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.request('get', '/friends/requests')];\n                        case 1: return [2 /*return*/, (_a.sent())];\n                    }\n                });\n            });\n        };\n        Auth.prototype.sendFriendRequest = function (friendId) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.request('post', '/friends/requests', { userId: friendId })];\n                        case 1: return [2 /*return*/, (_a.sent())];\n                    }\n                });\n            });\n        };\n        Auth.prototype.acceptFriendRequest = function (friendId) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.request('put', '/friends/requests', { userId: friendId })];\n                        case 1: return [2 /*return*/, (_a.sent())];\n                    }\n                });\n            });\n        };\n        Auth.prototype.declineFriendRequest = function (friendId) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.request('del', '/friends/requests', { userId: friendId })];\n                        case 1: return [2 /*return*/, (_a.sent())];\n                    }\n                });\n            });\n        };\n        Auth.prototype.blockUser = function (friendId) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.request('post', '/friends/block', { userId: friendId })];\n                        case 1: return [2 /*return*/, (_a.sent())];\n                    }\n                });\n            });\n        };\n        Auth.prototype.unblockUser = function (friendId) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.request('put', '/friends/block', { userId: friendId })];\n                        case 1: return [2 /*return*/, (_a.sent())];\n                    }\n                });\n            });\n        };\n        Auth.prototype.request = function (method, segments, query, body, headers) {\n            if (query === void 0) { query = {}; }\n            if (headers === void 0) { headers = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                var queryParams, name_1, queryString, opts;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            headers['Accept'] = 'application/json';\n                            if (this.hasToken) {\n                                headers['Authorization'] = 'Bearer ' + this.token;\n                            }\n                            queryParams = [];\n                            for (name_1 in query) {\n                                queryParams.push(\"\".concat(name_1, \"=\").concat(query[name_1]));\n                            }\n                            queryString = (queryParams.length > 0)\n                                ? \"?\".concat(queryParams.join(\"&\"))\n                                : '';\n                            opts = { headers: headers };\n                            if (body) {\n                                opts.body = body;\n                            }\n                            return [4 /*yield*/, http[method](\"\".concat(this.endpoint).concat(segments).concat(queryString), opts)];\n                        case 1: return [2 /*return*/, (_a.sent()).data];\n                    }\n                });\n            });\n        };\n        Auth.prototype.logout = function () {\n            this.token = undefined;\n            removeItem(TOKEN_STORAGE);\n            this.unregisterPingService();\n        };\n        Auth.prototype.registerPingService = function (timeout) {\n            var _this = this;\n            if (timeout === void 0) { timeout = 15000; }\n            this.unregisterPingService();\n            this.keepOnlineInterval = setInterval(function () { return _this.request('get', '/auth'); }, timeout);\n        };\n        Auth.prototype.unregisterPingService = function () {\n            clearInterval(this.keepOnlineInterval);\n        };\n        return Auth;\n    }());\n\n    var SchemaSerializer = /** @class */ (function () {\n        function SchemaSerializer() {\n        }\n        SchemaSerializer.prototype.setState = function (rawState) {\n            return this.state.decode(rawState);\n        };\n        SchemaSerializer.prototype.getState = function () {\n            return this.state;\n        };\n        SchemaSerializer.prototype.patch = function (patches) {\n            return this.state.decode(patches);\n        };\n        SchemaSerializer.prototype.teardown = function () {\n            var _a, _b;\n            (_b = (_a = this.state) === null || _a === void 0 ? void 0 : _a['$changes']) === null || _b === void 0 ? void 0 : _b.root.clearRefs();\n        };\n        SchemaSerializer.prototype.handshake = function (bytes, it) {\n            if (this.state) {\n                // TODO: validate client/server definitinos\n                var reflection = new umd.Reflection();\n                reflection.decode(bytes, it);\n            }\n            else {\n                // initialize reflected state from server\n                this.state = umd.Reflection.decode(bytes, it);\n            }\n        };\n        return SchemaSerializer;\n    }());\n\n    var NoneSerializer = /** @class */ (function () {\n        function NoneSerializer() {\n        }\n        NoneSerializer.prototype.setState = function (rawState) { };\n        NoneSerializer.prototype.getState = function () { return null; };\n        NoneSerializer.prototype.patch = function (patches) { };\n        NoneSerializer.prototype.teardown = function () { };\n        NoneSerializer.prototype.handshake = function (bytes) { };\n        return NoneSerializer;\n    }());\n\n    registerSerializer('schema', SchemaSerializer);\n    registerSerializer('none', NoneSerializer);\n\n    exports.Auth = Auth;\n    exports.Client = Client;\n    exports.Room = Room;\n    exports.SchemaSerializer = SchemaSerializer;\n    exports.registerSerializer = registerSerializer;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=colyseus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/colyseus.js/dist/colyseus.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"(app-client)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvcHJvY2Vzcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EscUNBQXFDLHFCQUFNLGlGQUFpRixxQkFBTSxrRUFBa0UscUJBQU0sV0FBVyxtQkFBTyxDQUFDLGlHQUF3Qjs7QUFFclAiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvcHJvY2Vzcy5qcz8xMzhhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9nbG9iYWxfcHJvY2VzcywgX2dsb2JhbF9wcm9jZXNzMTtcbm1vZHVsZS5leHBvcnRzID0gKChfZ2xvYmFsX3Byb2Nlc3MgPSBnbG9iYWwucHJvY2VzcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9nbG9iYWxfcHJvY2Vzcy5lbnYpICYmIHR5cGVvZiAoKF9nbG9iYWxfcHJvY2VzczEgPSBnbG9iYWwucHJvY2VzcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9nbG9iYWxfcHJvY2VzczEuZW52KSA9PT0gXCJvYmplY3RcIiA/IGdsb2JhbC5wcm9jZXNzIDogcmVxdWlyZShcIi4uLy4uL2NvbXBpbGVkL3Byb2Nlc3NcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb2Nlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=G%3A%5Cobject_hunt%5Capp%5Cg%5Cpage.tsx&server=false!":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=G%3A%5Cobject_hunt%5Capp%5Cg%5Cpage.tsx&server=false! ***!
  \*******************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/g/page.tsx */ \"(app-client)/./app/g/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPUclM0ElNUNvYmplY3RfaHVudCU1Q2FwcCU1Q2clNUNwYWdlLnRzeCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/YzlmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkc6XFxcXG9iamVjdF9odW50XFxcXGFwcFxcXFxnXFxcXHBhZ2UudHN4XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=G%3A%5Cobject_hunt%5Capp%5Cg%5Cpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-client)/./node_modules/react-slideshow-image/dist/styles.css":
/*!************************************************************!*\
  !*** ./node_modules/react-slideshow-image/dist/styles.css ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"354ab52811a6\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXNsaWRlc2hvdy1pbWFnZS9kaXN0L3N0eWxlcy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1zbGlkZXNob3ctaW1hZ2UvZGlzdC9zdHlsZXMuY3NzP2ZlNmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIzNTRhYjUyODExYTZcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/react-slideshow-image/dist/styles.css\n"));

/***/ }),

/***/ "(app-client)/./public/images/not found.png":
/*!*************************************!*\
  !*** ./public/images/not found.png ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/not found.dce63206.png\",\"height\":240,\"width\":359,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fnot+found.dce63206.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":5});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vcHVibGljL2ltYWdlcy9ub3QgZm91bmQucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLHNNQUFzTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wdWJsaWMvaW1hZ2VzL25vdCBmb3VuZC5wbmc/ODVjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvbm90IGZvdW5kLmRjZTYzMjA2LnBuZ1wiLFwiaGVpZ2h0XCI6MjQwLFwid2lkdGhcIjozNTksXCJibHVyRGF0YVVSTFwiOlwiL19uZXh0L2ltYWdlP3VybD0lMkZfbmV4dCUyRnN0YXRpYyUyRm1lZGlhJTJGbm90K2ZvdW5kLmRjZTYzMjA2LnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo1fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./public/images/not found.png\n"));

/***/ }),

/***/ "(app-client)/./app/Context/store.tsx":
/*!*******************************!*\
  !*** ./app/Context/store.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalContextProvider: function() { return /* binding */ GlobalContextProvider; },\n/* harmony export */   useGlobalContext: function() { return /* binding */ useGlobalContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_BGMusic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/BGMusic */ \"(app-client)/./app/components/BGMusic.tsx\");\n/* __next_internal_client_entry_do_not_use__ GlobalContextProvider,useGlobalContext auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst GlobalContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    ...{}\n});\nconst GlobalContextProvider = (param)=>{\n    let { children } = param;\n    _s();\n    // Game State\n    const remainingState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(10);\n    const scoreState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(5);\n    const roundState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(3);\n    const tabState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Object Detection\n    const isSubmitingState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const matchedState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1);\n    // User State\n    const username = \"soham\";\n    // const username = window.localStorage.getItem(\"username\") || \"unknown\";\n    const [_BGMusic, _setBGMusic] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const BGMusicState = {\n        state: _BGMusic,\n        toggle: ()=>{\n            _setBGMusic(!_BGMusic);\n        // window.localStorage.setItem(\"bgMusic\", _BGMusic.toString());\n        }\n    };\n    const restartGame = ()=>{\n        remainingState[1](10);\n        // roundState[1](3);\n        isSubmitingState[1](false);\n        matchedState[1](-1);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GlobalContext.Provider, {\n        value: {\n            remainingState,\n            scoreState,\n            roundState,\n            isSubmitingState,\n            matchedState,\n            tabState,\n            restartGame,\n            username: username,\n            BGMusicState\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_BGMusic__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                state: BGMusicState.state\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\Context\\\\store.tsx\",\n                lineNumber: 56,\n                columnNumber: 7\n            }, undefined),\n            children\n        ]\n    }, void 0, true, {\n        fileName: \"G:\\\\object_hunt\\\\app\\\\Context\\\\store.tsx\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, undefined);\n};\n_s(GlobalContextProvider, \"CO7LI/xqYJnLoV/f5JWTgG6AhsI=\");\n_c = GlobalContextProvider;\nconst useGlobalContext = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(GlobalContext);\n};\n_s1(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalContextProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vYXBwL0NvbnRleHQvc3RvcmUudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBRTREO0FBRWhCO0FBRTVDLE1BQU1JLDhCQUFnQkosb0RBQWFBLENBQU07SUFDdkMsR0FBSSxDQUFDLENBQUM7QUFDUjtBQUVPLE1BQU1LLHdCQUF3QjtRQUFDLEVBQUVDLFFBQVEsRUFBTzs7SUFDckQsYUFBYTtJQUNiLE1BQU1DLGlCQUFpQkwsK0NBQVFBLENBQUM7SUFDaEMsTUFBTU0sYUFBYU4sK0NBQVFBLENBQUM7SUFDNUIsTUFBTU8sYUFBYVAsK0NBQVFBLENBQUM7SUFFNUIsTUFBTVEsV0FBV1IsK0NBQVFBLENBQUM7SUFFMUIsbUJBQW1CO0lBQ25CLE1BQU1TLG1CQUFtQlQsK0NBQVFBLENBQUM7SUFDbEMsTUFBTVUsZUFBZVYsK0NBQVFBLENBQUMsQ0FBQztJQUUvQixhQUFhO0lBQ2IsTUFBTVcsV0FBVztJQUNqQix5RUFBeUU7SUFDekUsTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUdiLCtDQUFRQSxDQUFDO0lBQ3pDLE1BQU1jLGVBQWU7UUFDbkJDLE9BQU9IO1FBQ1BJLFFBQVE7WUFDTkgsWUFBWSxDQUFDRDtRQUNiLCtEQUErRDtRQUNqRTtJQUNGO0lBRUEsTUFBTUssY0FBYztRQUNsQlosY0FBYyxDQUFDLEVBQUUsQ0FBQztRQUNsQixvQkFBb0I7UUFDcEJJLGdCQUFnQixDQUFDLEVBQUUsQ0FBQztRQUNwQkMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ25CO0lBRUEscUJBQ0UsOERBQUNSLGNBQWNnQjtRQUNiQyxPQUFPO1lBQ0xkO1lBQ0FDO1lBQ0FDO1lBQ0FFO1lBQ0FDO1lBQ0FGO1lBQ0FTO1lBQ0FOLFVBQVVBO1lBQ1ZHO1FBQ0Y7OzBCQUVBLDhEQUFDYiwyREFBT0E7Z0JBQUNjLE9BQU9ELGFBQWFDOzs7Ozs7WUFDNUJYOzs7Ozs7O0FBR1AsRUFBRTtHQWpEV0Q7S0FBQUE7QUFtRE4sTUFBTWlCLG1CQUFtQjs7SUFBTXJCLE9BQUFBLGlEQUFVQSxDQUFDRztBQUFhLEVBQUU7SUFBbkRrQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvQ29udGV4dC9zdG9yZS50c3g/ZTQ0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IEJHTXVzaWMgZnJvbSBcIi4uL2NvbXBvbmVudHMvQkdNdXNpY1wiO1xuXG5jb25zdCBHbG9iYWxDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxhbnk+KHtcbiAgLi4uKHt9IGFzIGFueSksXG59KTtcblxuZXhwb3J0IGNvbnN0IEdsb2JhbENvbnRleHRQcm92aWRlciA9ICh7IGNoaWxkcmVuIH06IGFueSkgPT4ge1xuICAvLyBHYW1lIFN0YXRlXG4gIGNvbnN0IHJlbWFpbmluZ1N0YXRlID0gdXNlU3RhdGUoMTApO1xuICBjb25zdCBzY29yZVN0YXRlID0gdXNlU3RhdGUoNSk7XG4gIGNvbnN0IHJvdW5kU3RhdGUgPSB1c2VTdGF0ZSgzKTtcblxuICBjb25zdCB0YWJTdGF0ZSA9IHVzZVN0YXRlKDApO1xuXG4gIC8vIE9iamVjdCBEZXRlY3Rpb25cbiAgY29uc3QgaXNTdWJtaXRpbmdTdGF0ZSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgbWF0Y2hlZFN0YXRlID0gdXNlU3RhdGUoLTEpO1xuXG4gIC8vIFVzZXIgU3RhdGVcbiAgY29uc3QgdXNlcm5hbWUgPSBcInNvaGFtXCI7XG4gIC8vIGNvbnN0IHVzZXJuYW1lID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidXNlcm5hbWVcIikgfHwgXCJ1bmtub3duXCI7XG4gIGNvbnN0IFtfQkdNdXNpYywgX3NldEJHTXVzaWNdID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IEJHTXVzaWNTdGF0ZSA9IHtcbiAgICBzdGF0ZTogX0JHTXVzaWMsXG4gICAgdG9nZ2xlOiAoKSA9PiB7XG4gICAgICBfc2V0QkdNdXNpYyghX0JHTXVzaWMpO1xuICAgICAgLy8gd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiYmdNdXNpY1wiLCBfQkdNdXNpYy50b1N0cmluZygpKTtcbiAgICB9LFxuICB9O1xuXG4gIGNvbnN0IHJlc3RhcnRHYW1lID0gKCkgPT4ge1xuICAgIHJlbWFpbmluZ1N0YXRlWzFdKDEwKTtcbiAgICAvLyByb3VuZFN0YXRlWzFdKDMpO1xuICAgIGlzU3VibWl0aW5nU3RhdGVbMV0oZmFsc2UpO1xuICAgIG1hdGNoZWRTdGF0ZVsxXSgtMSk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8R2xvYmFsQ29udGV4dC5Qcm92aWRlclxuICAgICAgdmFsdWU9e3tcbiAgICAgICAgcmVtYWluaW5nU3RhdGUsXG4gICAgICAgIHNjb3JlU3RhdGUsXG4gICAgICAgIHJvdW5kU3RhdGUsXG4gICAgICAgIGlzU3VibWl0aW5nU3RhdGUsXG4gICAgICAgIG1hdGNoZWRTdGF0ZSxcbiAgICAgICAgdGFiU3RhdGUsXG4gICAgICAgIHJlc3RhcnRHYW1lLFxuICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgIEJHTXVzaWNTdGF0ZSxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPEJHTXVzaWMgc3RhdGU9e0JHTXVzaWNTdGF0ZS5zdGF0ZX0gLz5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0dsb2JhbENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgdXNlR2xvYmFsQ29udGV4dCA9ICgpID0+IHVzZUNvbnRleHQoR2xvYmFsQ29udGV4dCk7XG4iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsIkJHTXVzaWMiLCJHbG9iYWxDb250ZXh0IiwiR2xvYmFsQ29udGV4dFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJyZW1haW5pbmdTdGF0ZSIsInNjb3JlU3RhdGUiLCJyb3VuZFN0YXRlIiwidGFiU3RhdGUiLCJpc1N1Ym1pdGluZ1N0YXRlIiwibWF0Y2hlZFN0YXRlIiwidXNlcm5hbWUiLCJfQkdNdXNpYyIsIl9zZXRCR011c2ljIiwiQkdNdXNpY1N0YXRlIiwic3RhdGUiLCJ0b2dnbGUiLCJyZXN0YXJ0R2FtZSIsIlByb3ZpZGVyIiwidmFsdWUiLCJ1c2VHbG9iYWxDb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./app/Context/store.tsx\n"));

/***/ }),

/***/ "(app-client)/./app/components/BGMusic.tsx":
/*!************************************!*\
  !*** ./app/components/BGMusic.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction BGMusic(props) {\n    _s();\n    const canPlay = props.state;\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var _audioRef_current, _audioRef_current1;\n        canPlay ? audioRef === null || audioRef === void 0 ? void 0 : (_audioRef_current = audioRef.current) === null || _audioRef_current === void 0 ? void 0 : _audioRef_current.play() : audioRef === null || audioRef === void 0 ? void 0 : (_audioRef_current1 = audioRef.current) === null || _audioRef_current1 === void 0 ? void 0 : _audioRef_current1.pause();\n    }, [\n        canPlay\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"absolute\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n            ref: audioRef,\n            autoPlay: canPlay,\n            loop: true,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                src: \"/bg.mpga\",\n                type: \"audio/mpeg\"\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\BGMusic.tsx\",\n                lineNumber: 24,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\BGMusic.tsx\",\n            lineNumber: 23,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\BGMusic.tsx\",\n        lineNumber: 22,\n        columnNumber: 5\n    }, this);\n}\n_s(BGMusic, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n_c = BGMusic;\n/* harmony default export */ __webpack_exports__[\"default\"] = (BGMusic);\nvar _c;\n$RefreshReg$(_c, \"BGMusic\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vYXBwL2NvbXBvbmVudHMvQkdNdXNpYy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBTWU7QUFNZixTQUFTRyxRQUFRQyxLQUFZOztJQUMzQixNQUFNQyxVQUFVRCxNQUFNRTtJQUN0QixNQUFNQyxXQUFXTCw2Q0FBTUEsQ0FBbUI7SUFFMUNELGdEQUFTQSxDQUFDO1lBQ0VNLG1CQUE0QkE7UUFBdENGLFVBQVVFLHFCQUFBQSxzQkFBQUEsS0FBQUEsSUFBQUEsQ0FBQUEsb0JBQUFBLFNBQVVDLHFCQUFWRCwrQkFBQUEsS0FBQUEsSUFBQUEsa0JBQW1CRSxTQUFTRixxQkFBQUEsc0JBQUFBLEtBQUFBLElBQUFBLENBQUFBLHFCQUFBQSxTQUFVQyxxQkFBVkQsZ0NBQUFBLEtBQUFBLElBQUFBLG1CQUFtQkc7SUFDM0QsR0FBRztRQUFDTDtLQUFRO0lBRVoscUJBQ0UsOERBQUNNO1FBQUlDLFdBQVU7a0JBQ2IsNEVBQUNDO1lBQU1DLEtBQUtQO1lBQVVRLFVBQVVWO1lBQVNXLElBQUk7c0JBQzNDLDRFQUFDQztnQkFBT0MsS0FBSztnQkFBWUMsTUFBSzs7Ozs7Ozs7Ozs7Ozs7OztBQUl0QztHQWZTaEI7S0FBQUE7QUFpQlQsK0RBQWVBLE9BQU9BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2NvbXBvbmVudHMvQkdNdXNpYy50c3g/ZTFiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtcbiAgRGlzcGF0Y2gsXG4gIFNldFN0YXRlQWN0aW9uLFxuICB1c2VFZmZlY3QsXG4gIHVzZVJlZixcbiAgdXNlU3RhdGUsXG59IGZyb20gXCJyZWFjdFwiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzdGF0ZTogYm9vbGVhbjtcbn1cblxuZnVuY3Rpb24gQkdNdXNpYyhwcm9wczogUHJvcHMpIHtcbiAgY29uc3QgY2FuUGxheSA9IHByb3BzLnN0YXRlO1xuICBjb25zdCBhdWRpb1JlZiA9IHVzZVJlZjxIVE1MQXVkaW9FbGVtZW50PihudWxsKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNhblBsYXkgPyBhdWRpb1JlZj8uY3VycmVudD8ucGxheSgpIDogYXVkaW9SZWY/LmN1cnJlbnQ/LnBhdXNlKCk7XG4gIH0sIFtjYW5QbGF5XSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImFic29sdXRlXCI+XG4gICAgICA8YXVkaW8gcmVmPXthdWRpb1JlZn0gYXV0b1BsYXk9e2NhblBsYXl9IGxvb3A+XG4gICAgICAgIDxzb3VyY2Ugc3JjPXtcIi9iZy5tcGdhXCJ9IHR5cGU9XCJhdWRpby9tcGVnXCIgLz5cbiAgICAgIDwvYXVkaW8+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJHTXVzaWM7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJCR011c2ljIiwicHJvcHMiLCJjYW5QbGF5Iiwic3RhdGUiLCJhdWRpb1JlZiIsImN1cnJlbnQiLCJwbGF5IiwicGF1c2UiLCJkaXYiLCJjbGFzc05hbWUiLCJhdWRpbyIsInJlZiIsImF1dG9QbGF5IiwibG9vcCIsInNvdXJjZSIsInNyYyIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./app/components/BGMusic.tsx\n"));

/***/ }),

/***/ "(app-client)/./app/components/ImgSlider.tsx":
/*!**************************************!*\
  !*** ./app/components/ImgSlider.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_font_google_target_css_path_app_components_ImgSlider_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app\\\\components\\\\ImgSlider.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":[\"400\",\"500\",\"600\",\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"} */ \"(app-client)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\components\\\\\\\\ImgSlider.tsx\\\",\\\"import\\\":\\\"Poppins\\\",\\\"arguments\\\":[{\\\"weight\\\":[\\\"400\\\",\\\"500\\\",\\\"600\\\",\\\"700\\\"],\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"poppins\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_components_ImgSlider_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_components_ImgSlider_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_slideshow_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-slideshow-image */ \"(app-client)/./node_modules/react-slideshow-image/dist/react-slideshow-image.esm.js\");\n/* harmony import */ var react_slideshow_image_dist_styles_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-slideshow-image/dist/styles.css */ \"(app-client)/./node_modules/react-slideshow-image/dist/styles.css\");\n/* harmony import */ var _public_images_not_found_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../public/images/not found.png */ \"(app-client)/./public/images/not found.png\");\n\n\n\n\n\n\nconst sliderContainerStyle = {\n    height: \"100%\",\n    overflow: \"hidden\"\n};\nconst spanStyle = {\n    padding: \"24px\",\n    background: \"#fff9\",\n    filter: \"\",\n    // borderRadius: \"1rem\",\n    fontSize: \"2rem\",\n    textShadow: \"2px 2px 2px #0005\",\n    color: \"#000000\"\n};\nconst divStyle = {\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    height: \"100%\",\n    width: \"100%\"\n};\nfunction ImgSlider(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: sliderContainerStyle,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_slideshow_image__WEBPACK_IMPORTED_MODULE_2__.Slide, {\n                duration: 3000,\n                autoplay: true,\n                infinite: false,\n                arrows: false,\n                transitionDuration: 200,\n                easing: \"ease\",\n                children: props.data.map((entry, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"py-60\",\n                            style: {\n                                ...divStyle,\n                                backgroundImage: \"url(\".concat(entry.img ? entry.img : '\"'.concat(_public_images_not_found_png__WEBPACK_IMPORTED_MODULE_4__[\"default\"].src, '\"'), \")\")\n                            },\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"absolute bottom-0 p-4 backdrop-blur-md w-full text-2xl font-semibold text-primary \".concat((next_font_google_target_css_path_app_components_ImgSlider_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_5___default().className)),\n                                children: [\n                                    entry.name,\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\ImgSlider.tsx\",\n                                        lineNumber: 85,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-gray-800 p-1 rounded bg-slate-400 text-sm\",\n                                        children: entry.matched === true ? \"\\uD83C\\uDF89 They found it\" : \"Lol they even don't have a \".concat(props.objname, \".\")\n                                    }, void 0, false, {\n                                        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\ImgSlider.tsx\",\n                                        lineNumber: 86,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\ImgSlider.tsx\",\n                                lineNumber: 81,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\ImgSlider.tsx\",\n                            lineNumber: 72,\n                            columnNumber: 15\n                        }, this)\n                    }, index, false, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\ImgSlider.tsx\",\n                        lineNumber: 71,\n                        columnNumber: 13\n                    }, this))\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\ImgSlider.tsx\",\n                lineNumber: 62,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\ImgSlider.tsx\",\n            lineNumber: 61,\n            columnNumber: 7\n        }, this)\n    }, void 0, false);\n}\n_c = ImgSlider;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ImgSlider);\nvar _c;\n$RefreshReg$(_c, \"ImgSlider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vYXBwL2NvbXBvbmVudHMvSW1nU2xpZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBU01BO0FBUm9CO0FBRW9CO0FBRUM7QUFFVztBQU8xRCxNQUFNSSx1QkFBdUI7SUFDM0JDLFFBQVE7SUFDUkMsVUFBVTtBQUNaO0FBRUEsTUFBTUMsWUFBWTtJQUNoQkMsU0FBUztJQUNUQyxZQUFZO0lBQ1pDLFFBQVE7SUFDUix3QkFBd0I7SUFDeEJDLFVBQVU7SUFDVkMsWUFBWTtJQUNaQyxPQUFPO0FBQ1Q7QUFFQSxNQUFNQyxXQUFXO0lBQ2ZDLGdCQUFnQjtJQUNoQkMsb0JBQW9CO0lBQ3BCWCxRQUFRO0lBQ1JZLE9BQU87QUFFVDtBQXNCQSxTQUFTQyxVQUFVQyxLQUFZO0lBQzdCLHFCQUNFO2tCQUNFLDRFQUFDQztZQUFJQyxPQUFPakI7c0JBQ1YsNEVBQUNGLHdEQUFLQTtnQkFDSm9CLFVBQVU7Z0JBQ1ZDLFVBQVU7Z0JBQ1ZDLFVBQVU7Z0JBQ1ZDLFFBQVE7Z0JBQ1JDLG9CQUFvQjtnQkFDcEJDLFFBQU87MEJBRU5SLE1BQU1TLEtBQUtDLElBQUksQ0FBQ0MsT0FBT0Msc0JBQ3RCLDhEQUFDWDtrQ0FDQyw0RUFBQ0E7NEJBQ0NZLFdBQVU7NEJBQ1ZYLE9BQU87Z0NBQ0wsR0FBR1AsUUFBUTtnQ0FDWG1CLGlCQUFpQixPQUVoQixPQURDSCxNQUFNSSxNQUFNSixNQUFNSSxNQUFNLElBQWtCLE9BQWQvQixvRUFBU0EsQ0FBQ2dDLEtBQUksTUFDM0M7NEJBQ0g7c0NBRUEsNEVBQUNDO2dDQUNDSixXQUFXLHFGQUF1RyxPQUFsQmhDLG9NQUFpQmdDOztvQ0FFaEhGLE1BQU1PO2tEQUNQLDhEQUFDQzs7Ozs7a0RBQ0QsOERBQUNDO3dDQUFFUCxXQUFVO2tEQUNWRixNQUFNVSxZQUFZLE9BQ2QsK0JBQ0QsOEJBQTRDLE9BQWRyQixNQUFNc0IsU0FBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7dUJBbEI5Q1Y7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpRHRCO0tBOURTYjtBQWdFVCwrREFBZUEsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29tcG9uZW50cy9JbWdTbGlkZXIudHN4PzZmYWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9wcGlucyB9IGZyb20gXCJuZXh0L2ZvbnQvZ29vZ2xlXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7IFNsaWRlIH0gZnJvbSBcInJlYWN0LXNsaWRlc2hvdy1pbWFnZVwiO1xuXG5pbXBvcnQgXCJyZWFjdC1zbGlkZXNob3ctaW1hZ2UvZGlzdC9zdHlsZXMuY3NzXCI7XG5cbmltcG9ydCBub3RfZm91bmQgZnJvbSBcIi4uLy4uL3B1YmxpYy9pbWFnZXMvbm90IGZvdW5kLnBuZ1wiO1xuXG5jb25zdCBwb3BwaW5zID0gUG9wcGlucyh7XG4gIHdlaWdodDogW1wiNDAwXCIsIFwiNTAwXCIsIFwiNjAwXCIsIFwiNzAwXCJdLFxuICBzdWJzZXRzOiBbXCJsYXRpblwiXSxcbn0pO1xuXG5jb25zdCBzbGlkZXJDb250YWluZXJTdHlsZSA9IHtcbiAgaGVpZ2h0OiBcIjEwMCVcIixcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59O1xuXG5jb25zdCBzcGFuU3R5bGUgPSB7XG4gIHBhZGRpbmc6IFwiMjRweFwiLFxuICBiYWNrZ3JvdW5kOiBcIiNmZmY5XCIsXG4gIGZpbHRlcjogXCJcIixcbiAgLy8gYm9yZGVyUmFkaXVzOiBcIjFyZW1cIixcbiAgZm9udFNpemU6IFwiMnJlbVwiLFxuICB0ZXh0U2hhZG93OiBcIjJweCAycHggMnB4ICMwMDA1XCIsXG4gIGNvbG9yOiBcIiMwMDAwMDBcIixcbn07XG5cbmNvbnN0IGRpdlN0eWxlID0ge1xuICBiYWNrZ3JvdW5kU2l6ZTogXCJjb3ZlclwiLFxuICBiYWNrZ3JvdW5kUG9zaXRpb246IFwiY2VudGVyXCIsXG4gIGhlaWdodDogXCIxMDAlXCIsXG4gIHdpZHRoOiBcIjEwMCVcIixcbiAgLy8gYm9yZGVyUmFkaXVzOiBcIjFyZW1cIixcbn07XG5cbi8vIGNvbnN0IHNsaWRlSW1hZ2VzID0gW1xuLy8gICB7XG4vLyAgICAgdXJsOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTA5NzIxNDM0MjcyLWI3OTE0N2UwZTcwOD9peGxpYj1yYi0xLjIuMSZpeGlkPWV5SmhjSEJmYVdRaU9qRXlNRGQ5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MTUwMCZxPTgwXCIsXG4vLyAgICAgY2FwdGlvbjogXCJQbGF5ZXIgMVwiLFxuLy8gICB9LFxuLy8gICB7XG4vLyAgICAgdXJsOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTA2NzEwNTA3NTY1LTIwM2I5ZjI0NjY5Yj9peGxpYj1yYi0xLjIuMSZpeGlkPWV5SmhjSEJmYVdRaU9qRXlNRGQ5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MTUzNiZxPTgwXCIsXG4vLyAgICAgY2FwdGlvbjogXCJQbGF5ZXIgMlwiLFxuLy8gICB9LFxuLy8gICB7XG4vLyAgICAgdXJsOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTM2OTg3MzMzNzA2LWZjOWFkZmIxMGQ5MT9peGxpYj1yYi0xLjIuMSZpeGlkPWV5SmhjSEJmYVdRaU9qRXlNRGQ5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MTUwMCZxPTgwXCIsXG4vLyAgICAgY2FwdGlvbjogXCJQbGF5ZXIgM1wiLFxuLy8gICB9LFxuLy8gXTtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgZGF0YTogQXJyYXk8eyBpbWc6IHN0cmluZzsgbmFtZTogc3RyaW5nOyBtYXRjaGVkOiBib29sZWFuIHwgdW5kZWZpbmVkIH0+O1xuICBvYmpuYW1lOiBzdHJpbmc7XG59XG5cbmZ1bmN0aW9uIEltZ1NsaWRlcihwcm9wczogUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdiBzdHlsZT17c2xpZGVyQ29udGFpbmVyU3R5bGV9PlxuICAgICAgICA8U2xpZGVcbiAgICAgICAgICBkdXJhdGlvbj17MzAwMH1cbiAgICAgICAgICBhdXRvcGxheT17dHJ1ZX1cbiAgICAgICAgICBpbmZpbml0ZT17ZmFsc2V9XG4gICAgICAgICAgYXJyb3dzPXtmYWxzZX1cbiAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb249ezIwMH1cbiAgICAgICAgICBlYXNpbmc9XCJlYXNlXCJcbiAgICAgICAgPlxuICAgICAgICAgIHtwcm9wcy5kYXRhLm1hcCgoZW50cnksIGluZGV4KSA9PiAoXG4gICAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicHktNjBcIlxuICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAuLi5kaXZTdHlsZSxcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogYHVybCgke1xuICAgICAgICAgICAgICAgICAgICBlbnRyeS5pbWcgPyBlbnRyeS5pbWcgOiBgXCIke25vdF9mb3VuZC5zcmN9XCJgXG4gICAgICAgICAgICAgICAgICB9KWAsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BhYnNvbHV0ZSBib3R0b20tMCBwLTQgYmFja2Ryb3AtYmx1ci1tZCB3LWZ1bGwgdGV4dC0yeGwgZm9udC1zZW1pYm9sZCB0ZXh0LXByaW1hcnkgJHtwb3BwaW5zLmNsYXNzTmFtZX1gfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHtlbnRyeS5uYW1lfVxuICAgICAgICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktODAwIHAtMSByb3VuZGVkIGJnLXNsYXRlLTQwMCB0ZXh0LXNtXCI+XG4gICAgICAgICAgICAgICAgICAgIHtlbnRyeS5tYXRjaGVkID09PSB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgPyBg8J+OiSBUaGV5IGZvdW5kIGl0YFxuICAgICAgICAgICAgICAgICAgICAgIDogYExvbCB0aGV5IGV2ZW4gZG9uJ3QgaGF2ZSBhICR7cHJvcHMub2JqbmFtZX0uYH1cbiAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICB7Lyoge2VudHJ5Lm1hdGNoZWQgPT09IHRydWUgPyAoXG4gICAgICAgICAgICAgICAgPGxhYmVsIGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAge1wiIFwifVxuICAgICAgICAgICAgICAgICAgVGhleSBmb3VuZHtcIiBcIn1cbiAgICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YHRleHQtcHJpbWFyeSBjYXBpdGFsaXplIG10LTMgJHtwb3BwaW5zLmNsYXNzTmFtZX1gfVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7cHJvcHMub2JqbmFtZSB8fCBcIk9iamVjdFwifVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgPGxhYmVsIGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAge1wiIFwifVxuICAgICAgICAgICAgICAgICAgTE9MLCBUaGV5IGNhbid0IGV2ZW4gZmluZHtcIiBcIn1cbiAgICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YHRleHQtcHJpbWFyeSBjYXBpdGFsaXplIG10LTMgJHtwb3BwaW5zLmNsYXNzTmFtZX1gfVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7cHJvcHMub2JqbmFtZSB8fCBcIk9iamVjdFwifSBhcm91bmQgdGhlbVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICl9ICovfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvU2xpZGU+XG4gICAgICA8L2Rpdj5cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgSW1nU2xpZGVyO1xuIl0sIm5hbWVzIjpbInBvcHBpbnMiLCJSZWFjdCIsIlNsaWRlIiwibm90X2ZvdW5kIiwic2xpZGVyQ29udGFpbmVyU3R5bGUiLCJoZWlnaHQiLCJvdmVyZmxvdyIsInNwYW5TdHlsZSIsInBhZGRpbmciLCJiYWNrZ3JvdW5kIiwiZmlsdGVyIiwiZm9udFNpemUiLCJ0ZXh0U2hhZG93IiwiY29sb3IiLCJkaXZTdHlsZSIsImJhY2tncm91bmRTaXplIiwiYmFja2dyb3VuZFBvc2l0aW9uIiwid2lkdGgiLCJJbWdTbGlkZXIiLCJwcm9wcyIsImRpdiIsInN0eWxlIiwiZHVyYXRpb24iLCJhdXRvcGxheSIsImluZmluaXRlIiwiYXJyb3dzIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwiZWFzaW5nIiwiZGF0YSIsIm1hcCIsImVudHJ5IiwiaW5kZXgiLCJjbGFzc05hbWUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJpbWciLCJzcmMiLCJzcGFuIiwibmFtZSIsImJyIiwicCIsIm1hdGNoZWQiLCJvYmpuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./app/components/ImgSlider.tsx\n"));

/***/ }),

/***/ "(app-client)/./app/components/Modal.tsx":
/*!**********************************!*\
  !*** ./app/components/Modal.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_font_google_target_css_path_app_components_Modal_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font1___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app\\\\components\\\\Modal.tsx\",\"import\":\"Bungee\",\"arguments\":[{\"weight\":\"400\",\"subsets\":[\"latin\"]}],\"variableName\":\"font1\"} */ \"(app-client)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\components\\\\\\\\Modal.tsx\\\",\\\"import\\\":\\\"Bungee\\\",\\\"arguments\\\":[{\\\"weight\\\":\\\"400\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"font1\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_components_Modal_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font1___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_components_Modal_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font1___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\n\n\nfunction Modal(props) {\n    _s();\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(props.defaultOpen || false);\n    // const router = useRouter();\n    // const animation = useSpring({\n    //   config: {\n    //     duration: 250\n    //   },\n    //   opacity: isOpen ? 1 : 0,\n    //   transform: isOpen ? `translateY(0)` : `translateY(-100%)`\n    // });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            props.defaultOpen || /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                onClick: ()=>setIsOpen(!isOpen),\n                className: \"btn \".concat(props.buttonClassName, \" \").concat((next_font_google_target_css_path_app_components_Modal_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font1___WEBPACK_IMPORTED_MODULE_2___default().className)),\n                children: props.btnname\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                lineNumber: 47,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"checkbox\",\n                id: props.id,\n                checked: isOpen,\n                defaultChecked: props.defaultOpen,\n                onChange: (e)=>{},\n                className: \"modal-toggle\"\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                lineNumber: 55,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"modal \".concat(props.modalClassName),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"modal-box bg-base border-2 nobar broder-white \".concat((next_font_google_target_css_path_app_components_Modal_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font1___WEBPACK_IMPORTED_MODULE_2___default().className)),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"font-bold text-2xl text-primary\",\n                            children: props.title\n                        }, void 0, false, {\n                            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                            lineNumber: 69,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex flex-col mt-3\",\n                            children: props.children\n                        }, void 0, false, {\n                            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                            lineNumber: 70,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"modal-action flex justify-between\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: props.actions\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                                    lineNumber: 72,\n                                    columnNumber: 13\n                                }, this),\n                                props.customClose ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    onClick: ()=>{\n                                        window.location.href = props.customClose && (props === null || props === void 0 ? void 0 : props.customClose[1]) || \"/\";\n                                    // router.push(\n                                    //   (props.customClose && props.customClose[1]) || \"/\"\n                                    // );\n                                    // router.refresh();\n                                    },\n                                    className: \"btn btn-error \".concat((next_font_google_target_css_path_app_components_Modal_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font1___WEBPACK_IMPORTED_MODULE_2___default().className)),\n                                    children: props.customClose[0]\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                                    lineNumber: 75,\n                                    columnNumber: 15\n                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        onClick: ()=>setIsOpen(false),\n                                        className: \"btn btn-error \".concat((next_font_google_target_css_path_app_components_Modal_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font1___WEBPACK_IMPORTED_MODULE_2___default().className)),\n                                        children: \"Close\"\n                                    }, void 0, false, {\n                                        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                                        lineNumber: 90,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                            lineNumber: 71,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                    lineNumber: 66,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Modal.tsx\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(Modal, \"HuT1Om9eFxNU++idrWA42Fm2DZk=\");\n_c = Modal;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Modal);\nvar _c;\n$RefreshReg$(_c, \"Modal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vYXBwL2NvbXBvbmVudHMvTW9kYWwudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBS01BO0FBS0FDO0FBVmtDO0FBK0J4QyxTQUFTRyxNQUFNQyxLQUFZOztJQUN6QixNQUFNLENBQUNDLFFBQVFDLFVBQVUsR0FBR0osK0NBQVFBLENBQUNFLE1BQU1HLGVBQWU7SUFDMUQsOEJBQThCO0lBRTlCLGdDQUFnQztJQUNoQyxjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLE9BQU87SUFDUCw2QkFBNkI7SUFDN0IsOERBQThEO0lBQzlELE1BQU07SUFFTixxQkFDRTs7WUFDR0gsTUFBTUcsNkJBQ0wsOERBQUNDO2dCQUNDQyxTQUFTLElBQU1ILFVBQVUsQ0FBQ0Q7Z0JBQzFCSyxXQUFXLE9BQWdDWCxPQUF6QkssTUFBTU8saUJBQWdCLEtBQW1CLE9BQWhCWixpTEFBZVc7MEJBRXpETixNQUFNUTs7Ozs7OzBCQUlYLDhEQUFDQztnQkFDQ0MsTUFBSztnQkFDTEMsSUFBSVgsTUFBTVc7Z0JBQ1ZDLFNBQVNYO2dCQUNUWSxnQkFBZ0JiLE1BQU1HO2dCQUN0QlcsVUFBVSxDQUFDQyxLQUFPO2dCQUNsQlQsV0FBVTs7Ozs7OzBCQUdaLDhEQUFDVTtnQkFBSVYsV0FBVyxTQUE4QixPQUFyQk4sTUFBTWlCOzBCQUU3Qiw0RUFBQ0Q7b0JBQ0NWLFdBQVcsaURBQWlFLE9BQWhCWCxpTEFBZVc7O3NDQUUzRSw4REFBQ1k7NEJBQUdaLFdBQVU7c0NBQW1DTixNQUFNbUI7Ozs7OztzQ0FDdkQsOERBQUNIOzRCQUFJVixXQUFVO3NDQUFzQk4sTUFBTW9COzs7Ozs7c0NBQzNDLDhEQUFDSjs0QkFBSVYsV0FBVTs7OENBQ2IsOERBQUNVOzhDQUFLaEIsTUFBTXFCOzs7Ozs7Z0NBRVhyQixNQUFNc0IsNEJBQ0wsOERBQUNsQjtvQ0FDQ0MsU0FBUzt3Q0FDUGtCLE9BQU9DLFNBQVNDLE9BQ2QsTUFBT0gsZ0JBQWV0QixrQkFBQUEsbUJBQUFBLEtBQUFBLElBQUFBLE1BQU9zQixXQUFXLENBQUMsRUFBRSxLQUFLO29DQUNsRCxlQUFlO29DQUNmLHVEQUF1RDtvQ0FDdkQsS0FBSztvQ0FDTCxvQkFBb0I7b0NBQ3RCO29DQUNBaEIsV0FBVyxpQkFBaUMsT0FBaEJYLGlMQUFlVzs4Q0FFMUNOLE1BQU1zQixXQUFXLENBQUMsRUFBRTs7Ozs7eURBR3ZCOzhDQUNFLDRFQUFDbEI7d0NBQ0NDLFNBQVMsSUFBTUgsVUFBVTt3Q0FDekJJLFdBQVcsaUJBQWlDLE9BQWhCWCxpTEFBZVc7a0RBQzVDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVdqQjtHQXhFU1A7S0FBQUE7QUEwRVQsK0RBQWVBLEtBQUtBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2NvbXBvbmVudHMvTW9kYWwudHN4PzI0ZjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG4vLyBpbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCI7XG5cbmltcG9ydCB7IEJ1bmdlZSwgUG9wcGlucyB9IGZyb20gXCJuZXh0L2ZvbnQvZ29vZ2xlXCI7XG5cbmNvbnN0IGZvbnQxID0gQnVuZ2VlKHtcbiAgd2VpZ2h0OiBcIjQwMFwiLFxuICBzdWJzZXRzOiBbXCJsYXRpblwiXSxcbn0pO1xuXG5jb25zdCBmb250MiA9IFBvcHBpbnMoe1xuICB3ZWlnaHQ6IFwiNDAwXCIsXG4gIHN1YnNldHM6IFtcImxhdGluXCJdLFxufSk7XG5cbi8vIGltcG9ydCB7IHVzZVNwcmluZywgYW5pbWF0ZWQgfSBmcm9tICdAcmVhY3Qtc3ByaW5nL3dlYidcbi8vIGltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBpZDogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICBidG5uYW1lOiBhbnk7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIG1vZGFsQ2xhc3NOYW1lPzogc3RyaW5nO1xuICBidXR0b25DbGFzc05hbWU/OiBzdHJpbmc7XG4gIGFjdGlvbnM/OiBKU1guRWxlbWVudDtcbiAgZW5hYmxlPzogYm9vbGVhbjtcbiAgZGVmYXVsdE9wZW4/OiBib29sZWFuO1xuICBjdXN0b21DbG9zZT86IHN0cmluZ1tdO1xufVxuXG5mdW5jdGlvbiBNb2RhbChwcm9wczogUHJvcHMpIHtcbiAgY29uc3QgW2lzT3Blbiwgc2V0SXNPcGVuXSA9IHVzZVN0YXRlKHByb3BzLmRlZmF1bHRPcGVuIHx8IGZhbHNlKTtcbiAgLy8gY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG5cbiAgLy8gY29uc3QgYW5pbWF0aW9uID0gdXNlU3ByaW5nKHtcbiAgLy8gICBjb25maWc6IHtcbiAgLy8gICAgIGR1cmF0aW9uOiAyNTBcbiAgLy8gICB9LFxuICAvLyAgIG9wYWNpdHk6IGlzT3BlbiA/IDEgOiAwLFxuICAvLyAgIHRyYW5zZm9ybTogaXNPcGVuID8gYHRyYW5zbGF0ZVkoMClgIDogYHRyYW5zbGF0ZVkoLTEwMCUpYFxuICAvLyB9KTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7cHJvcHMuZGVmYXVsdE9wZW4gfHwgKFxuICAgICAgICA8bGFiZWxcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRJc09wZW4oIWlzT3Blbil9XG4gICAgICAgICAgY2xhc3NOYW1lPXtgYnRuICR7cHJvcHMuYnV0dG9uQ2xhc3NOYW1lfSAke2ZvbnQxLmNsYXNzTmFtZX1gfVxuICAgICAgICA+XG4gICAgICAgICAge3Byb3BzLmJ0bm5hbWV9XG4gICAgICAgIDwvbGFiZWw+XG4gICAgICApfVxuXG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgaWQ9e3Byb3BzLmlkfVxuICAgICAgICBjaGVja2VkPXtpc09wZW59XG4gICAgICAgIGRlZmF1bHRDaGVja2VkPXtwcm9wcy5kZWZhdWx0T3Blbn1cbiAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7fX1cbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtdG9nZ2xlXCJcbiAgICAgIC8+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtgbW9kYWwgJHtwcm9wcy5tb2RhbENsYXNzTmFtZX1gfT5cbiAgICAgICAgey8qIDxhbmltYXRlZC5kaXYgc3R5bGU9e2FuaW1hdGlvbn0+ICovfVxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPXtgbW9kYWwtYm94IGJnLWJhc2UgYm9yZGVyLTIgbm9iYXIgYnJvZGVyLXdoaXRlICR7Zm9udDEuY2xhc3NOYW1lfWB9XG4gICAgICAgID5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwiZm9udC1ib2xkIHRleHQtMnhsIHRleHQtcHJpbWFyeVwiPntwcm9wcy50aXRsZX08L2gzPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBtdC0zXCI+e3Byb3BzLmNoaWxkcmVufTwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtYWN0aW9uIGZsZXgganVzdGlmeS1iZXR3ZWVuXCI+XG4gICAgICAgICAgICA8ZGl2Pntwcm9wcy5hY3Rpb25zfTwvZGl2PlxuXG4gICAgICAgICAgICB7cHJvcHMuY3VzdG9tQ2xvc2UgPyAoXG4gICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID1cbiAgICAgICAgICAgICAgICAgICAgKHByb3BzLmN1c3RvbUNsb3NlICYmIHByb3BzPy5jdXN0b21DbG9zZVsxXSkgfHwgXCIvXCI7XG4gICAgICAgICAgICAgICAgICAvLyByb3V0ZXIucHVzaChcbiAgICAgICAgICAgICAgICAgIC8vICAgKHByb3BzLmN1c3RvbUNsb3NlICYmIHByb3BzLmN1c3RvbUNsb3NlWzFdKSB8fCBcIi9cIlxuICAgICAgICAgICAgICAgICAgLy8gKTtcbiAgICAgICAgICAgICAgICAgIC8vIHJvdXRlci5yZWZyZXNoKCk7XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BidG4gYnRuLWVycm9yICR7Zm9udDEuY2xhc3NOYW1lfWB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7cHJvcHMuY3VzdG9tQ2xvc2VbMF19XG4gICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0SXNPcGVuKGZhbHNlKX1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGJ0biBidG4tZXJyb3IgJHtmb250MS5jbGFzc05hbWV9YH1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICBDbG9zZVxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHsvKiA8L2FuaW1hdGVkLmRpdj4gKi99XG4gICAgICA8L2Rpdj5cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4iXSwibmFtZXMiOlsiZm9udDEiLCJmb250MiIsIlJlYWN0IiwidXNlU3RhdGUiLCJNb2RhbCIsInByb3BzIiwiaXNPcGVuIiwic2V0SXNPcGVuIiwiZGVmYXVsdE9wZW4iLCJsYWJlbCIsIm9uQ2xpY2siLCJjbGFzc05hbWUiLCJidXR0b25DbGFzc05hbWUiLCJidG5uYW1lIiwiaW5wdXQiLCJ0eXBlIiwiaWQiLCJjaGVja2VkIiwiZGVmYXVsdENoZWNrZWQiLCJvbkNoYW5nZSIsImUiLCJkaXYiLCJtb2RhbENsYXNzTmFtZSIsImgzIiwidGl0bGUiLCJjaGlsZHJlbiIsImFjdGlvbnMiLCJjdXN0b21DbG9zZSIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./app/components/Modal.tsx\n"));

/***/ }),

/***/ "(app-client)/./app/components/Room/Capture.tsx":
/*!*****************************************!*\
  !*** ./app/components/Room/Capture.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_font_google_target_css_path_app_components_Room_Capture_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app\\\\components\\\\Room\\\\Capture.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":\"500\",\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"} */ \"(app-client)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\components\\\\\\\\Room\\\\\\\\Capture.tsx\\\",\\\"import\\\":\\\"Poppins\\\",\\\"arguments\\\":[{\\\"weight\\\":\\\"500\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"poppins\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_components_Room_Capture_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_components_Room_Capture_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_webcam__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-webcam */ \"(app-client)/./node_modules/react-webcam/dist/react-webcam.js\");\n/* harmony import */ var react_webcam__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_webcam__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Context_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Context/store */ \"(app-client)/./app/Context/store.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nconst videoConstraints = {\n    width: 720,\n    height: 720,\n    facingMode: \"user\"\n};\nconst videoConstraints2 = {\n    width: 720,\n    height: 720,\n    facingMode: \"environment\"\n};\nconst Capture = (props)=>{\n    _s();\n    const { matchedState, isSubmitingState } = (0,_Context_store__WEBPACK_IMPORTED_MODULE_3__.useGlobalContext)();\n    const [camearaState, setCameraState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [imgIsCaptured, setImgIsCaptured] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // const [isSubmiting, setIsSubmiting] = props.CaptureState;\n    // const [matched, setMatched] = props.MatchedState;\n    const webcamRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const captureScreenRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const captureImage = ()=>{\n        var // stop video\n        _webcamRef_current, _webcamRef_current_video;\n        (_webcamRef_current = webcamRef.current) === null || _webcamRef_current === void 0 ? void 0 : (_webcamRef_current_video = _webcamRef_current.video) === null || _webcamRef_current_video === void 0 ? void 0 : _webcamRef_current_video.pause();\n        // hide the capture button and show the send button\n        setImgIsCaptured(true);\n    };\n    const submitImage = ()=>{\n        var _webcamRef_current_getScreenshot, _webcamRef_current;\n        isSubmitingState[1](true);\n        const imageData = (_webcamRef_current_getScreenshot = (_webcamRef_current = webcamRef.current) === null || _webcamRef_current === void 0 ? void 0 : _webcamRef_current.getScreenshot()) === null || _webcamRef_current_getScreenshot === void 0 ? void 0 : _webcamRef_current_getScreenshot.replace(\"data:image/jpeg;base64,\", \"\");\n        props.submitImage(imageData);\n        // call isSubmitingState[1](true) after 3 seconds\n        setTimeout(()=>{\n            isSubmitingState[1](true);\n        }, 3000);\n    // retakeImage();\n    // props?.socket?.emit(\"image\", { imgData: imageData });\n    // send form data to axios\n    // const formData = new FormData();\n    // formData.append(\"imgdata\", imageData!);\n    // axios\n    //   .post(\"http://127.0.0.1:8000/upload/\", formData)\n    //   .then(function (response) {\n    //     if (response.data.matched) {\n    //       isSubmitingState[1](false);\n    //       setImgIsCaptured(false);\n    //       webcamRef.current?.video?.play();\n    //       matchedState[1](response.data.matched);\n    //       console.log(response.data.matched);\n    //     }\n    //   })\n    //   .catch(function (error) {\n    //     console.log(error);\n    //   });\n    };\n    const retakeImage = ()=>{\n        var _webcamRef_current, _webcamRef_current_video;\n        (_webcamRef_current = webcamRef.current) === null || _webcamRef_current === void 0 ? void 0 : (_webcamRef_current_video = _webcamRef_current.video) === null || _webcamRef_current_video === void 0 ? void 0 : _webcamRef_current_video.play();\n        setImgIsCaptured(false);\n        isSubmitingState[1](false);\n    };\n    // useState(() => {\n    //   retakeImage();\n    // });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (props.canRetake) {\n            // console.log(\"retake\");\n            retakeImage();\n        }\n    // else {\n    //   console.log(\"no retake\");\n    // }\n    }, [\n        props.canRetake\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: matchedState[0] == -1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            id: \"capture\",\n            className: \"flex flex-col justify-end m-1 mt-2 p-2 bg-stone-800 aspect-square rounded-lg\",\n            ref: captureScreenRef,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_webcam__WEBPACK_IMPORTED_MODULE_2___default()), {\n                className: \"rounded-md shadow-md bg-slate-800 aspect-square\",\n                alt: \"Loading...\",\n                ref: webcamRef,\n                audio: false,\n                height: 720,\n                screenshotFormat: \"image/jpeg\",\n                width: 720,\n                videoConstraints: camearaState ? videoConstraints : videoConstraints2,\n                children: (param)=>{\n                    let { getScreenshot } = param;\n                    if (imgIsCaptured) {\n                        if (isSubmitingState[0]) {\n                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex flex-col bg-slate-700 mt-2 rounded-md p-3 items-center gap-2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"progress\", {\n                                    className: \"progress progress-primary w-full p-0 m-0\"\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n                                    lineNumber: 140,\n                                    columnNumber: 23\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n                                lineNumber: 136,\n                                columnNumber: 21\n                            }, undefined);\n                        }\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex gap-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"btn btn-sm flex-1 btn-secondary mt-2 \".concat((next_font_google_target_css_path_app_components_Room_Capture_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_4___default().className)),\n                                    onClick: submitImage,\n                                    children: \"Submit\"\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n                                    lineNumber: 146,\n                                    columnNumber: 21\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"btn btn-sm w-2/6 btn-error mt-2 \".concat((next_font_google_target_css_path_app_components_Room_Capture_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_4___default().className)),\n                                    onClick: retakeImage,\n                                    children: \"Retake\"\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n                                    lineNumber: 152,\n                                    columnNumber: 21\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n                            lineNumber: 145,\n                            columnNumber: 19\n                        }, undefined);\n                    } else {\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"btn btn-sm btn-secondary mt-2  \".concat((next_font_google_target_css_path_app_components_Room_Capture_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_4___default().className)),\n                                    style: {\n                                        textShadow: \"2px 2px 2px #0004\"\n                                    },\n                                    onClick: captureImage,\n                                    children: \"Capture\"\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n                                    lineNumber: 163,\n                                    columnNumber: 19\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"btn btn-sm btn-secondary mt-2 \".concat((next_font_google_target_css_path_app_components_Room_Capture_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_4___default().className)),\n                                    style: {\n                                        textShadow: \"2px 2px 2px #0004\"\n                                    },\n                                    onClick: ()=>{\n                                        setCameraState(!camearaState);\n                                    },\n                                    children: \"Rotate Camera\"\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n                                    lineNumber: 170,\n                                    columnNumber: 19\n                                }, undefined)\n                            ]\n                        }, void 0, true);\n                    }\n                }\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n                lineNumber: 121,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n            lineNumber: 116,\n            columnNumber: 9\n        }, undefined) || /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: [\n                \"Your image \",\n                matchedState[0],\n                \"% matched\"\n            ]\n        }, void 0, true, {\n            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Capture.tsx\",\n            lineNumber: 182,\n            columnNumber: 13\n        }, undefined)\n    }, void 0, false);\n};\n_s(Capture, \"XUkx6tcBNw7xq5B9JdsbJJYhSt4=\", false, function() {\n    return [\n        _Context_store__WEBPACK_IMPORTED_MODULE_3__.useGlobalContext\n    ];\n});\n_c = Capture;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Capture);\nvar _c;\n$RefreshReg$(_c, \"Capture\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./app/components/Room/Capture.tsx\n"));

/***/ }),

/***/ "(app-client)/./app/components/Room/Chat.tsx":
/*!**************************************!*\
  !*** ./app/components/Room/Chat.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_font_google_target_css_path_app_components_Room_Chat_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_bungee___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app\\\\components\\\\Room\\\\Chat.tsx\",\"import\":\"Bungee\",\"arguments\":[{\"weight\":\"400\",\"subsets\":[\"latin\"]}],\"variableName\":\"bungee\"} */ \"(app-client)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\components\\\\\\\\Room\\\\\\\\Chat.tsx\\\",\\\"import\\\":\\\"Bungee\\\",\\\"arguments\\\":[{\\\"weight\\\":\\\"400\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"bungee\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_components_Room_Chat_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_bungee___WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_components_Room_Chat_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_bungee___WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_font_google_target_css_path_app_components_Room_Chat_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app\\\\components\\\\Room\\\\Chat.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":\"500\",\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"} */ \"(app-client)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\components\\\\\\\\Room\\\\\\\\Chat.tsx\\\",\\\"import\\\":\\\"Poppins\\\",\\\"arguments\\\":[{\\\"weight\\\":\\\"500\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"poppins\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_components_Room_Chat_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_components_Room_Chat_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\n\n\nconst Chat = (props)=>{\n    _s();\n    const chatListRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var // @ts-ignore\n        _chatListRef_current, _chatListRef_current1;\n        chatListRef === null || chatListRef === void 0 ? void 0 : (_chatListRef_current = chatListRef.current) === null || _chatListRef_current === void 0 ? void 0 : _chatListRef_current.scrollTo(0, chatListRef === null || chatListRef === void 0 ? void 0 : (_chatListRef_current1 = chatListRef.current) === null || _chatListRef_current1 === void 0 ? void 0 : _chatListRef_current1.scrollHeight);\n    }, [\n        props.msgs\n    ]);\n    // return (\n    //   <div className=\"pl-1 pr-1 h-full\">\n    //     <div\n    //       id=\"chat-list\"\n    //       ref={chatListRef}\n    //       className={`flex flex-col gap-1 bg-base-200 w-full h-1/4 nobar mb-1.5 overflow-x-scroll ${poppins.className}`}\n    //     >\n    //       {props.msgs.map((m: { username: string; message: string }, idx) => {\n    //         return (\n    //           m.username && (\n    //             <div className=\"bg-base-200 p-1\" key={idx}>\n    //               {m.username}: {m.message}\n    //             </div>\n    //           )\n    //         );\n    //       })}\n    //     </div>\n    //     <input\n    //       type=\"text\"\n    //       value={props.msg}\n    //       onKeyDown={(e) => {\n    //         if (e.key === \"Enter\") {\n    //           props?.sendMsg();\n    //         }\n    //       }}\n    //       onChange={(e) => props.setMsg(e.target.value)}\n    //       placeholder=\"Type message here\"\n    //       className={`input leading-none rounded w-full bg-base-200 mb-2 stext-mg text-white ${poppins.className}`}\n    //     />\n    //   </div>\n    // );\n    // };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        id: \"chat\",\n        className: \"flex flex-col m-2 p-2 h-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-primary text-left text-xl font-bold p-1\",\n                children: \"CHAT\"\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Chat.tsx\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"chat-list\",\n                ref: chatListRef,\n                className: \"flex flex-col gap-1 w-full p-2 overflow-auto h-44\",\n                children: props.msgs.map((m, idx)=>m.username && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (next_font_google_target_css_path_app_components_Room_Chat_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_2___default().className),\n                        children: [\n                            m.username,\n                            \": \",\n                            m.message\n                        ]\n                    }, idx, true, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Chat.tsx\",\n                        lineNumber: 71,\n                        columnNumber: 11\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Chat.tsx\",\n                lineNumber: 65,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex gap-2 items-center justify-between mt-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Type here\",\n                        value: props.msg,\n                        onKeyDown: (e)=>{\n                            if (e.key === \"Enter\") {\n                                props.sendMsg();\n                            }\n                        },\n                        onChange: (e)=>props.setMsg(e.target.value),\n                        className: \"input bg-slate-600 input-bordered w-full \".concat((next_font_google_target_css_path_app_components_Room_Chat_tsx_import_Poppins_arguments_weight_500_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_2___default().className))\n                    }, void 0, false, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Chat.tsx\",\n                        lineNumber: 77,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"btn btn-primary \".concat((next_font_google_target_css_path_app_components_Room_Chat_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_bungee___WEBPACK_IMPORTED_MODULE_3___default().className)),\n                        onClick: props.sendMsg,\n                        children: \"Send\"\n                    }, void 0, false, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Chat.tsx\",\n                        lineNumber: 89,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Chat.tsx\",\n                lineNumber: 76,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Chat.tsx\",\n        lineNumber: 63,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Chat, \"/JjMiEc4sEjx3DiG+4jrWXzooqI=\");\n_c = Chat;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Chat);\nvar _c;\n$RefreshReg$(_c, \"Chat\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vYXBwL2NvbXBvbmVudHMvUm9vbS9DaGF0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBR01BO0FBS0FDO0FBUjJDO0FBb0JqRCxNQUFNSSxPQUFPLENBQUNDOztJQUNaLE1BQU1DLGNBQWNILDZDQUFNQSxDQUFDO0lBRTNCRCxnREFBU0EsQ0FBQztZQUNSLGFBQWE7UUFDYkksc0JBQWtDQTtRQUFsQ0Esd0JBQUFBLHlCQUFBQSxLQUFBQSxJQUFBQSxDQUFBQSx1QkFBQUEsWUFBYUMscUJBQWJELGtDQUFBQSxLQUFBQSxJQUFBQSxxQkFBc0JFLFNBQVMsR0FBR0Ysd0JBQUFBLHlCQUFBQSxLQUFBQSxJQUFBQSxDQUFBQSx3QkFBQUEsWUFBYUMscUJBQWJELG1DQUFBQSxLQUFBQSxJQUFBQSxzQkFBc0JHO0lBQzFELEdBQUc7UUFBQ0osTUFBTUs7S0FBSztJQUVmLFdBQVc7SUFDWCx1Q0FBdUM7SUFDdkMsV0FBVztJQUNYLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIsdUhBQXVIO0lBQ3ZILFFBQVE7SUFDUiw2RUFBNkU7SUFDN0UsbUJBQW1CO0lBQ25CLDRCQUE0QjtJQUM1QiwwREFBMEQ7SUFDMUQsMENBQTBDO0lBQzFDLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2QsYUFBYTtJQUNiLFlBQVk7SUFDWixhQUFhO0lBRWIsYUFBYTtJQUNiLG9CQUFvQjtJQUNwQiwwQkFBMEI7SUFDMUIsNEJBQTRCO0lBQzVCLG1DQUFtQztJQUNuQyw4QkFBOEI7SUFDOUIsWUFBWTtJQUNaLFdBQVc7SUFDWCx1REFBdUQ7SUFDdkQsd0NBQXdDO0lBQ3hDLGtIQUFrSDtJQUNsSCxTQUFTO0lBQ1QsV0FBVztJQUNYLEtBQUs7SUFDTCxLQUFLO0lBQ0wscUJBQ0UsOERBQUNDO1FBQUlDLElBQUc7UUFBT0MsV0FBVTs7MEJBQ3ZCLDhEQUFDRjtnQkFBSUUsV0FBVTswQkFBK0M7Ozs7OzswQkFDOUQsOERBQUNGO2dCQUNDQyxJQUFHO2dCQUNIRSxLQUFLUjtnQkFDTE8sV0FBVTswQkFFVFIsTUFBTUssS0FBS0ssSUFBSSxDQUFDQyxHQUEwQ0MsTUFBUUQsRUFBRUUsMEJBQ25FLDhEQUFDUDt3QkFBSUUsV0FBV2Isd0xBQWlCYTs7NEJBQzlCRyxFQUFFRTs0QkFBUzs0QkFBR0YsRUFBRUc7O3VCQURxQkY7Ozs7Ozs7Ozs7MEJBSzVDLDhEQUFDTjtnQkFBSUUsV0FBVTs7a0NBQ2IsOERBQUNPO3dCQUNDQyxNQUFLO3dCQUNMQyxhQUFZO3dCQUNaQyxPQUFPbEIsTUFBTW1CO3dCQUNiQyxXQUFXLENBQUNDOzRCQUNWLElBQUlBLEVBQUVDLFFBQVEsU0FBUztnQ0FDckJ0QixNQUFNdUI7NEJBQ1I7d0JBQ0Y7d0JBQ0FDLFVBQVUsQ0FBQ0gsSUFBTXJCLE1BQU15QixPQUFPSixFQUFFSyxPQUFPUjt3QkFDdkNWLFdBQVcsNENBQThELE9BQWxCYix3TEFBaUJhOzs7Ozs7a0NBRTFFLDhEQUFDbUI7d0JBQU9uQixXQUFXLG1CQUFvQyxPQUFqQmQsc0xBQWdCYzt3QkFBSW9CLFNBQVM1QixNQUFNdUI7a0NBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CMUY7R0F2Rk14QjtLQUFBQTtBQXlGTiwrREFBZUEsSUFBSUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29tcG9uZW50cy9Sb29tL0NoYXQudHN4PzEyMDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBCdW5nZWUsIFBvcHBpbnMgfSBmcm9tIFwibmV4dC9mb250L2dvb2dsZVwiO1xuXG5jb25zdCBidW5nZWUgPSBCdW5nZWUoe1xuICB3ZWlnaHQ6IFwiNDAwXCIsXG4gIHN1YnNldHM6IFtcImxhdGluXCJdLFxufSk7XG5cbmNvbnN0IHBvcHBpbnMgPSBQb3BwaW5zKHtcbiAgd2VpZ2h0OiBcIjUwMFwiLFxuICBzdWJzZXRzOiBbXCJsYXRpblwiXSxcbn0pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBtc2c6IHN0cmluZztcbiAgbXNnczogeyB1c2VybmFtZTogc3RyaW5nOyBtZXNzYWdlOiBzdHJpbmcgfVtdO1xuICBzZXRNc2c6IChtc2c6IHN0cmluZykgPT4gdm9pZDtcbiAgc2VuZE1zZzogKCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQ2hhdCA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgY2hhdExpc3RSZWYgPSB1c2VSZWYobnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgY2hhdExpc3RSZWY/LmN1cnJlbnQ/LnNjcm9sbFRvKDAsIGNoYXRMaXN0UmVmPy5jdXJyZW50Py5zY3JvbGxIZWlnaHQpO1xuICB9LCBbcHJvcHMubXNnc10pO1xuXG4gIC8vIHJldHVybiAoXG4gIC8vICAgPGRpdiBjbGFzc05hbWU9XCJwbC0xIHByLTEgaC1mdWxsXCI+XG4gIC8vICAgICA8ZGl2XG4gIC8vICAgICAgIGlkPVwiY2hhdC1saXN0XCJcbiAgLy8gICAgICAgcmVmPXtjaGF0TGlzdFJlZn1cbiAgLy8gICAgICAgY2xhc3NOYW1lPXtgZmxleCBmbGV4LWNvbCBnYXAtMSBiZy1iYXNlLTIwMCB3LWZ1bGwgaC0xLzQgbm9iYXIgbWItMS41IG92ZXJmbG93LXgtc2Nyb2xsICR7cG9wcGlucy5jbGFzc05hbWV9YH1cbiAgLy8gICAgID5cbiAgLy8gICAgICAge3Byb3BzLm1zZ3MubWFwKChtOiB7IHVzZXJuYW1lOiBzdHJpbmc7IG1lc3NhZ2U6IHN0cmluZyB9LCBpZHgpID0+IHtcbiAgLy8gICAgICAgICByZXR1cm4gKFxuICAvLyAgICAgICAgICAgbS51c2VybmFtZSAmJiAoXG4gIC8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctYmFzZS0yMDAgcC0xXCIga2V5PXtpZHh9PlxuICAvLyAgICAgICAgICAgICAgIHttLnVzZXJuYW1lfToge20ubWVzc2FnZX1cbiAgLy8gICAgICAgICAgICAgPC9kaXY+XG4gIC8vICAgICAgICAgICApXG4gIC8vICAgICAgICAgKTtcbiAgLy8gICAgICAgfSl9XG4gIC8vICAgICA8L2Rpdj5cblxuICAvLyAgICAgPGlucHV0XG4gIC8vICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgLy8gICAgICAgdmFsdWU9e3Byb3BzLm1zZ31cbiAgLy8gICAgICAgb25LZXlEb3duPXsoZSkgPT4ge1xuICAvLyAgICAgICAgIGlmIChlLmtleSA9PT0gXCJFbnRlclwiKSB7XG4gIC8vICAgICAgICAgICBwcm9wcz8uc2VuZE1zZygpO1xuICAvLyAgICAgICAgIH1cbiAgLy8gICAgICAgfX1cbiAgLy8gICAgICAgb25DaGFuZ2U9eyhlKSA9PiBwcm9wcy5zZXRNc2coZS50YXJnZXQudmFsdWUpfVxuICAvLyAgICAgICBwbGFjZWhvbGRlcj1cIlR5cGUgbWVzc2FnZSBoZXJlXCJcbiAgLy8gICAgICAgY2xhc3NOYW1lPXtgaW5wdXQgbGVhZGluZy1ub25lIHJvdW5kZWQgdy1mdWxsIGJnLWJhc2UtMjAwIG1iLTIgc3RleHQtbWcgdGV4dC13aGl0ZSAke3BvcHBpbnMuY2xhc3NOYW1lfWB9XG4gIC8vICAgICAvPlxuICAvLyAgIDwvZGl2PlxuICAvLyApO1xuICAvLyB9O1xuICByZXR1cm4gKFxuICAgIDxkaXYgaWQ9XCJjaGF0XCIgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBtLTIgcC0yIGgtZnVsbFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXByaW1hcnkgdGV4dC1sZWZ0IHRleHQteGwgZm9udC1ib2xkIHAtMVwiPkNIQVQ8L2Rpdj5cbiAgICAgIDxkaXZcbiAgICAgICAgaWQ9XCJjaGF0LWxpc3RcIlxuICAgICAgICByZWY9e2NoYXRMaXN0UmVmfVxuICAgICAgICBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGdhcC0xIHctZnVsbCBwLTIgb3ZlcmZsb3ctYXV0byBoLTQ0XCJcbiAgICAgID5cbiAgICAgICAge3Byb3BzLm1zZ3MubWFwKChtOiB7IHVzZXJuYW1lOiBzdHJpbmc7IG1lc3NhZ2U6IHN0cmluZyB9LCBpZHgpID0+IG0udXNlcm5hbWUgJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtwb3BwaW5zLmNsYXNzTmFtZX0ga2V5PXtpZHh9PlxuICAgICAgICAgICAge20udXNlcm5hbWV9OiB7bS5tZXNzYWdlfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGdhcC0yIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbXQtMlwiPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJUeXBlIGhlcmVcIlxuICAgICAgICAgIHZhbHVlPXtwcm9wcy5tc2d9XG4gICAgICAgICAgb25LZXlEb3duPXsoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIpIHtcbiAgICAgICAgICAgICAgcHJvcHMuc2VuZE1zZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBwcm9wcy5zZXRNc2coZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGlucHV0IGJnLXNsYXRlLTYwMCBpbnB1dC1ib3JkZXJlZCB3LWZ1bGwgJHtwb3BwaW5zLmNsYXNzTmFtZX1gfVxuICAgICAgICAvPlxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17YGJ0biBidG4tcHJpbWFyeSAke2J1bmdlZS5jbGFzc05hbWV9YH0gb25DbGljaz17cHJvcHMuc2VuZE1zZ30+XG4gICAgICAgICAgU2VuZFxuICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICB7LyogPGJ1dHRvbiBjbGFzc05hbWU9XCJidG5cIiBvbkNsaWNrPXtSZWNpdmVTdGF0ZX0+U1RBVEU8L2J1dHRvbj4gKi99XG5cbiAgICAgICAgey8qIDxpbnB1dFxuICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlR5cGUgaGVyZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e21lc3NhZ2V9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRNZXNzYWdlKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJpbnB1dCBiZy1zbGF0ZS02MDAgaW5wdXQtYm9yZGVyZWQgdy1mdWxsXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiIG9uQ2xpY2s9e3NlbmRNZXNzYWdlfT5cbiAgICAgICAgICAgICAgICBTZW5kXG4gICAgICAgICAgICA8L2J1dHRvbj4gKi99XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENoYXQ7XG4iXSwibmFtZXMiOlsiYnVuZ2VlIiwicG9wcGlucyIsIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlUmVmIiwiQ2hhdCIsInByb3BzIiwiY2hhdExpc3RSZWYiLCJjdXJyZW50Iiwic2Nyb2xsVG8iLCJzY3JvbGxIZWlnaHQiLCJtc2dzIiwiZGl2IiwiaWQiLCJjbGFzc05hbWUiLCJyZWYiLCJtYXAiLCJtIiwiaWR4IiwidXNlcm5hbWUiLCJtZXNzYWdlIiwiaW5wdXQiLCJ0eXBlIiwicGxhY2Vob2xkZXIiLCJ2YWx1ZSIsIm1zZyIsIm9uS2V5RG93biIsImUiLCJrZXkiLCJzZW5kTXNnIiwib25DaGFuZ2UiLCJzZXRNc2ciLCJ0YXJnZXQiLCJidXR0b24iLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./app/components/Room/Chat.tsx\n"));

/***/ }),

/***/ "(app-client)/./app/components/Room/Leaderboard.tsx":
/*!*********************************************!*\
  !*** ./app/components/Room/Leaderboard.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n// import { useGlobalContext } from \"@/app/Context/store\";\n\nfunction Leaderboard(props) {\n    _s();\n    const curPlayer = 0;\n    // const [leaderboard, setLeaderboard] = dat;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n    // setPlayers(...players, [{ name: \"soham\", score: 200 }, { name: \"vineet\", score: 100 }]);\n    // console.log(players);\n    }, []);\n    // for (const name in props.players[0]) {\n    //     players.push(name);\n    // }\n    // props.players[0].map((player: string, idx: React.Key) => {\n    //     players.push(player);\n    // });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"overflow-x-scroll rounded bg-base-200 m-1 mt-2 nobar lg:h-40 sm:h-72\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n            className: \"table center border-separate bg-base-200 p-1 rounded-lg table-pin-rows\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                className: \"text-primary font-semibold\",\n                                children: \"#\"\n                            }, void 0, false, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                                lineNumber: 33,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                className: \"text-primary font-semibold\",\n                                children: \"Name\"\n                            }, void 0, false, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                                lineNumber: 34,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                className: \"text-primary font-semibold\",\n                                children: \"Score\"\n                            }, void 0, false, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                                lineNumber: 35,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                        lineNumber: 32,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                    lineNumber: 31,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                    children: props.data && Object.entries(props.data).map((param, idx)=>{\n                        let [key, player] = param;\n                        /*#__PURE__*/ return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                            className: idx === curPlayer && \"bg-primary text-black\" || \"\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                    children: idx + 1\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                                    lineNumber: 44,\n                                    columnNumber: 15\n                                }, this),\n                                (player === null || player === void 0 ? void 0 : player.name) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                    children: player === null || player === void 0 ? void 0 : player.name\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                                    lineNumber: 45,\n                                    columnNumber: 31\n                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                    children: \"---\"\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                                    lineNumber: 45,\n                                    columnNumber: 57\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                    children: player === null || player === void 0 ? void 0 : player.score\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                                    lineNumber: 46,\n                                    columnNumber: 16\n                                }, this)\n                            ]\n                        }, idx, true, {\n                            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                            lineNumber: 40,\n                            columnNumber: 13\n                        }, this);\n                    })\n                }, void 0, false, {\n                    fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n                    lineNumber: 38,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n            lineNumber: 30,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"G:\\\\object_hunt\\\\app\\\\components\\\\Room\\\\Leaderboard.tsx\",\n        lineNumber: 29,\n        columnNumber: 5\n    }, this);\n}\n_s(Leaderboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Leaderboard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Leaderboard);\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vYXBwL2NvbXBvbmVudHMvUm9vbS9MZWFkZXJib2FyZC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsMERBQTBEO0FBQ2pCO0FBTXpDLFNBQVNFLFlBQVlDLEtBQVk7O0lBQy9CLE1BQU1DLFlBQVk7SUFFbEIsNkNBQTZDO0lBRTdDSCxnREFBU0EsQ0FBQztJQUNSLDJGQUEyRjtJQUMzRix3QkFBd0I7SUFDMUIsR0FBRyxFQUFFO0lBRUwseUNBQXlDO0lBQ3pDLDBCQUEwQjtJQUMxQixJQUFJO0lBRUosNkRBQTZEO0lBQzdELDRCQUE0QjtJQUM1QixNQUFNO0lBRU4scUJBQ0UsOERBQUNJO1FBQUlDLFdBQVU7a0JBQ2IsNEVBQUNDO1lBQU1ELFdBQVU7OzhCQUNmLDhEQUFDRTs4QkFDQyw0RUFBQ0M7OzBDQUNDLDhEQUFDQztnQ0FBR0osV0FBVTswQ0FBNkI7Ozs7OzswQ0FDM0MsOERBQUNJO2dDQUFHSixXQUFVOzBDQUE2Qjs7Ozs7OzBDQUMzQyw4REFBQ0k7Z0NBQUdKLFdBQVU7MENBQTZCOzs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFHL0MsOERBQUNLOzhCQUNFUixNQUFNUyxRQUFRQyxPQUFPQyxRQUFRWCxNQUFNUyxNQUFNRyxJQUFJLFFBQWdCQzs0QkFBZixDQUFDQyxLQUFLQyxPQUFPO3NDQUMxRCxxRUFBQ1Q7NEJBRUNILFdBQVcsUUFBU0YsYUFBYywyQkFBMkI7OzhDQUU3RCw4REFBQ2U7OENBQUlILE1BQU07Ozs7OztnQ0FDVkUsQ0FBQUEsbUJBQUFBLG9CQUFBQSxLQUFBQSxJQUFBQSxPQUFRRSxJQUFHLGtCQUFJLDhEQUFDRDs4Q0FBSUQsbUJBQUFBLG9CQUFBQSxLQUFBQSxJQUFBQSxPQUFRRTs7Ozs7eURBQWEsOERBQUNEOzhDQUFHOzs7Ozs7OENBQzdDLDhEQUFDQTs4Q0FBSUQsbUJBQUFBLG9CQUFBQSxLQUFBQSxJQUFBQSxPQUFRRzs7Ozs7OzsyQkFMVEw7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFZbkI7R0EzQ1NkO0tBQUFBO0FBNkNULCtEQUFlQSxXQUFXQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9jb21wb25lbnRzL1Jvb20vTGVhZGVyYm9hcmQudHN4PzgyMzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbi8vIGltcG9ydCB7IHVzZUdsb2JhbENvbnRleHQgfSBmcm9tIFwiQC9hcHAvQ29udGV4dC9zdG9yZVwiO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBkYXRhOiBhbnlbXTtcbn1cblxuZnVuY3Rpb24gTGVhZGVyYm9hcmQocHJvcHM6IFByb3BzKSB7XG4gIGNvbnN0IGN1clBsYXllciA9IDA7XG5cbiAgLy8gY29uc3QgW2xlYWRlcmJvYXJkLCBzZXRMZWFkZXJib2FyZF0gPSBkYXQ7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBzZXRQbGF5ZXJzKC4uLnBsYXllcnMsIFt7IG5hbWU6IFwic29oYW1cIiwgc2NvcmU6IDIwMCB9LCB7IG5hbWU6IFwidmluZWV0XCIsIHNjb3JlOiAxMDAgfV0pO1xuICAgIC8vIGNvbnNvbGUubG9nKHBsYXllcnMpO1xuICB9LCBbXSk7XG5cbiAgLy8gZm9yIChjb25zdCBuYW1lIGluIHByb3BzLnBsYXllcnNbMF0pIHtcbiAgLy8gICAgIHBsYXllcnMucHVzaChuYW1lKTtcbiAgLy8gfVxuXG4gIC8vIHByb3BzLnBsYXllcnNbMF0ubWFwKChwbGF5ZXI6IHN0cmluZywgaWR4OiBSZWFjdC5LZXkpID0+IHtcbiAgLy8gICAgIHBsYXllcnMucHVzaChwbGF5ZXIpO1xuICAvLyB9KTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwib3ZlcmZsb3cteC1zY3JvbGwgcm91bmRlZCBiZy1iYXNlLTIwMCBtLTEgbXQtMiBub2JhciBsZzpoLTQwIHNtOmgtNzJcIj5cbiAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSBjZW50ZXIgYm9yZGVyLXNlcGFyYXRlIGJnLWJhc2UtMjAwIHAtMSByb3VuZGVkLWxnIHRhYmxlLXBpbi1yb3dzXCI+XG4gICAgICAgIDx0aGVhZD5cbiAgICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwidGV4dC1wcmltYXJ5IGZvbnQtc2VtaWJvbGRcIj4jPC90aD5cbiAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ0ZXh0LXByaW1hcnkgZm9udC1zZW1pYm9sZFwiPk5hbWU8L3RoPlxuICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInRleHQtcHJpbWFyeSBmb250LXNlbWlib2xkXCI+U2NvcmU8L3RoPlxuICAgICAgICAgIDwvdHI+XG4gICAgICAgIDwvdGhlYWQ+XG4gICAgICAgIDx0Ym9keT5cbiAgICAgICAgICB7cHJvcHMuZGF0YSAmJiBPYmplY3QuZW50cmllcyhwcm9wcy5kYXRhKS5tYXAoKFtrZXksIHBsYXllcl0sIGlkeCkgPT4gKFxuICAgICAgICAgICAgPHRyXG4gICAgICAgICAgICAgIGtleT17aWR4fVxuICAgICAgICAgICAgICBjbGFzc05hbWU9eyhpZHggPT09IGN1clBsYXllciAmJiBgYmctcHJpbWFyeSB0ZXh0LWJsYWNrYCkgfHwgXCJcIn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHRkPntpZHggKyAxfTwvdGQ+XG4gICAgICAgICAgICAgIHtwbGF5ZXI/Lm5hbWUgPyA8dGQ+e3BsYXllcj8ubmFtZX08L3RkPiA6IDx0ZD4tLS08L3RkPn1cbiAgICAgICAgICAgICAgezx0ZD57cGxheWVyPy5zY29yZX08L3RkPn1cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvdGJvZHk+XG4gICAgICA8L3RhYmxlPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBMZWFkZXJib2FyZDtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsIkxlYWRlcmJvYXJkIiwicHJvcHMiLCJjdXJQbGF5ZXIiLCJkaXYiLCJjbGFzc05hbWUiLCJ0YWJsZSIsInRoZWFkIiwidHIiLCJ0aCIsInRib2R5IiwiZGF0YSIsIk9iamVjdCIsImVudHJpZXMiLCJtYXAiLCJpZHgiLCJrZXkiLCJwbGF5ZXIiLCJ0ZCIsIm5hbWUiLCJzY29yZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./app/components/Room/Leaderboard.tsx\n"));

/***/ }),

/***/ "(app-client)/./app/g/page.tsx":
/*!************************!*\
  !*** ./app/g/page.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_font_google_target_css_path_app_g_page_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font___WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app\\\\g\\\\page.tsx\",\"import\":\"Bungee\",\"arguments\":[{\"weight\":\"400\",\"subsets\":[\"latin\"]}],\"variableName\":\"font\"} */ \"(app-client)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\g\\\\\\\\page.tsx\\\",\\\"import\\\":\\\"Bungee\\\",\\\"arguments\\\":[{\\\"weight\\\":\\\"400\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"font\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_g_page_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font___WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_g_page_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font___WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app\\\\g\\\\page.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":[\"400\",\"500\",\"600\",\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"} */ \"(app-client)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\g\\\\\\\\page.tsx\\\",\\\"import\\\":\\\"Poppins\\\",\\\"arguments\\\":[{\\\"weight\\\":[\\\"400\\\",\\\"500\\\",\\\"600\\\",\\\"700\\\"],\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"poppins\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-client)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_coly__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/coly */ \"(app-client)/./lib/coly.ts\");\n/* harmony import */ var _components_Modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Modal */ \"(app-client)/./app/components/Modal.tsx\");\n/* harmony import */ var _Context_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Context/store */ \"(app-client)/./app/Context/store.tsx\");\n/* harmony import */ var _components_ImgSlider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/ImgSlider */ \"(app-client)/./app/components/ImgSlider.tsx\");\n/* harmony import */ var _components_Room_Capture__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/Room/Capture */ \"(app-client)/./app/components/Room/Capture.tsx\");\n/* harmony import */ var _components_Room_Chat__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/Room/Chat */ \"(app-client)/./app/components/Room/Chat.tsx\");\n/* harmony import */ var _components_Room_Leaderboard__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/Room/Leaderboard */ \"(app-client)/./app/components/Room/Leaderboard.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n// import TabManager from \"../components/TabManager\";\n// Logical components\n// import { useGlobalContext } from \"../Context/store\";\n// import useGameState from \"../components/useGameState\";\n\n\n\n\n\n\nconst prevTime = new Date().getTime();\nconst getCurTime = ()=>{\n    return Math.round((new Date().getTime() - prevTime) / 600);\n};\nconst page = ()=>{\n    _s();\n    // Multiplayer\n    const searchParams = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useSearchParams)();\n    const [roomId, setRoomId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isRC, setIsRC] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [room, setRoom] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    // Chat\n    const [msg, setMsg] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [msgs, setMsgs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            username: \"\",\n            message: \"\"\n        }\n    ]);\n    // Leaderboard\n    const [leaderboard, setLeaderboard] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            username: \"\",\n            score: 0\n        }\n    ]);\n    // Tab Manager\n    const [activeTab, setActiveTab] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // const [players, setPlayers] = useState([\"\"]);\n    const [objname, setObjname] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [score, setScore] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [round, setRound] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [time, setTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [canRetakeImage, setCanRetakeImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // const [myId, setMyId] = useState(\"\");\n    const [ready, setReady] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [gameState, setGameState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"started\");\n    // const [gameState, setGameState] = useState(\"waiting\");\n    const [roundState, setRoundState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const slideImages = [\n        {\n            url: \"https://images.unsplash.com/photo-1509721434272-b79147e0e708?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80\",\n            caption: \"Player 1\"\n        },\n        {\n            url: \"https://images.unsplash.com/photo-1506710507565-203b9f24669b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1536&q=80\",\n            caption: \"Player 2\"\n        },\n        {\n            url: \"https://images.unsplash.com/photo-1536987333706-fc9adfb10d91?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80\",\n            caption: \"Player 3\"\n        }\n    ];\n    const [playersResponse, setPlayersResponse] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            img: \"\",\n            name: \"\",\n            matched: undefined\n        }\n    ]);\n    const Ready = ()=>{\n        console.log(\"ROOM OBJ\", room);\n        if (ready) return;\n        console.log(\"Ready\", getCurTime());\n        room.send(\"ready\");\n        setReady(true);\n    };\n    const GameStarts = (payload)=>{\n        console.log(\"Game Starts\");\n        setGameState(\"started\");\n        setLeaderboard(payload.leaderboard);\n    };\n    const GameEnds = (payload)=>{\n        console.log(\"Game Ends\");\n        setGameState(\"ended\");\n        setLeaderboard(payload.leaderboard);\n        setActiveTab(1);\n    };\n    const RoundStarts = (payload)=>{\n        console.log(\"Round Starts\", getCurTime(), payload.curRound);\n        setRoundState(\"started\");\n        setCanRetakeImage(true);\n        setObjname(payload.objname);\n        setRound(payload.curRound + 1);\n        startCounter(payload.time);\n    };\n    const RoundEnds = (payload)=>{\n        console.log(\"Round Ends\", getCurTime(), payload.curScore);\n        console.log(payload.imgs);\n        setRoundState(\"ended\");\n        // console.log(payload);\n        setCanRetakeImage(false);\n        setPlayersResponse(payload.imgs);\n        setLeaderboard(payload.leaderboard);\n        setScore(payload.curScore);\n    };\n    const submitImage = (image)=>{\n        console.log(\"Sending image\", image === null || image === void 0 ? void 0 : image.substring(0, 3));\n        room.send(\"img\", image);\n    };\n    const sendMsg = ()=>{\n        if (!msg) return;\n        if (!room) return;\n        console.log(\"Sending msg\", msg);\n        room.send(\"chat\", msg);\n        // room.send(\"chat\", {username: localStorage.getItem(\"username\"), message: msg});\n        setMsg(\"\");\n    };\n    const appendMsgs = (msg)=>{\n        // append msg to msgs using setMsgs\n        msgs.push(msg);\n        setMsgs(msgs.slice());\n        console.log(msgs);\n    };\n    // useEffect(() => {\n    //   router.refresh();\n    //   console.log(\"ROUTER REFRESH\");\n    // }\n    // , [msgs]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const id = searchParams.get(\"id\") || undefined;\n        const isRoomCreator = searchParams.get(\"rc\") || false;\n        setRoomId(id || \"\");\n        setIsRC(isRoomCreator === \"true\" ? true : false);\n        console.log(\"ID\", id);\n        console.log(\"isRoomCreator\", isRoomCreator);\n        onJoin(id);\n        function GameplaySetup(_room, isRoomCreator) {\n            console.log(\"JOINED ROOM\", _room);\n            setRoom(_room);\n            if (isRoomCreator) {\n                console.log(\"ROOM ID\", _room.id);\n                setRoomId(_room.id);\n            } else {\n                // call Ready() after 5 seconds\n                setTimeout(()=>{\n                    if (ready) return;\n                    console.log(\"AUTO READY\", getCurTime());\n                    _room.send(\"ready\");\n                    setReady(true);\n                }, 5000);\n            }\n            _room.onMessage(\"gameStarts\", (payload)=>GameStarts(payload));\n            _room.onMessage(\"gameEnds\", (payload)=>GameEnds(payload));\n            _room.onMessage(\"roundStarts\", (payload)=>{\n                RoundStarts(payload);\n            });\n            _room.onMessage(\"roundEnds\", (payload)=>{\n                RoundEnds(payload);\n            });\n            _room.onMessage(\"chat\", (msg)=>{\n                appendMsgs(msg);\n            });\n        }\n        function onJoin(id) {\n            if (id) {\n                _lib_coly__WEBPACK_IMPORTED_MODULE_3__[\"default\"].client.joinById(id).then((_room)=>{\n                    GameplaySetup(_room, false);\n                // setRoom(_room);\n                // console.log(\"JOINED ROOM\", _room);\n                }).catch((e)=>{\n                    alert(\"Error: joining room, try again with valid room id\");\n                    console.log(\"JOIN ERROR\", e);\n                });\n            } else {\n                _lib_coly__WEBPACK_IMPORTED_MODULE_3__[\"default\"].client.joinOrCreate(\"my_room\", {\n                    username: localStorage.getItem(\"username\")\n                }).then((_room)=>{\n                    const _isRC = searchParams.get(\"rc\") === \"true\" || false;\n                    console.log(\"IS RC\", _isRC);\n                    GameplaySetup(_room, _isRC);\n                // room.onMessage(\"img\", (message: string) => {\n                //   console.log(\"IMG \" + message);\n                // });\n                // room.onMessage(\"ready\", OnReadyMsgs);\n                }).catch((e)=>{\n                    alert(\"Error: joining room, try again with valid room id\");\n                    console.log(\"JOIN ERROR\", e);\n                });\n            }\n        }\n        // function OnChatMsgs(message: string) {}\n        // function OnImgMsgs(message: string) {}\n        // function OnReadyMsgs(message: string) {}\n        // function onConnect() {\n        //   setIsConnected(true);\n        // }\n        // function onDisconnect() {\n        //   setIsConnected(false);\n        // }\n        // function onMessage(data: any) {\n        //   setMsgs(data);\n        // }\n        // function onRoundStart(data: any) {\n        //   setRoundState(\"started\");\n        //   console.log(data);\n        //   setObjname(data.objectname);\n        //   setScore(data.score);\n        //   setRound(data.round);\n        //   startCounter(data.time);\n        // }\n        // function onRoundEnd(data: any) {\n        //   setRoundState(\"ended\");\n        //   tabState[1](1);\n        //   let players_res: { name: any; data: any }[] = [];\n        //   const dataa = data.data;\n        //   // Object.keys(dataa).forEach((key) => {\n        //   //   // players_res.push({ name: key, data: dataa[key] });\n        //   // });\n        //   setPlayersResponse(dataa);\n        //   console.log(dataa);\n        //   // setPlayersResponse(players_res);\n        // }\n        // function onLeaderboard(data: any) {\n        //   setLeaderboard(data);\n        // }\n        // function onGameState(data: any) {\n        //   setGameState(data);\n        //   console.log(\"Game State: \", data);\n        // }\n        // socket.on(\"connect\", onConnect);\n        // socket.on(\"disconnect\", onDisconnect);\n        // socket.on(\"gamestate\", onGameState);\n        // socket.on(\"message\", onMessage);\n        // socket.on(\"roundstart\", onRoundStart);\n        // socket.on(\"roundend\", onRoundEnd);\n        // socket.on(\"leaderboard\", onLeaderboard);\n        // connect();\n        return ()=>{\n        // socket.off(\"connect\", onConnect);\n        // socket.off(\"disconnect\", onDisconnect);\n        // socket.off(\"gamestate\", onGameState);\n        // socket.off(\"message\", onMessage);\n        // socket.off(\"roundstart\", onRoundStart);\n        // socket.off(\"roundend\", onRoundEnd);\n        // socket.off(\"leaderboard\", onLeaderboard);\n        };\n    }, []);\n    // function connect() {\n    //   try {\n    //     socket.connect();\n    //     socket.emit(\"join\", localStorage.getItem(\"username\") || \"unknown\");\n    //     socket.emit(\"ready\", ready);\n    //     setIsConnected(true);\n    //   } catch (err) {\n    //     alert(\"Error connecting to server\");\n    //     console.log(err);\n    //   }\n    // }\n    // function disconnect() {\n    //   socket.disconnect();\n    //   setIsConnected(false);\n    // }\n    async function startCounter(delay) {\n        for(let i = delay; i >= 0; i--){\n            setTime(i);\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n        }\n    // for (let i = 0; i <= delay; i++) {\n    //   setTime(delay - i);\n    //   await new Promise((resolve) => setTimeout(resolve, 1000));\n    // }\n    }\n    const { username } = (0,_Context_store__WEBPACK_IMPORTED_MODULE_5__.useGlobalContext)();\n    // const setMsg = (msg: string) => {\n    //   updateMsg(msg);\n    // };\n    // const setMsgs = (msgs: string[]) => {\n    //   // updateMsgs(msgs);\n    // };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative h-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"\".concat((next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10___default().className))\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                lineNumber: 364,\n                columnNumber: 7\n            }, undefined),\n            gameState === \"waiting\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Modal__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                customClose: [\n                    \"Quit\",\n                    \"/menu\"\n                ],\n                enable: true,\n                defaultOpen: true,\n                actions: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: ready ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"font-semibold text-lg \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10___default().className)),\n                        children: \"Wait for others\"\n                    }, void 0, false, void 0, void 0) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        disabled: !room,\n                        className: \"btn btn-secondary font-bold \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10___default().className)),\n                        onClick: ()=>{\n                            Ready();\n                        },\n                        children: \"Ready\"\n                    }, void 0, false, void 0, void 0)\n                }, void 0, false, void 0, void 0),\n                id: \"a\",\n                btnname: \"LOL\",\n                title: \"Object Hunt\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col gap-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-2xl\",\n                            children: \"Are you ready to Play?\"\n                        }, void 0, false, {\n                            fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                            lineNumber: 394,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"font-bold \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10___default().className)),\n                            children: \"Click on the below button and wait for the other players\"\n                        }, void 0, false, {\n                            fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                            lineNumber: 395,\n                            columnNumber: 13\n                        }, undefined),\n                        isRC && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"font-bold \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10___default().className)),\n                            children: [\n                                \"Room Id:\",\n                                \" \",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    onClick: ()=>{\n                                        navigator.clipboard.writeText(roomId);\n                                    },\n                                    className: \"text-primary bg-zinc-800 p-1 rounded-md \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10___default().className)),\n                                    children: roomId\n                                }, void 0, false, {\n                                    fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                                    lineNumber: 401,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                            lineNumber: 399,\n                            columnNumber: 15\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                    lineNumber: 393,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                lineNumber: 366,\n                columnNumber: 9\n            }, undefined),\n            gameState === \"ended\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Modal__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                customClose: [\n                    \"Quit\",\n                    \"/menu\"\n                ],\n                enable: true,\n                defaultOpen: true,\n                id: \"gameended\",\n                btnname: \"LOL\",\n                title: \"Game Ended\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Room_Leaderboard__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    data: leaderboard\n                }, void 0, false, {\n                    fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                    lineNumber: 424,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                lineNumber: 416,\n                columnNumber: 9\n            }, undefined),\n            roundState === \"ended\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Modal__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                enable: true,\n                defaultOpen: true,\n                id: \"RoundEnd\",\n                title: \"Round End\",\n                btnname: \"lol\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ImgSlider__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                    data: playersResponse,\n                    objname: objname\n                }, void 0, false, {\n                    fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                    lineNumber: 436,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                lineNumber: 429,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"my-2\"\n            }, void 0, false, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                lineNumber: 440,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-base-200 p-2 m-1 rounded-md flex justify-between\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-xl \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font___WEBPACK_IMPORTED_MODULE_11___default().className)),\n                        children: [\n                            \"Find a\",\n                            \" \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-primary capitalize \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font___WEBPACK_IMPORTED_MODULE_11___default().className)),\n                                children: objname || \"Object\"\n                            }, void 0, false, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                                lineNumber: 447,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                        lineNumber: 445,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-xl \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10___default().className)),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, void 0, false),\n                            time,\n                            \"s left\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                        lineNumber: 451,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                lineNumber: 444,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-between text-md m-1 bg-base-200 p-2 \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Poppins_arguments_weight_400_500_600_700_subsets_latin_variableName_poppins___WEBPACK_IMPORTED_MODULE_10___default().className), \" rounded-md\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            \"Score: \",\n                            score\n                        ]\n                    }, void 0, true, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                        lineNumber: 463,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            \"Round: \",\n                            round\n                        ]\n                    }, void 0, true, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                        lineNumber: 464,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                lineNumber: 460,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-full bg-red-500\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Room_Capture__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                        submitImage: submitImage,\n                        canRetake: canRetakeImage\n                    }, void 0, false, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                        lineNumber: 468,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"tabs tabs-boxed m-1 mt-1.5\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                className: activeTab == 0 && \"tab-active tab w-1/2 \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font___WEBPACK_IMPORTED_MODULE_11___default().className)) || \"tab w-1/2 \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font___WEBPACK_IMPORTED_MODULE_11___default().className)),\n                                onClick: ()=>setActiveTab(0),\n                                children: \"Chat\"\n                            }, void 0, false, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                                lineNumber: 470,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                className: activeTab == 1 && \"tab-active tab w-1/2 \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font___WEBPACK_IMPORTED_MODULE_11___default().className)) || \"tab w-1/2 \".concat((next_font_google_target_css_path_app_g_page_tsx_import_Bungee_arguments_weight_400_subsets_latin_variableName_font___WEBPACK_IMPORTED_MODULE_11___default().className)),\n                                onClick: ()=>setActiveTab(1),\n                                children: \"Leaderboard\"\n                            }, void 0, false, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                                lineNumber: 479,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                        lineNumber: 469,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-blue-500 h-full w-full flex-1\",\n                        children: [\n                            activeTab == 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Room_Chat__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                msg: msg,\n                                msgs: msgs,\n                                setMsg: setMsg,\n                                sendMsg: sendMsg\n                            }, void 0, false, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                                lineNumber: 491,\n                                columnNumber: 13\n                            }, undefined),\n                            activeTab == 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Room_Leaderboard__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                data: leaderboard\n                            }, void 0, false, {\n                                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                                lineNumber: 493,\n                                columnNumber: 30\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                        lineNumber: 489,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n                lineNumber: 467,\n                columnNumber: 7\n            }, undefined),\n             false && /*#__PURE__*/ 0\n        ]\n    }, void 0, true, {\n        fileName: \"G:\\\\object_hunt\\\\app\\\\g\\\\page.tsx\",\n        lineNumber: 363,\n        columnNumber: 5\n    }, undefined);\n};\n_s(page, \"6kU3kg+AFZK3HUdcfHgzd3gIGSA=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useSearchParams,\n        _Context_store__WEBPACK_IMPORTED_MODULE_5__.useGlobalContext\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (page);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vYXBwL2cvcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCTUE7QUFLQUM7QUExQjZDO0FBRVU7QUFFL0I7QUFFOUIscURBQXFEO0FBRXJELHFCQUFxQjtBQUNyQix1REFBdUQ7QUFDdkQseURBQXlEO0FBRWpCO0FBQ1k7QUFDSjtBQUdDO0FBQ047QUFDYztBQVl6RCxNQUFNWSxXQUFXLElBQUlDLE9BQU9DO0FBRTVCLE1BQU1DLGFBQWE7SUFDakIsT0FBT0MsS0FBS0MsTUFBTSxDQUFDLElBQUlKLE9BQU9DLFlBQVlGLFFBQU8sSUFBSztBQUN4RDtBQUVBLE1BQU1NLE9BQU87O0lBQ1gsY0FBYztJQUNkLE1BQU1DLGVBQWVmLGdFQUFlQTtJQUNwQyxNQUFNLENBQUNnQixRQUFRQyxVQUFVLEdBQUdsQiwrQ0FBUUEsQ0FBQztJQUNyQyxNQUFNLENBQUNtQixNQUFNQyxRQUFRLEdBQUdwQiwrQ0FBUUEsQ0FBQztJQUVqQyxNQUFNLENBQUNxQixNQUFNQyxRQUFRLEdBQUd0QiwrQ0FBUUEsQ0FBQyxDQUFDO0lBRWxDLE9BQU87SUFDUCxNQUFNLENBQUN1QixLQUFLQyxPQUFPLEdBQUd4QiwrQ0FBUUEsQ0FBQztJQUMvQixNQUFNLENBQUN5QixNQUFNQyxRQUFRLEdBQUcxQiwrQ0FBUUEsQ0FBQztRQUFDO1lBQUUyQixVQUFVO1lBQUlDLFNBQVM7UUFBRztLQUFFO0lBRWhFLGNBQWM7SUFDZCxNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBRzlCLCtDQUFRQSxDQUFDO1FBQUM7WUFBRTJCLFVBQVU7WUFBSUksT0FBTztRQUFFO0tBQUU7SUFFM0UsY0FBYztJQUNkLE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHakMsK0NBQVFBLENBQUM7SUFFM0MsZ0RBQWdEO0lBRWhELE1BQU0sQ0FBQ2tDLFNBQVNDLFdBQVcsR0FBR25DLCtDQUFRQSxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQytCLE9BQU9LLFNBQVMsR0FBR3BDLCtDQUFRQSxDQUFDO0lBQ25DLE1BQU0sQ0FBQ2MsT0FBT3VCLFNBQVMsR0FBR3JDLCtDQUFRQSxDQUFDO0lBQ25DLE1BQU0sQ0FBQ3NDLE1BQU1DLFFBQVEsR0FBR3ZDLCtDQUFRQSxDQUFDO0lBRWpDLE1BQU0sQ0FBQ3dDLGdCQUFnQkMsa0JBQWtCLEdBQUd6QywrQ0FBUUEsQ0FBQztJQUVyRCx3Q0FBd0M7SUFFeEMsTUFBTSxDQUFDMEMsT0FBT0MsU0FBUyxHQUFHM0MsK0NBQVFBLENBQUM7SUFFbkMsTUFBTSxDQUFDNEMsV0FBV0MsYUFBYSxHQUFHN0MsK0NBQVFBLENBQUM7SUFDM0MseURBQXlEO0lBRXpELE1BQU0sQ0FBQzhDLFlBQVlDLGNBQWMsR0FBRy9DLCtDQUFRQSxDQUFDO0lBRTdDLE1BQU1nRCxjQUFjO1FBQ2xCO1lBQ0VDLEtBQUs7WUFDTEMsU0FBUztRQUNYO1FBQ0E7WUFDRUQsS0FBSztZQUNMQyxTQUFTO1FBQ1g7UUFDQTtZQUNFRCxLQUFLO1lBQ0xDLFNBQVM7UUFDWDtLQUNEO0lBRUQsTUFBTSxDQUFDQyxpQkFBaUJDLG1CQUFtQixHQUFHcEQsK0NBQVFBLENBQUM7UUFDckQ7WUFBRXFELEtBQUs7WUFBSUMsTUFBTTtZQUFJQyxTQUFTQztRQUFVO0tBQ3pDO0lBRUQsTUFBTUMsUUFBUTtRQUNaQyxRQUFRQyxJQUFJLFlBQVl0QztRQUV4QixJQUFJcUIsT0FBTztRQUNYZ0IsUUFBUUMsSUFBSSxTQUFTL0M7UUFDckJTLEtBQUt1QyxLQUFLO1FBQ1ZqQixTQUFTO0lBQ1g7SUFFQSxNQUFNa0IsYUFBYSxDQUFDQztRQUNsQkosUUFBUUMsSUFBSTtRQUNaZCxhQUFhO1FBQ2JmLGVBQWVnQyxRQUFRakM7SUFDekI7SUFFQSxNQUFNa0MsV0FBVyxDQUFDRDtRQUNoQkosUUFBUUMsSUFBSTtRQUNaZCxhQUFhO1FBQ2JmLGVBQWVnQyxRQUFRakM7UUFDdkJJLGFBQWE7SUFDZjtJQUVBLE1BQU0rQixjQUFjLENBQUNGO1FBS25CSixRQUFRQyxJQUFJLGdCQUFnQi9DLGNBQWNrRCxRQUFRRztRQUNsRGxCLGNBQWM7UUFDZE4sa0JBQWtCO1FBQ2xCTixXQUFXMkIsUUFBUTVCO1FBQ25CRyxTQUFTeUIsUUFBUUcsV0FBVztRQUM1QkMsYUFBYUosUUFBUXhCO0lBQ3ZCO0lBRUEsTUFBTTZCLFlBQVksQ0FBQ0w7UUFLakJKLFFBQVFDLElBQUksY0FBYy9DLGNBQWNrRCxRQUFRTTtRQUNoRFYsUUFBUUMsSUFBSUcsUUFBUU87UUFDcEJ0QixjQUFjO1FBQ2Qsd0JBQXdCO1FBQ3hCTixrQkFBa0I7UUFDbEJXLG1CQUFtQlUsUUFBUU87UUFDM0J2QyxlQUFlZ0MsUUFBUWpDO1FBQ3ZCTyxTQUFTMEIsUUFBUU07SUFDbkI7SUFFQSxNQUFNRSxjQUFjLENBQUNDO1FBQ25CYixRQUFRQyxJQUFJLGlCQUFpQlksa0JBQUFBLG1CQUFBQSxLQUFBQSxJQUFBQSxNQUFPQyxVQUFVLEdBQUc7UUFDakRuRCxLQUFLdUMsS0FBSyxPQUFPVztJQUNuQjtJQUVBLE1BQU1FLFVBQVU7UUFDZCxJQUFJLENBQUNsRCxLQUFLO1FBQ1YsSUFBSSxDQUFDRixNQUFNO1FBQ1hxQyxRQUFRQyxJQUFJLGVBQWVwQztRQUMzQkYsS0FBS3VDLEtBQUssUUFBUXJDO1FBQ2xCLGlGQUFpRjtRQUNqRkMsT0FBTztJQUNUO0lBRUEsTUFBTWtELGFBQWEsQ0FBQ25EO1FBQ2xCLG1DQUFtQztRQUNuQ0UsS0FBS2tELEtBQUtwRDtRQUNWRyxRQUFRRCxLQUFLbUQ7UUFDYmxCLFFBQVFDLElBQUlsQztJQUNkO0lBRUEsb0JBQW9CO0lBQ3BCLHNCQUFzQjtJQUN0QixtQ0FBbUM7SUFDbkMsSUFBSTtJQUNKLGFBQWE7SUFFYjFCLGdEQUFTQSxDQUFDO1FBQ1IsTUFBTThFLEtBQUs3RCxhQUFhOEQsSUFBSSxTQUFTdEI7UUFDckMsTUFBTXVCLGdCQUFnQi9ELGFBQWE4RCxJQUFJLFNBQVM7UUFDaEQ1RCxVQUFVMkQsTUFBTTtRQUNoQnpELFFBQVEyRCxrQkFBa0IsU0FBUyxPQUFPO1FBQzFDckIsUUFBUUMsSUFBSSxNQUFNa0I7UUFDbEJuQixRQUFRQyxJQUFJLGlCQUFpQm9CO1FBQzdCQyxPQUFPSDtRQUVQLFNBQVNJLGNBQWNDLEtBQWdCLEVBQUVILGFBQXNCO1lBQzdEckIsUUFBUUMsSUFBSSxlQUFldUI7WUFFM0I1RCxRQUFRNEQ7WUFFUixJQUFJSCxlQUFlO2dCQUNqQnJCLFFBQVFDLElBQUksV0FBV3VCLE1BQU1MO2dCQUM3QjNELFVBQVVnRSxNQUFNTDtZQUNsQixPQUFPO2dCQUNMLCtCQUErQjtnQkFDL0JNLFdBQVc7b0JBQ1QsSUFBSXpDLE9BQU87b0JBQ1hnQixRQUFRQyxJQUFJLGNBQWMvQztvQkFDMUJzRSxNQUFNdEIsS0FBSztvQkFDWGpCLFNBQVM7Z0JBQ1gsR0FBRztZQUNMO1lBRUF1QyxNQUFNRSxVQUFVLGNBQWMsQ0FBQ3RCLFVBQWlCRCxXQUFXQztZQUUzRG9CLE1BQU1FLFVBQVUsWUFBWSxDQUFDdEIsVUFBaUJDLFNBQVNEO1lBRXZEb0IsTUFBTUUsVUFDSixlQUNBLENBQUN0QjtnQkFDQ0UsWUFBWUY7WUFDZDtZQUdGb0IsTUFBTUUsVUFBVSxhQUFhLENBQUN0QjtnQkFDNUJLLFVBQVVMO1lBQ1o7WUFFQW9CLE1BQU1FLFVBQVUsUUFBUSxDQUFDN0Q7Z0JBQ3ZCbUQsV0FBV25EO1lBQ2I7UUFDRjtRQUVBLFNBQVN5RCxPQUFPSCxFQUFXO1lBQ3pCLElBQUlBLElBQUk7Z0JBQ04zRSxpREFBSUEsQ0FBQ21GLE9BQ0ZDLFNBQVNULElBQ1RVLEtBQUssQ0FBQ0w7b0JBQ0xELGNBQWNDLE9BQU87Z0JBRXJCLGtCQUFrQjtnQkFDbEIscUNBQXFDO2dCQUN2QyxHQUNDTSxNQUFNLENBQUNDO29CQUNOQyxNQUFNO29CQUNOaEMsUUFBUUMsSUFBSSxjQUFjOEI7Z0JBQzVCO1lBQ0osT0FBTztnQkFDTHZGLGlEQUFJQSxDQUFDbUYsT0FDRk0sYUFBYSxXQUFXO29CQUN2QmhFLFVBQVVpRSxhQUFhQyxRQUFRO2dCQUNqQyxHQUNDTixLQUFLLENBQUNMO29CQUNMLE1BQU1ZLFFBQVE5RSxhQUFhOEQsSUFBSSxVQUFVLFVBQVU7b0JBQ25EcEIsUUFBUUMsSUFBSSxTQUFTbUM7b0JBQ3JCYixjQUFjQyxPQUFPWTtnQkFDckIsK0NBQStDO2dCQUMvQyxtQ0FBbUM7Z0JBQ25DLE1BQU07Z0JBQ04sd0NBQXdDO2dCQUMxQyxHQUNDTixNQUFNLENBQUNDO29CQUNOQyxNQUFNO29CQUNOaEMsUUFBUUMsSUFBSSxjQUFjOEI7Z0JBQzVCO1lBQ0o7UUFDRjtRQUVBLDBDQUEwQztRQUMxQyx5Q0FBeUM7UUFDekMsMkNBQTJDO1FBRTNDLHlCQUF5QjtRQUN6QiwwQkFBMEI7UUFDMUIsSUFBSTtRQUVKLDRCQUE0QjtRQUM1QiwyQkFBMkI7UUFDM0IsSUFBSTtRQUVKLGtDQUFrQztRQUNsQyxtQkFBbUI7UUFDbkIsSUFBSTtRQUVKLHFDQUFxQztRQUNyQyw4QkFBOEI7UUFDOUIsdUJBQXVCO1FBQ3ZCLGlDQUFpQztRQUNqQywwQkFBMEI7UUFDMUIsMEJBQTBCO1FBQzFCLDZCQUE2QjtRQUM3QixJQUFJO1FBRUosbUNBQW1DO1FBQ25DLDRCQUE0QjtRQUM1QixvQkFBb0I7UUFDcEIsc0RBQXNEO1FBQ3RELDZCQUE2QjtRQUM3Qiw2Q0FBNkM7UUFDN0MsK0RBQStEO1FBQy9ELFdBQVc7UUFFWCwrQkFBK0I7UUFDL0Isd0JBQXdCO1FBRXhCLHdDQUF3QztRQUN4QyxJQUFJO1FBRUosc0NBQXNDO1FBQ3RDLDBCQUEwQjtRQUMxQixJQUFJO1FBRUosb0NBQW9DO1FBQ3BDLHdCQUF3QjtRQUN4Qix1Q0FBdUM7UUFDdkMsSUFBSTtRQUVKLG1DQUFtQztRQUNuQyx5Q0FBeUM7UUFDekMsdUNBQXVDO1FBQ3ZDLG1DQUFtQztRQUNuQyx5Q0FBeUM7UUFDekMscUNBQXFDO1FBQ3JDLDJDQUEyQztRQUUzQyxhQUFhO1FBRWIsT0FBTztRQUNMLG9DQUFvQztRQUNwQywwQ0FBMEM7UUFDMUMsd0NBQXdDO1FBQ3hDLG9DQUFvQztRQUNwQywwQ0FBMEM7UUFDMUMsc0NBQXNDO1FBQ3RDLDRDQUE0QztRQUM5QztJQUNGLEdBQUcsRUFBRTtJQUVMLHVCQUF1QjtJQUN2QixVQUFVO0lBQ1Ysd0JBQXdCO0lBQ3hCLDBFQUEwRTtJQUMxRSxtQ0FBbUM7SUFDbkMsNEJBQTRCO0lBQzVCLG9CQUFvQjtJQUNwQiwyQ0FBMkM7SUFDM0Msd0JBQXdCO0lBQ3hCLE1BQU07SUFDTixJQUFJO0lBRUosMEJBQTBCO0lBQzFCLHlCQUF5QjtJQUN6QiwyQkFBMkI7SUFDM0IsSUFBSTtJQUVKLGVBQWV2QixhQUFhNkIsS0FBYTtRQUN2QyxJQUFLLElBQUlDLElBQUlELE9BQU9DLEtBQUssR0FBR0EsSUFBSztZQUMvQnpELFFBQVF5RDtZQUNSLE1BQU0sSUFBSUMsUUFBUSxDQUFDQyxVQUFZZixXQUFXZSxTQUFTO1FBQ3JEO0lBQ0EscUNBQXFDO0lBQ3JDLHdCQUF3QjtJQUN4QiwrREFBK0Q7SUFDL0QsSUFBSTtJQUNOO0lBRUEsTUFBTSxFQUFFdkUsUUFBUSxFQUFFLEdBQUd2QixnRUFBZ0JBO0lBRXJDLG9DQUFvQztJQUNwQyxvQkFBb0I7SUFDcEIsS0FBSztJQUVMLHdDQUF3QztJQUN4Qyx5QkFBeUI7SUFDekIsS0FBSztJQUVMLHFCQUNFLDhEQUFDK0Y7UUFBSUMsV0FBVTs7MEJBQ2IsOERBQUNEO2dCQUFJQyxXQUFXLEdBQXFCLE9BQWxCdkcsdUxBQWlCdUc7Ozs7OztZQUNuQ3hELGNBQWMsMkJBQ2IsOERBQUN6Qyx5REFBS0E7Z0JBQ0prRyxhQUFhO29CQUFDO29CQUFRO2lCQUFRO2dCQUM5QkMsUUFBUTtnQkFDUkMsYUFBYTtnQkFDYkMsdUJBQ0UsOERBQUNMOzhCQUNFekQsc0JBQ0MsOERBQUN5RDt3QkFBSUMsV0FBVyx5QkFBMkMsT0FBbEJ2Ryx1TEFBaUJ1RztrQ0FBSTtzRUFJOUQsOERBQUNLO3dCQUNDQyxVQUFVLENBQUNyRjt3QkFDWCtFLFdBQVcsK0JBQWlELE9BQWxCdkcsdUxBQWlCdUc7d0JBQzNETyxTQUFTOzRCQUNQbEQ7d0JBQ0Y7a0NBQ0Q7OztnQkFNUG9CLElBQUc7Z0JBQ0grQixTQUFTO2dCQUNUQyxPQUFPOzBCQUVQLDRFQUFDVjtvQkFBSUMsV0FBVTs7c0NBQ2IsOERBQUNVOzRCQUFFVixXQUFVO3NDQUFXOzs7Ozs7c0NBQ3hCLDhEQUFDVTs0QkFBRVYsV0FBVyxhQUErQixPQUFsQnZHLHVMQUFpQnVHO3NDQUFJOzs7Ozs7d0JBRy9DakYsc0JBQ0MsOERBQUMyRjs0QkFBRVYsV0FBVyxhQUErQixPQUFsQnZHLHVMQUFpQnVHOztnQ0FBSTtnQ0FDckM7OENBQ1QsOERBQUNXO29DQUNDSixTQUFTO3dDQUNQSyxVQUFVQyxVQUFVQyxVQUFVakc7b0NBQ2hDO29DQUNBbUYsV0FBVywyQ0FBNkQsT0FBbEJ2Ryx1TEFBaUJ1Rzs4Q0FFdEVuRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7WUFRWjJCLGNBQWMseUJBQ2IsOERBQUN6Qyx5REFBS0E7Z0JBQ0prRyxhQUFhO29CQUFDO29CQUFRO2lCQUFRO2dCQUM5QkMsUUFBUTtnQkFDUkMsYUFBYTtnQkFDYjFCLElBQUc7Z0JBQ0grQixTQUFTO2dCQUNUQyxPQUFPOzBCQUVQLDRFQUFDckcsb0VBQVdBO29CQUFDMkcsTUFBTXRGOzs7Ozs7Ozs7OztZQUl0QmlCLGVBQWUseUJBQ2QsOERBQUMzQyx5REFBS0E7Z0JBQ0ptRyxRQUFRO2dCQUNSQyxhQUFhO2dCQUNiMUIsSUFBSTtnQkFDSmdDLE9BQU87Z0JBQ1BELFNBQVM7MEJBRVQsNEVBQUN2Ryw2REFBU0E7b0JBQUM4RyxNQUFNaEU7b0JBQWlCakIsU0FBU0E7Ozs7Ozs7Ozs7OzBCQUkvQyw4REFBQ2lFO2dCQUFJQyxXQUFVOzs7Ozs7MEJBSWYsOERBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0Q7d0JBQUlDLFdBQVcsV0FBMEIsT0FBZnhHLHVLQUFjd0c7OzRCQUFJOzRCQUNwQzswQ0FDUCw4REFBQ1c7Z0NBQUtYLFdBQVcsMkJBQTBDLE9BQWZ4Ryx1S0FBY3dHOzBDQUN2RGxFLFdBQVc7Ozs7Ozs7Ozs7OztrQ0FHaEIsOERBQUNpRTt3QkFBSUMsV0FBVyxXQUE2QixPQUFsQnZHLHVMQUFpQnVHOzswQ0FJMUM7NEJBQ0M5RDs0QkFBSzs7Ozs7Ozs7Ozs7OzswQkFJViw4REFBQzZEO2dCQUNDQyxXQUFXLG9EQUFzRSxPQUFsQnZHLHVMQUFpQnVHLEVBQUM7O2tDQUVqRiw4REFBQ0Q7OzRCQUFJOzRCQUFRcEU7Ozs7Ozs7a0NBQ2IsOERBQUNvRTs7NEJBQUk7NEJBQVFyRjs7Ozs7Ozs7Ozs7OzswQkFHZiw4REFBQ3FGO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQzlGLGdFQUFPQTt3QkFBQ2dFLGFBQWFBO3dCQUFhOEMsV0FBVzVFOzs7Ozs7a0NBQzlDLDhEQUFDMkQ7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDaUI7Z0NBQ0NqQixXQUNFLGFBQWMsS0FBSyx3QkFBdUMsT0FBZnhHLHVLQUFjd0csS0FDekQsYUFBNEIsT0FBZnhHLHVLQUFjd0c7Z0NBRTdCTyxTQUFTLElBQU0xRSxhQUFhOzBDQUM3Qjs7Ozs7OzBDQUdELDhEQUFDb0Y7Z0NBQ0NqQixXQUNFLGFBQWMsS0FBSyx3QkFBdUMsT0FBZnhHLHVLQUFjd0csS0FDekQsYUFBNEIsT0FBZnhHLHVLQUFjd0c7Z0NBRTdCTyxTQUFTLElBQU0xRSxhQUFhOzBDQUM3Qjs7Ozs7Ozs7Ozs7O2tDQUlILDhEQUFDa0U7d0JBQUlDLFdBQVU7OzRCQUNacEUsYUFBYSxtQkFDWiw4REFBQ3pCLDZEQUFJQTtnQ0FBQ2dCLEtBQUtBO2dDQUFLRSxNQUFNQTtnQ0FBTUQsUUFBUUE7Z0NBQVFpRCxTQUFTQTs7Ozs7OzRCQUV0RHpDLGFBQWEsbUJBQUssOERBQUN4QixvRUFBV0E7Z0NBQUMyRyxNQUFNdEY7Ozs7Ozs7Ozs7Ozs7Ozs7OztZQUl6QyxNQUFFLGtCQUNEOzs7Ozs7O0FBUVI7R0FsZE1kOztRQUVpQmQsNERBQWVBO1FBc1RmRyw0REFBZ0JBOzs7QUE0SnZDLCtEQUFlVyxJQUFJQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9nL3BhZ2UudHN4P2IxMWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7IHVzZVJvdXRlciwgdXNlU2VhcmNoUGFyYW1zIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xuXG5pbXBvcnQgY29seSBmcm9tIFwiQC9saWIvY29seVwiO1xuXG4vLyBpbXBvcnQgVGFiTWFuYWdlciBmcm9tIFwiLi4vY29tcG9uZW50cy9UYWJNYW5hZ2VyXCI7XG5cbi8vIExvZ2ljYWwgY29tcG9uZW50c1xuLy8gaW1wb3J0IHsgdXNlR2xvYmFsQ29udGV4dCB9IGZyb20gXCIuLi9Db250ZXh0L3N0b3JlXCI7XG4vLyBpbXBvcnQgdXNlR2FtZVN0YXRlIGZyb20gXCIuLi9jb21wb25lbnRzL3VzZUdhbWVTdGF0ZVwiO1xuXG5pbXBvcnQgTW9kYWwgZnJvbSBcIi4uL2NvbXBvbmVudHMvTW9kYWxcIjtcbmltcG9ydCB7IHVzZUdsb2JhbENvbnRleHQgfSBmcm9tIFwiLi4vQ29udGV4dC9zdG9yZVwiO1xuaW1wb3J0IEltZ1NsaWRlciBmcm9tIFwiLi4vY29tcG9uZW50cy9JbWdTbGlkZXJcIjtcbmltcG9ydCB7IEJ1bmdlZSwgUG9wcGlucyB9IGZyb20gXCJuZXh0L2ZvbnQvZ29vZ2xlXCI7XG5pbXBvcnQgeyBSb29tIH0gZnJvbSBcImNvbHlzZXVzLmpzXCI7XG5pbXBvcnQgQ2FwdHVyZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Sb29tL0NhcHR1cmVcIjtcbmltcG9ydCBDaGF0IGZyb20gXCIuLi9jb21wb25lbnRzL1Jvb20vQ2hhdFwiO1xuaW1wb3J0IExlYWRlcmJvYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL1Jvb20vTGVhZGVyYm9hcmRcIjtcblxuY29uc3QgZm9udCA9IEJ1bmdlZSh7XG4gIHdlaWdodDogXCI0MDBcIixcbiAgc3Vic2V0czogW1wibGF0aW5cIl0sXG59KTtcblxuY29uc3QgcG9wcGlucyA9IFBvcHBpbnMoe1xuICB3ZWlnaHQ6IFtcIjQwMFwiLCBcIjUwMFwiLCBcIjYwMFwiLCBcIjcwMFwiXSxcbiAgc3Vic2V0czogW1wibGF0aW5cIl0sXG59KTtcblxuY29uc3QgcHJldlRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcblxuY29uc3QgZ2V0Q3VyVGltZSA9ICgpID0+IHtcbiAgcmV0dXJuIE1hdGgucm91bmQoKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gcHJldlRpbWUpIC8gNjAwKTtcbn07XG5cbmNvbnN0IHBhZ2UgPSAoKSA9PiB7XG4gIC8vIE11bHRpcGxheWVyXG4gIGNvbnN0IHNlYXJjaFBhcmFtcyA9IHVzZVNlYXJjaFBhcmFtcygpO1xuICBjb25zdCBbcm9vbUlkLCBzZXRSb29tSWRdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtpc1JDLCBzZXRJc1JDXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCBbcm9vbSwgc2V0Um9vbV0gPSB1c2VTdGF0ZSh7fSBhcyBSb29tPGFueT4pO1xuXG4gIC8vIENoYXRcbiAgY29uc3QgW21zZywgc2V0TXNnXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBbbXNncywgc2V0TXNnc10gPSB1c2VTdGF0ZShbeyB1c2VybmFtZTogXCJcIiwgbWVzc2FnZTogXCJcIiB9XSk7XG5cbiAgLy8gTGVhZGVyYm9hcmRcbiAgY29uc3QgW2xlYWRlcmJvYXJkLCBzZXRMZWFkZXJib2FyZF0gPSB1c2VTdGF0ZShbeyB1c2VybmFtZTogXCJcIiwgc2NvcmU6IDAgfV0pO1xuXG4gIC8vIFRhYiBNYW5hZ2VyXG4gIGNvbnN0IFthY3RpdmVUYWIsIHNldEFjdGl2ZVRhYl0gPSB1c2VTdGF0ZSgwKTtcblxuICAvLyBjb25zdCBbcGxheWVycywgc2V0UGxheWVyc10gPSB1c2VTdGF0ZShbXCJcIl0pO1xuXG4gIGNvbnN0IFtvYmpuYW1lLCBzZXRPYmpuYW1lXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBbc2NvcmUsIHNldFNjb3JlXSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBbcm91bmQsIHNldFJvdW5kXSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBbdGltZSwgc2V0VGltZV0gPSB1c2VTdGF0ZSgwKTtcblxuICBjb25zdCBbY2FuUmV0YWtlSW1hZ2UsIHNldENhblJldGFrZUltYWdlXSA9IHVzZVN0YXRlKHRydWUpO1xuXG4gIC8vIGNvbnN0IFtteUlkLCBzZXRNeUlkXSA9IHVzZVN0YXRlKFwiXCIpO1xuXG4gIGNvbnN0IFtyZWFkeSwgc2V0UmVhZHldID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IFtnYW1lU3RhdGUsIHNldEdhbWVTdGF0ZV0gPSB1c2VTdGF0ZShcInN0YXJ0ZWRcIik7XG4gIC8vIGNvbnN0IFtnYW1lU3RhdGUsIHNldEdhbWVTdGF0ZV0gPSB1c2VTdGF0ZShcIndhaXRpbmdcIik7XG5cbiAgY29uc3QgW3JvdW5kU3RhdGUsIHNldFJvdW5kU3RhdGVdID0gdXNlU3RhdGUoXCJcIik7XG5cbiAgY29uc3Qgc2xpZGVJbWFnZXMgPSBbXG4gICAge1xuICAgICAgdXJsOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTA5NzIxNDM0MjcyLWI3OTE0N2UwZTcwOD9peGxpYj1yYi0xLjIuMSZpeGlkPWV5SmhjSEJmYVdRaU9qRXlNRGQ5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MTUwMCZxPTgwXCIsXG4gICAgICBjYXB0aW9uOiBcIlBsYXllciAxXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICB1cmw6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE1MDY3MTA1MDc1NjUtMjAzYjlmMjQ2NjliP2l4bGliPXJiLTEuMi4xJml4aWQ9ZXlKaGNIQmZhV1FpT2pFeU1EZDkmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz0xNTM2JnE9ODBcIixcbiAgICAgIGNhcHRpb246IFwiUGxheWVyIDJcIixcbiAgICB9LFxuICAgIHtcbiAgICAgIHVybDogXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTUzNjk4NzMzMzcwNi1mYzlhZGZiMTBkOTE/aXhsaWI9cmItMS4yLjEmaXhpZD1leUpoY0hCZmFXUWlPakV5TURkOSZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTE1MDAmcT04MFwiLFxuICAgICAgY2FwdGlvbjogXCJQbGF5ZXIgM1wiLFxuICAgIH0sXG4gIF07XG5cbiAgY29uc3QgW3BsYXllcnNSZXNwb25zZSwgc2V0UGxheWVyc1Jlc3BvbnNlXSA9IHVzZVN0YXRlKFtcbiAgICB7IGltZzogXCJcIiwgbmFtZTogXCJcIiwgbWF0Y2hlZDogdW5kZWZpbmVkIH0sXG4gIF0pO1xuXG4gIGNvbnN0IFJlYWR5ID0gKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiUk9PTSBPQkpcIiwgcm9vbSk7XG5cbiAgICBpZiAocmVhZHkpIHJldHVybjtcbiAgICBjb25zb2xlLmxvZyhcIlJlYWR5XCIsIGdldEN1clRpbWUoKSk7XG4gICAgcm9vbS5zZW5kKFwicmVhZHlcIik7XG4gICAgc2V0UmVhZHkodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgR2FtZVN0YXJ0cyA9IChwYXlsb2FkOiBhbnkpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIkdhbWUgU3RhcnRzXCIpO1xuICAgIHNldEdhbWVTdGF0ZShcInN0YXJ0ZWRcIik7XG4gICAgc2V0TGVhZGVyYm9hcmQocGF5bG9hZC5sZWFkZXJib2FyZCk7XG4gIH07XG5cbiAgY29uc3QgR2FtZUVuZHMgPSAocGF5bG9hZDogYW55KSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJHYW1lIEVuZHNcIik7XG4gICAgc2V0R2FtZVN0YXRlKFwiZW5kZWRcIik7XG4gICAgc2V0TGVhZGVyYm9hcmQocGF5bG9hZC5sZWFkZXJib2FyZCk7XG4gICAgc2V0QWN0aXZlVGFiKDEpO1xuICB9O1xuXG4gIGNvbnN0IFJvdW5kU3RhcnRzID0gKHBheWxvYWQ6IHtcbiAgICBjdXJSb3VuZDogbnVtYmVyO1xuICAgIG9iam5hbWU6IHN0cmluZztcbiAgICB0aW1lOiBudW1iZXI7XG4gIH0pID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIlJvdW5kIFN0YXJ0c1wiLCBnZXRDdXJUaW1lKCksIHBheWxvYWQuY3VyUm91bmQpO1xuICAgIHNldFJvdW5kU3RhdGUoXCJzdGFydGVkXCIpO1xuICAgIHNldENhblJldGFrZUltYWdlKHRydWUpO1xuICAgIHNldE9iam5hbWUocGF5bG9hZC5vYmpuYW1lKTtcbiAgICBzZXRSb3VuZChwYXlsb2FkLmN1clJvdW5kICsgMSk7XG4gICAgc3RhcnRDb3VudGVyKHBheWxvYWQudGltZSk7XG4gIH07XG5cbiAgY29uc3QgUm91bmRFbmRzID0gKHBheWxvYWQ6IHtcbiAgICBsZWFkZXJib2FyZDogYW55O1xuICAgIGltZ3M6IGFueTtcbiAgICBjdXJTY29yZTogbnVtYmVyO1xuICB9KSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJSb3VuZCBFbmRzXCIsIGdldEN1clRpbWUoKSwgcGF5bG9hZC5jdXJTY29yZSk7XG4gICAgY29uc29sZS5sb2cocGF5bG9hZC5pbWdzKTtcbiAgICBzZXRSb3VuZFN0YXRlKFwiZW5kZWRcIik7XG4gICAgLy8gY29uc29sZS5sb2cocGF5bG9hZCk7XG4gICAgc2V0Q2FuUmV0YWtlSW1hZ2UoZmFsc2UpO1xuICAgIHNldFBsYXllcnNSZXNwb25zZShwYXlsb2FkLmltZ3MpO1xuICAgIHNldExlYWRlcmJvYXJkKHBheWxvYWQubGVhZGVyYm9hcmQpO1xuICAgIHNldFNjb3JlKHBheWxvYWQuY3VyU2NvcmUpO1xuICB9O1xuXG4gIGNvbnN0IHN1Ym1pdEltYWdlID0gKGltYWdlPzogc3RyaW5nKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJTZW5kaW5nIGltYWdlXCIsIGltYWdlPy5zdWJzdHJpbmcoMCwgMykpO1xuICAgIHJvb20uc2VuZChcImltZ1wiLCBpbWFnZSk7XG4gIH07XG5cbiAgY29uc3Qgc2VuZE1zZyA9ICgpID0+IHtcbiAgICBpZiAoIW1zZykgcmV0dXJuO1xuICAgIGlmICghcm9vbSkgcmV0dXJuO1xuICAgIGNvbnNvbGUubG9nKFwiU2VuZGluZyBtc2dcIiwgbXNnKTtcbiAgICByb29tLnNlbmQoXCJjaGF0XCIsIG1zZyk7XG4gICAgLy8gcm9vbS5zZW5kKFwiY2hhdFwiLCB7dXNlcm5hbWU6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidXNlcm5hbWVcIiksIG1lc3NhZ2U6IG1zZ30pO1xuICAgIHNldE1zZyhcIlwiKTtcbiAgfTtcblxuICBjb25zdCBhcHBlbmRNc2dzID0gKG1zZzogeyB1c2VybmFtZTogc3RyaW5nOyBtZXNzYWdlOiBzdHJpbmcgfSkgPT4ge1xuICAgIC8vIGFwcGVuZCBtc2cgdG8gbXNncyB1c2luZyBzZXRNc2dzXG4gICAgbXNncy5wdXNoKG1zZyk7XG4gICAgc2V0TXNncyhtc2dzLnNsaWNlKCkpO1xuICAgIGNvbnNvbGUubG9nKG1zZ3MpO1xuICB9O1xuXG4gIC8vIHVzZUVmZmVjdCgoKSA9PiB7XG4gIC8vICAgcm91dGVyLnJlZnJlc2goKTtcbiAgLy8gICBjb25zb2xlLmxvZyhcIlJPVVRFUiBSRUZSRVNIXCIpO1xuICAvLyB9XG4gIC8vICwgW21zZ3NdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGlkID0gc2VhcmNoUGFyYW1zLmdldChcImlkXCIpIHx8IHVuZGVmaW5lZDtcbiAgICBjb25zdCBpc1Jvb21DcmVhdG9yID0gc2VhcmNoUGFyYW1zLmdldChcInJjXCIpIHx8IGZhbHNlO1xuICAgIHNldFJvb21JZChpZCB8fCBcIlwiKTtcbiAgICBzZXRJc1JDKGlzUm9vbUNyZWF0b3IgPT09IFwidHJ1ZVwiID8gdHJ1ZSA6IGZhbHNlKTtcbiAgICBjb25zb2xlLmxvZyhcIklEXCIsIGlkKTtcbiAgICBjb25zb2xlLmxvZyhcImlzUm9vbUNyZWF0b3JcIiwgaXNSb29tQ3JlYXRvcik7XG4gICAgb25Kb2luKGlkKTtcblxuICAgIGZ1bmN0aW9uIEdhbWVwbGF5U2V0dXAoX3Jvb206IFJvb208YW55PiwgaXNSb29tQ3JlYXRvcjogYm9vbGVhbikge1xuICAgICAgY29uc29sZS5sb2coXCJKT0lORUQgUk9PTVwiLCBfcm9vbSk7XG5cbiAgICAgIHNldFJvb20oX3Jvb20pO1xuXG4gICAgICBpZiAoaXNSb29tQ3JlYXRvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlJPT00gSURcIiwgX3Jvb20uaWQpO1xuICAgICAgICBzZXRSb29tSWQoX3Jvb20uaWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gY2FsbCBSZWFkeSgpIGFmdGVyIDUgc2Vjb25kc1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBpZiAocmVhZHkpIHJldHVybjtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkFVVE8gUkVBRFlcIiwgZ2V0Q3VyVGltZSgpKTtcbiAgICAgICAgICBfcm9vbS5zZW5kKFwicmVhZHlcIik7XG4gICAgICAgICAgc2V0UmVhZHkodHJ1ZSk7XG4gICAgICAgIH0sIDUwMDApO1xuICAgICAgfVxuXG4gICAgICBfcm9vbS5vbk1lc3NhZ2UoXCJnYW1lU3RhcnRzXCIsIChwYXlsb2FkOiBhbnkpID0+IEdhbWVTdGFydHMocGF5bG9hZCkpO1xuXG4gICAgICBfcm9vbS5vbk1lc3NhZ2UoXCJnYW1lRW5kc1wiLCAocGF5bG9hZDogYW55KSA9PiBHYW1lRW5kcyhwYXlsb2FkKSk7XG5cbiAgICAgIF9yb29tLm9uTWVzc2FnZShcbiAgICAgICAgXCJyb3VuZFN0YXJ0c1wiLFxuICAgICAgICAocGF5bG9hZDogeyBjdXJSb3VuZDogbnVtYmVyOyBvYmpuYW1lOiBzdHJpbmc7IHRpbWU6IG51bWJlciB9KSA9PiB7XG4gICAgICAgICAgUm91bmRTdGFydHMocGF5bG9hZCk7XG4gICAgICAgIH1cbiAgICAgICk7XG5cbiAgICAgIF9yb29tLm9uTWVzc2FnZShcInJvdW5kRW5kc1wiLCAocGF5bG9hZDogYW55KSA9PiB7XG4gICAgICAgIFJvdW5kRW5kcyhwYXlsb2FkKTtcbiAgICAgIH0pO1xuXG4gICAgICBfcm9vbS5vbk1lc3NhZ2UoXCJjaGF0XCIsIChtc2c6IHsgdXNlcm5hbWU6IHN0cmluZzsgbWVzc2FnZTogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgYXBwZW5kTXNncyhtc2cpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25Kb2luKGlkPzogc3RyaW5nKSB7XG4gICAgICBpZiAoaWQpIHtcbiAgICAgICAgY29seS5jbGllbnRcbiAgICAgICAgICAuam9pbkJ5SWQoaWQpXG4gICAgICAgICAgLnRoZW4oKF9yb29tKSA9PiB7XG4gICAgICAgICAgICBHYW1lcGxheVNldHVwKF9yb29tLCBmYWxzZSk7XG5cbiAgICAgICAgICAgIC8vIHNldFJvb20oX3Jvb20pO1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJKT0lORUQgUk9PTVwiLCBfcm9vbSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAgIGFsZXJ0KFwiRXJyb3I6IGpvaW5pbmcgcm9vbSwgdHJ5IGFnYWluIHdpdGggdmFsaWQgcm9vbSBpZFwiKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiSk9JTiBFUlJPUlwiLCBlKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbHkuY2xpZW50XG4gICAgICAgICAgLmpvaW5PckNyZWF0ZShcIm15X3Jvb21cIiwge1xuICAgICAgICAgICAgdXNlcm5hbWU6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidXNlcm5hbWVcIiksXG4gICAgICAgICAgfSlcbiAgICAgICAgICAudGhlbigoX3Jvb20pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IF9pc1JDID0gc2VhcmNoUGFyYW1zLmdldChcInJjXCIpID09PSBcInRydWVcIiB8fCBmYWxzZTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiSVMgUkNcIiwgX2lzUkMpO1xuICAgICAgICAgICAgR2FtZXBsYXlTZXR1cChfcm9vbSwgX2lzUkMpO1xuICAgICAgICAgICAgLy8gcm9vbS5vbk1lc3NhZ2UoXCJpbWdcIiwgKG1lc3NhZ2U6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgLy8gICBjb25zb2xlLmxvZyhcIklNRyBcIiArIG1lc3NhZ2UpO1xuICAgICAgICAgICAgLy8gfSk7XG4gICAgICAgICAgICAvLyByb29tLm9uTWVzc2FnZShcInJlYWR5XCIsIE9uUmVhZHlNc2dzKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgYWxlcnQoXCJFcnJvcjogam9pbmluZyByb29tLCB0cnkgYWdhaW4gd2l0aCB2YWxpZCByb29tIGlkXCIpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJKT0lOIEVSUk9SXCIsIGUpO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGZ1bmN0aW9uIE9uQ2hhdE1zZ3MobWVzc2FnZTogc3RyaW5nKSB7fVxuICAgIC8vIGZ1bmN0aW9uIE9uSW1nTXNncyhtZXNzYWdlOiBzdHJpbmcpIHt9XG4gICAgLy8gZnVuY3Rpb24gT25SZWFkeU1zZ3MobWVzc2FnZTogc3RyaW5nKSB7fVxuXG4gICAgLy8gZnVuY3Rpb24gb25Db25uZWN0KCkge1xuICAgIC8vICAgc2V0SXNDb25uZWN0ZWQodHJ1ZSk7XG4gICAgLy8gfVxuXG4gICAgLy8gZnVuY3Rpb24gb25EaXNjb25uZWN0KCkge1xuICAgIC8vICAgc2V0SXNDb25uZWN0ZWQoZmFsc2UpO1xuICAgIC8vIH1cblxuICAgIC8vIGZ1bmN0aW9uIG9uTWVzc2FnZShkYXRhOiBhbnkpIHtcbiAgICAvLyAgIHNldE1zZ3MoZGF0YSk7XG4gICAgLy8gfVxuXG4gICAgLy8gZnVuY3Rpb24gb25Sb3VuZFN0YXJ0KGRhdGE6IGFueSkge1xuICAgIC8vICAgc2V0Um91bmRTdGF0ZShcInN0YXJ0ZWRcIik7XG4gICAgLy8gICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAvLyAgIHNldE9iam5hbWUoZGF0YS5vYmplY3RuYW1lKTtcbiAgICAvLyAgIHNldFNjb3JlKGRhdGEuc2NvcmUpO1xuICAgIC8vICAgc2V0Um91bmQoZGF0YS5yb3VuZCk7XG4gICAgLy8gICBzdGFydENvdW50ZXIoZGF0YS50aW1lKTtcbiAgICAvLyB9XG5cbiAgICAvLyBmdW5jdGlvbiBvblJvdW5kRW5kKGRhdGE6IGFueSkge1xuICAgIC8vICAgc2V0Um91bmRTdGF0ZShcImVuZGVkXCIpO1xuICAgIC8vICAgdGFiU3RhdGVbMV0oMSk7XG4gICAgLy8gICBsZXQgcGxheWVyc19yZXM6IHsgbmFtZTogYW55OyBkYXRhOiBhbnkgfVtdID0gW107XG4gICAgLy8gICBjb25zdCBkYXRhYSA9IGRhdGEuZGF0YTtcbiAgICAvLyAgIC8vIE9iamVjdC5rZXlzKGRhdGFhKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAvLyAgIC8vICAgLy8gcGxheWVyc19yZXMucHVzaCh7IG5hbWU6IGtleSwgZGF0YTogZGF0YWFba2V5XSB9KTtcbiAgICAvLyAgIC8vIH0pO1xuXG4gICAgLy8gICBzZXRQbGF5ZXJzUmVzcG9uc2UoZGF0YWEpO1xuICAgIC8vICAgY29uc29sZS5sb2coZGF0YWEpO1xuXG4gICAgLy8gICAvLyBzZXRQbGF5ZXJzUmVzcG9uc2UocGxheWVyc19yZXMpO1xuICAgIC8vIH1cblxuICAgIC8vIGZ1bmN0aW9uIG9uTGVhZGVyYm9hcmQoZGF0YTogYW55KSB7XG4gICAgLy8gICBzZXRMZWFkZXJib2FyZChkYXRhKTtcbiAgICAvLyB9XG5cbiAgICAvLyBmdW5jdGlvbiBvbkdhbWVTdGF0ZShkYXRhOiBhbnkpIHtcbiAgICAvLyAgIHNldEdhbWVTdGF0ZShkYXRhKTtcbiAgICAvLyAgIGNvbnNvbGUubG9nKFwiR2FtZSBTdGF0ZTogXCIsIGRhdGEpO1xuICAgIC8vIH1cblxuICAgIC8vIHNvY2tldC5vbihcImNvbm5lY3RcIiwgb25Db25uZWN0KTtcbiAgICAvLyBzb2NrZXQub24oXCJkaXNjb25uZWN0XCIsIG9uRGlzY29ubmVjdCk7XG4gICAgLy8gc29ja2V0Lm9uKFwiZ2FtZXN0YXRlXCIsIG9uR2FtZVN0YXRlKTtcbiAgICAvLyBzb2NrZXQub24oXCJtZXNzYWdlXCIsIG9uTWVzc2FnZSk7XG4gICAgLy8gc29ja2V0Lm9uKFwicm91bmRzdGFydFwiLCBvblJvdW5kU3RhcnQpO1xuICAgIC8vIHNvY2tldC5vbihcInJvdW5kZW5kXCIsIG9uUm91bmRFbmQpO1xuICAgIC8vIHNvY2tldC5vbihcImxlYWRlcmJvYXJkXCIsIG9uTGVhZGVyYm9hcmQpO1xuXG4gICAgLy8gY29ubmVjdCgpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIC8vIHNvY2tldC5vZmYoXCJjb25uZWN0XCIsIG9uQ29ubmVjdCk7XG4gICAgICAvLyBzb2NrZXQub2ZmKFwiZGlzY29ubmVjdFwiLCBvbkRpc2Nvbm5lY3QpO1xuICAgICAgLy8gc29ja2V0Lm9mZihcImdhbWVzdGF0ZVwiLCBvbkdhbWVTdGF0ZSk7XG4gICAgICAvLyBzb2NrZXQub2ZmKFwibWVzc2FnZVwiLCBvbk1lc3NhZ2UpO1xuICAgICAgLy8gc29ja2V0Lm9mZihcInJvdW5kc3RhcnRcIiwgb25Sb3VuZFN0YXJ0KTtcbiAgICAgIC8vIHNvY2tldC5vZmYoXCJyb3VuZGVuZFwiLCBvblJvdW5kRW5kKTtcbiAgICAgIC8vIHNvY2tldC5vZmYoXCJsZWFkZXJib2FyZFwiLCBvbkxlYWRlcmJvYXJkKTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgLy8gZnVuY3Rpb24gY29ubmVjdCgpIHtcbiAgLy8gICB0cnkge1xuICAvLyAgICAgc29ja2V0LmNvbm5lY3QoKTtcbiAgLy8gICAgIHNvY2tldC5lbWl0KFwiam9pblwiLCBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJuYW1lXCIpIHx8IFwidW5rbm93blwiKTtcbiAgLy8gICAgIHNvY2tldC5lbWl0KFwicmVhZHlcIiwgcmVhZHkpO1xuICAvLyAgICAgc2V0SXNDb25uZWN0ZWQodHJ1ZSk7XG4gIC8vICAgfSBjYXRjaCAoZXJyKSB7XG4gIC8vICAgICBhbGVydChcIkVycm9yIGNvbm5lY3RpbmcgdG8gc2VydmVyXCIpO1xuICAvLyAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgLy8gICB9XG4gIC8vIH1cblxuICAvLyBmdW5jdGlvbiBkaXNjb25uZWN0KCkge1xuICAvLyAgIHNvY2tldC5kaXNjb25uZWN0KCk7XG4gIC8vICAgc2V0SXNDb25uZWN0ZWQoZmFsc2UpO1xuICAvLyB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gc3RhcnRDb3VudGVyKGRlbGF5OiBudW1iZXIpIHtcbiAgICBmb3IgKGxldCBpID0gZGVsYXk7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBzZXRUaW1lKGkpO1xuICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwMCkpO1xuICAgIH1cbiAgICAvLyBmb3IgKGxldCBpID0gMDsgaSA8PSBkZWxheTsgaSsrKSB7XG4gICAgLy8gICBzZXRUaW1lKGRlbGF5IC0gaSk7XG4gICAgLy8gICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKSk7XG4gICAgLy8gfVxuICB9XG5cbiAgY29uc3QgeyB1c2VybmFtZSB9ID0gdXNlR2xvYmFsQ29udGV4dCgpO1xuXG4gIC8vIGNvbnN0IHNldE1zZyA9IChtc2c6IHN0cmluZykgPT4ge1xuICAvLyAgIHVwZGF0ZU1zZyhtc2cpO1xuICAvLyB9O1xuXG4gIC8vIGNvbnN0IHNldE1zZ3MgPSAobXNnczogc3RyaW5nW10pID0+IHtcbiAgLy8gICAvLyB1cGRhdGVNc2dzKG1zZ3MpO1xuICAvLyB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJyZWxhdGl2ZSBoLWZ1bGxcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtgJHtwb3BwaW5zLmNsYXNzTmFtZX1gfT48L2Rpdj5cbiAgICAgIHtnYW1lU3RhdGUgPT09IFwid2FpdGluZ1wiICYmIChcbiAgICAgICAgPE1vZGFsXG4gICAgICAgICAgY3VzdG9tQ2xvc2U9e1tcIlF1aXRcIiwgXCIvbWVudVwiXX1cbiAgICAgICAgICBlbmFibGU9e3RydWV9XG4gICAgICAgICAgZGVmYXVsdE9wZW49e3RydWV9XG4gICAgICAgICAgYWN0aW9ucz17XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICB7cmVhZHkgPyAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Bmb250LXNlbWlib2xkIHRleHQtbGcgJHtwb3BwaW5zLmNsYXNzTmFtZX1gfT5cbiAgICAgICAgICAgICAgICAgIFdhaXQgZm9yIG90aGVyc1xuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXshcm9vbX1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGJ0biBidG4tc2Vjb25kYXJ5IGZvbnQtYm9sZCAke3BvcHBpbnMuY2xhc3NOYW1lfWB9XG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIFJlYWR5KCk7XG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIFJlYWR5XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB9XG4gICAgICAgICAgaWQ9XCJhXCJcbiAgICAgICAgICBidG5uYW1lPXtcIkxPTFwifVxuICAgICAgICAgIHRpdGxlPXtcIk9iamVjdCBIdW50XCJ9XG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgZ2FwLTJcIj5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtMnhsXCI+QXJlIHlvdSByZWFkeSB0byBQbGF5PzwvcD5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT17YGZvbnQtYm9sZCAke3BvcHBpbnMuY2xhc3NOYW1lfWB9PlxuICAgICAgICAgICAgICBDbGljayBvbiB0aGUgYmVsb3cgYnV0dG9uIGFuZCB3YWl0IGZvciB0aGUgb3RoZXIgcGxheWVyc1xuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAge2lzUkMgJiYgKFxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9e2Bmb250LWJvbGQgJHtwb3BwaW5zLmNsYXNzTmFtZX1gfT5cbiAgICAgICAgICAgICAgICBSb29tIElkOntcIiBcIn1cbiAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChyb29tSWQpO1xuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YHRleHQtcHJpbWFyeSBiZy16aW5jLTgwMCBwLTEgcm91bmRlZC1tZCAke3BvcHBpbnMuY2xhc3NOYW1lfWB9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge3Jvb21JZH1cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvTW9kYWw+XG4gICAgICApfVxuXG4gICAgICB7Z2FtZVN0YXRlID09PSBcImVuZGVkXCIgJiYgKFxuICAgICAgICA8TW9kYWxcbiAgICAgICAgICBjdXN0b21DbG9zZT17W1wiUXVpdFwiLCBcIi9tZW51XCJdfVxuICAgICAgICAgIGVuYWJsZT17dHJ1ZX1cbiAgICAgICAgICBkZWZhdWx0T3Blbj17dHJ1ZX1cbiAgICAgICAgICBpZD1cImdhbWVlbmRlZFwiXG4gICAgICAgICAgYnRubmFtZT17XCJMT0xcIn1cbiAgICAgICAgICB0aXRsZT17XCJHYW1lIEVuZGVkXCJ9XG4gICAgICAgID5cbiAgICAgICAgICA8TGVhZGVyYm9hcmQgZGF0YT17bGVhZGVyYm9hcmR9IC8+XG4gICAgICAgIDwvTW9kYWw+XG4gICAgICApfVxuXG4gICAgICB7cm91bmRTdGF0ZSA9PT0gXCJlbmRlZFwiICYmIChcbiAgICAgICAgPE1vZGFsXG4gICAgICAgICAgZW5hYmxlPXt0cnVlfVxuICAgICAgICAgIGRlZmF1bHRPcGVuPXt0cnVlfVxuICAgICAgICAgIGlkPXtcIlJvdW5kRW5kXCJ9XG4gICAgICAgICAgdGl0bGU9e1wiUm91bmQgRW5kXCJ9XG4gICAgICAgICAgYnRubmFtZT17XCJsb2xcIn1cbiAgICAgICAgPlxuICAgICAgICAgIDxJbWdTbGlkZXIgZGF0YT17cGxheWVyc1Jlc3BvbnNlfSBvYmpuYW1lPXtvYmpuYW1lfSAvPlxuICAgICAgICA8L01vZGFsPlxuICAgICAgKX1cblxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJteS0yXCI+PC9kaXY+XG5cbiAgICAgIHsvKiA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHNldE1zZ3MoW1wiU29oYW06IEhlbGxvXCIsIFwiU29oYW06IEhleVwiLCBcImVoc2FhczogSGVsbG8gU29oYW1cIiwgXCJTb2hhbTogVGVzdCAxXCIsIFwiU29oYW06IFRlc3QgMlwiLCBcImVoc2FhczogVGVzdCAzXCIsIFwiZWhzYWFzOiBUZXN0IDRcIiwgXCJlaHNhYXM6IFRlc3QgNVwiLCBcImVoc2FhczogVGVzdCA2XCIsIFwiU29oYW06IFRlc3QgN1wiLCBcImVoc2FhczogVGVzdCA4XCJdKX0gY2xhc3NOYW1lPVwiYnRuIGFic29sdXRlXCI+RHVtbXkgY2hhdHM8L2J1dHRvbj4gKi99XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctYmFzZS0yMDAgcC0yIG0tMSByb3VuZGVkLW1kIGZsZXgganVzdGlmeS1iZXR3ZWVuXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdGV4dC14bCAke2ZvbnQuY2xhc3NOYW1lfWB9PlxuICAgICAgICAgIEZpbmQgYXtcIiBcIn1cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2B0ZXh0LXByaW1hcnkgY2FwaXRhbGl6ZSAke2ZvbnQuY2xhc3NOYW1lfWB9PlxuICAgICAgICAgICAge29iam5hbWUgfHwgXCJPYmplY3RcIn1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YHRleHQteGwgJHtwb3BwaW5zLmNsYXNzTmFtZX1gfT5cbiAgICAgICAgICB7LyogPHNwYW4gY2xhc3NOYW1lPVwiY291bnRkb3duIGZvbnQtbW9ubyBmb250LWJvbGQgdGV4dC1wcmltYXJ5XCI+XG4gICAgICAgICAgICA8c3BhbiBpZD1cImdhbWUtY291bnRkb3duXCI+PC9zcGFuPlxuICAgICAgICAgIDwvc3Bhbj4gKi99XG4gICAgICAgICAgPD48Lz5cbiAgICAgICAgICB7dGltZX1zIGxlZnRcbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdlxuICAgICAgICBjbGFzc05hbWU9e2BmbGV4IGp1c3RpZnktYmV0d2VlbiB0ZXh0LW1kIG0tMSBiZy1iYXNlLTIwMCBwLTIgJHtwb3BwaW5zLmNsYXNzTmFtZX0gcm91bmRlZC1tZGB9XG4gICAgICA+XG4gICAgICAgIDxkaXY+U2NvcmU6IHtzY29yZX08L2Rpdj5cbiAgICAgICAgPGRpdj5Sb3VuZDoge3JvdW5kfTwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaC1mdWxsIGJnLXJlZC01MDBcIj5cbiAgICAgICAgPENhcHR1cmUgc3VibWl0SW1hZ2U9e3N1Ym1pdEltYWdlfSBjYW5SZXRha2U9e2NhblJldGFrZUltYWdlfSAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRhYnMgdGFicy1ib3hlZCBtLTEgbXQtMS41XCI+XG4gICAgICAgICAgPGFcbiAgICAgICAgICAgIGNsYXNzTmFtZT17XG4gICAgICAgICAgICAgIChhY3RpdmVUYWIgPT0gMCAmJiBgdGFiLWFjdGl2ZSB0YWIgdy0xLzIgJHtmb250LmNsYXNzTmFtZX1gKSB8fFxuICAgICAgICAgICAgICBgdGFiIHctMS8yICR7Zm9udC5jbGFzc05hbWV9YFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0QWN0aXZlVGFiKDApfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIENoYXRcbiAgICAgICAgICA8L2E+XG4gICAgICAgICAgPGFcbiAgICAgICAgICAgIGNsYXNzTmFtZT17XG4gICAgICAgICAgICAgIChhY3RpdmVUYWIgPT0gMSAmJiBgdGFiLWFjdGl2ZSB0YWIgdy0xLzIgJHtmb250LmNsYXNzTmFtZX1gKSB8fFxuICAgICAgICAgICAgICBgdGFiIHctMS8yICR7Zm9udC5jbGFzc05hbWV9YFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0QWN0aXZlVGFiKDEpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIExlYWRlcmJvYXJkXG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy1ibHVlLTUwMCBoLWZ1bGwgdy1mdWxsIGZsZXgtMVwiPlxuICAgICAgICAgIHthY3RpdmVUYWIgPT0gMCAmJiAoXG4gICAgICAgICAgICA8Q2hhdCBtc2c9e21zZ30gbXNncz17bXNnc30gc2V0TXNnPXtzZXRNc2d9IHNlbmRNc2c9e3NlbmRNc2d9IC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7YWN0aXZlVGFiID09IDEgJiYgPExlYWRlcmJvYXJkIGRhdGE9e2xlYWRlcmJvYXJkfSAvPn1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgeyExICYmIChcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJiZy1yZWQtNDAwIHRleHQtYmxhY2sgbS0xIHJvdW5kZWQtbWQgdGV4dC0yeGwgcC0yXCI+XG4gICAgICAgICAgICBZb3UgbG9vc2UgdGhpcyByb3VuZCBmb29sXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBwYWdlO1xuIl0sIm5hbWVzIjpbImZvbnQiLCJwb3BwaW5zIiwiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVzZVNlYXJjaFBhcmFtcyIsImNvbHkiLCJNb2RhbCIsInVzZUdsb2JhbENvbnRleHQiLCJJbWdTbGlkZXIiLCJDYXB0dXJlIiwiQ2hhdCIsIkxlYWRlcmJvYXJkIiwicHJldlRpbWUiLCJEYXRlIiwiZ2V0VGltZSIsImdldEN1clRpbWUiLCJNYXRoIiwicm91bmQiLCJwYWdlIiwic2VhcmNoUGFyYW1zIiwicm9vbUlkIiwic2V0Um9vbUlkIiwiaXNSQyIsInNldElzUkMiLCJyb29tIiwic2V0Um9vbSIsIm1zZyIsInNldE1zZyIsIm1zZ3MiLCJzZXRNc2dzIiwidXNlcm5hbWUiLCJtZXNzYWdlIiwibGVhZGVyYm9hcmQiLCJzZXRMZWFkZXJib2FyZCIsInNjb3JlIiwiYWN0aXZlVGFiIiwic2V0QWN0aXZlVGFiIiwib2JqbmFtZSIsInNldE9iam5hbWUiLCJzZXRTY29yZSIsInNldFJvdW5kIiwidGltZSIsInNldFRpbWUiLCJjYW5SZXRha2VJbWFnZSIsInNldENhblJldGFrZUltYWdlIiwicmVhZHkiLCJzZXRSZWFkeSIsImdhbWVTdGF0ZSIsInNldEdhbWVTdGF0ZSIsInJvdW5kU3RhdGUiLCJzZXRSb3VuZFN0YXRlIiwic2xpZGVJbWFnZXMiLCJ1cmwiLCJjYXB0aW9uIiwicGxheWVyc1Jlc3BvbnNlIiwic2V0UGxheWVyc1Jlc3BvbnNlIiwiaW1nIiwibmFtZSIsIm1hdGNoZWQiLCJ1bmRlZmluZWQiLCJSZWFkeSIsImNvbnNvbGUiLCJsb2ciLCJzZW5kIiwiR2FtZVN0YXJ0cyIsInBheWxvYWQiLCJHYW1lRW5kcyIsIlJvdW5kU3RhcnRzIiwiY3VyUm91bmQiLCJzdGFydENvdW50ZXIiLCJSb3VuZEVuZHMiLCJjdXJTY29yZSIsImltZ3MiLCJzdWJtaXRJbWFnZSIsImltYWdlIiwic3Vic3RyaW5nIiwic2VuZE1zZyIsImFwcGVuZE1zZ3MiLCJwdXNoIiwic2xpY2UiLCJpZCIsImdldCIsImlzUm9vbUNyZWF0b3IiLCJvbkpvaW4iLCJHYW1lcGxheVNldHVwIiwiX3Jvb20iLCJzZXRUaW1lb3V0Iiwib25NZXNzYWdlIiwiY2xpZW50Iiwiam9pbkJ5SWQiLCJ0aGVuIiwiY2F0Y2giLCJlIiwiYWxlcnQiLCJqb2luT3JDcmVhdGUiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiX2lzUkMiLCJkZWxheSIsImkiLCJQcm9taXNlIiwicmVzb2x2ZSIsImRpdiIsImNsYXNzTmFtZSIsImN1c3RvbUNsb3NlIiwiZW5hYmxlIiwiZGVmYXVsdE9wZW4iLCJhY3Rpb25zIiwiYnV0dG9uIiwiZGlzYWJsZWQiLCJvbkNsaWNrIiwiYnRubmFtZSIsInRpdGxlIiwicCIsInNwYW4iLCJuYXZpZ2F0b3IiLCJjbGlwYm9hcmQiLCJ3cml0ZVRleHQiLCJkYXRhIiwiY2FuUmV0YWtlIiwiYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./app/g/page.tsx\n"));

/***/ }),

/***/ "(app-client)/./lib/coly.ts":
/*!*********************!*\
  !*** ./lib/coly.ts ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var colyseus_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! colyseus.js */ \"(app-client)/./node_modules/colyseus.js/dist/colyseus.js\");\n/* harmony import */ var colyseus_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(colyseus_js__WEBPACK_IMPORTED_MODULE_0__);\n\n// var client = new Colyseus.Client(\"wss://backend.objecthunt.com\");\nvar client = new colyseus_js__WEBPACK_IMPORTED_MODULE_0__.Client(\"ws://localhost:2567\");\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    client\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbGliL2NvbHkudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQXdDO0FBRXhDLG9FQUFvRTtBQUNwRSxJQUFJQyxTQUFTLElBQUlELCtDQUFlRSxDQUFDO0FBRWpDLCtEQUFlO0lBQUVEO0FBQU8sQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9jb2x5LnRzPzBhMDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQ29seXNldXMgZnJvbSBcImNvbHlzZXVzLmpzXCI7XG5cbi8vIHZhciBjbGllbnQgPSBuZXcgQ29seXNldXMuQ2xpZW50KFwid3NzOi8vYmFja2VuZC5vYmplY3RodW50LmNvbVwiKTtcbnZhciBjbGllbnQgPSBuZXcgQ29seXNldXMuQ2xpZW50KFwid3M6Ly9sb2NhbGhvc3Q6MjU2N1wiKTtcblxuZXhwb3J0IGRlZmF1bHQgeyBjbGllbnQgfTtcbiJdLCJuYW1lcyI6WyJDb2x5c2V1cyIsImNsaWVudCIsIkNsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./lib/coly.ts\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={686:(e,r,t)=>{var n=t(808);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},808:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(686);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sYUFBYSxPQUFPLGNBQWMsYUFBYSwwQkFBMEIsb0NBQW9DLDhCQUE4Qix1QkFBdUIsUUFBUSxrQkFBa0IsV0FBVyxnQkFBZ0IsOEJBQThCLHFCQUFxQixnQkFBZ0IsbUJBQW1CLGlCQUFpQixnQ0FBZ0MsV0FBVyxPQUFPLDJCQUEyQiw2QkFBNkIsS0FBSyw4Q0FBOEMsb0JBQW9CLE1BQU0sU0FBUyxPQUFPLG1CQUFtQixPQUFPLFlBQVksZ0NBQWdDLGNBQWMsT0FBTyxnQ0FBZ0MsT0FBTyxnQ0FBZ0MscUNBQXFDLDRDQUE0QywyQ0FBMkMsU0FBUyxnQkFBZ0IsSUFBSSx3QkFBd0IsT0FBTyxZQUFZLE9BQU8sdUJBQXVCLHFCQUFxQixPQUFPLHVCQUF1QixPQUFPLGdDQUFnQyxPQUFPLGVBQWUsb0JBQW9CLGlCQUFpQixzQ0FBc0MsZUFBZSxPQUFPLGdCQUFnQiw0QkFBNEIsR0FBRyx1Q0FBdUMsZUFBZSxPQUFPLGdCQUFnQiw0QkFBNEIsR0FBRywyQ0FBMkMsa0JBQWtCLDJDQUEyQyxLQUFLLDZCQUE2QiwyQkFBMkIsTUFBTSxPQUFPLGVBQWUsRUFBRSxvQkFBb0Isb0JBQW9CLEtBQUssR0FBRyxTQUFTLHdCQUF3QixPQUFPLGFBQWEsd0NBQXdDLFlBQVksc0JBQXNCLFlBQVksT0FBTyw2QkFBNkIscUJBQXFCLE9BQU8scUJBQXFCLE9BQU8sTUFBTSxlQUFlLFFBQVEsR0FBRyxTQUFTLHFCQUFxQix3Q0FBd0Msc0JBQXNCLHFCQUFxQixPQUFPLGFBQWEsR0FBRyx5QkFBeUIseUNBQXlDLGFBQWEsWUFBWSx3QkFBd0IsTUFBTSwwREFBMEQsWUFBWSw2QkFBNkIsa0JBQWtCLG9CQUFvQixxQkFBcUIsYUFBYSxnRUFBZ0UsWUFBWSxPQUFPLE1BQU0sK0NBQStDLEtBQUssb0NBQW9DLGFBQWEsNEJBQTRCLFNBQVMseUJBQXlCLCtCQUErQixVQUFVLGlCQUFpQixNQUFNLGNBQWMsa0JBQWtCLFNBQVMsZ0JBQWdCLHNCQUFzQixXQUFXLHNCQUFzQixTQUFTLG9EQUFvRCxpREFBaUQsMkNBQTJDLFFBQVEsc0JBQXNCLGdCQUFnQixTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSywrQkFBK0IsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzPzRjZTMiXSwic291cmNlc0NvbnRlbnQiOlsiKCgpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezY4NjooZSxyLHQpPT57dmFyIG49dCg4MDgpO3ZhciBpPU9iamVjdC5jcmVhdGUobnVsbCk7dmFyIGE9dHlwZW9mIGRvY3VtZW50PT09XCJ1bmRlZmluZWRcIjt2YXIgbz1BcnJheS5wcm90b3R5cGUuZm9yRWFjaDtmdW5jdGlvbiBkZWJvdW5jZShlLHIpe3ZhciB0PTA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dGhpczt2YXIgaT1hcmd1bWVudHM7dmFyIGE9ZnVuY3Rpb24gZnVuY3Rpb25DYWxsKCl7cmV0dXJuIGUuYXBwbHkobixpKX07Y2xlYXJUaW1lb3V0KHQpO3Q9c2V0VGltZW91dChhLHIpfX1mdW5jdGlvbiBub29wKCl7fWZ1bmN0aW9uIGdldEN1cnJlbnRTY3JpcHRVcmwoZSl7dmFyIHI9aVtlXTtpZighcil7aWYoZG9jdW1lbnQuY3VycmVudFNjcmlwdCl7cj1kb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY31lbHNle3ZhciB0PWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO3ZhciBhPXRbdC5sZW5ndGgtMV07aWYoYSl7cj1hLnNyY319aVtlXT1yfXJldHVybiBmdW5jdGlvbihlKXtpZighcil7cmV0dXJuIG51bGx9dmFyIHQ9ci5zcGxpdCgvKFteXFxcXC9dKylcXC5qcyQvKTt2YXIgaT10JiZ0WzFdO2lmKCFpKXtyZXR1cm5bci5yZXBsYWNlKFwiLmpzXCIsXCIuY3NzXCIpXX1pZighZSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19cmV0dXJuIGUuc3BsaXQoXCIsXCIpLm1hcCgoZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IFJlZ0V4cChcIlwiLmNvbmNhdChpLFwiXFxcXC5qcyRcIiksXCJnXCIpO3JldHVybiBuKHIucmVwbGFjZSh0LFwiXCIuY29uY2F0KGUucmVwbGFjZSgve2ZpbGVOYW1lfS9nLGkpLFwiLmNzc1wiKSkpfSkpfX1mdW5jdGlvbiB1cGRhdGVDc3MoZSxyKXtpZighcil7aWYoIWUuaHJlZil7cmV0dXJufXI9ZS5ocmVmLnNwbGl0KFwiP1wiKVswXX1pZighaXNVcmxSZXF1ZXN0KHIpKXtyZXR1cm59aWYoZS5pc0xvYWRlZD09PWZhbHNlKXtyZXR1cm59aWYoIXJ8fCEoci5pbmRleE9mKFwiLmNzc1wiKT4tMSkpe3JldHVybn1lLnZpc2l0ZWQ9dHJ1ZTt2YXIgdD1lLmNsb25lTm9kZSgpO3QuaXNMb2FkZWQ9ZmFsc2U7dC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsKGZ1bmN0aW9uKCl7aWYodC5pc0xvYWRlZCl7cmV0dXJufXQuaXNMb2FkZWQ9dHJ1ZTtlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSl9KSk7dC5ocmVmPVwiXCIuY29uY2F0KHIsXCI/XCIpLmNvbmNhdChEYXRlLm5vdygpKTtpZihlLm5leHRTaWJsaW5nKXtlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHQsZS5uZXh0U2libGluZyl9ZWxzZXtlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodCl9fWZ1bmN0aW9uIGdldFJlbG9hZFVybChlLHIpe3ZhciB0O2U9bihlLHtzdHJpcFdXVzpmYWxzZX0pO3Iuc29tZSgoZnVuY3Rpb24obil7aWYoZS5pbmRleE9mKHIpPi0xKXt0PW59fSkpO3JldHVybiB0fWZ1bmN0aW9uIHJlbG9hZFN0eWxlKGUpe2lmKCFlKXtyZXR1cm4gZmFsc2V9dmFyIHI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7dmFyIHQ9ZmFsc2U7by5jYWxsKHIsKGZ1bmN0aW9uKHIpe2lmKCFyLmhyZWYpe3JldHVybn12YXIgbj1nZXRSZWxvYWRVcmwoci5ocmVmLGUpO2lmKCFpc1VybFJlcXVlc3Qobikpe3JldHVybn1pZihyLnZpc2l0ZWQ9PT10cnVlKXtyZXR1cm59aWYobil7dXBkYXRlQ3NzKHIsbik7dD10cnVlfX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRBbGwoKXt2YXIgZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwibGlua1wiKTtvLmNhbGwoZSwoZnVuY3Rpb24oZSl7aWYoZS52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufXVwZGF0ZUNzcyhlKX0pKX1mdW5jdGlvbiBpc1VybFJlcXVlc3QoZSl7aWYoIS9eW2EtekEtWl1bYS16QS1aXFxkK1xcLS5dKjovLnRlc3QoZSkpe3JldHVybiBmYWxzZX1yZXR1cm4gdHJ1ZX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSxyKXtpZihhKXtjb25zb2xlLmxvZyhcIm5vIHdpbmRvdy5kb2N1bWVudCBmb3VuZCwgd2lsbCBub3QgSE1SIENTU1wiKTtyZXR1cm4gbm9vcH12YXIgdD1nZXRDdXJyZW50U2NyaXB0VXJsKGUpO2Z1bmN0aW9uIHVwZGF0ZSgpe3ZhciBlPXQoci5maWxlbmFtZSk7dmFyIG49cmVsb2FkU3R5bGUoZSk7aWYoci5sb2NhbHMpe2NvbnNvbGUubG9nKFwiW0hNUl0gRGV0ZWN0ZWQgbG9jYWwgY3NzIG1vZHVsZXMuIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpO3JldHVybn1pZihuKXtjb25zb2xlLmxvZyhcIltITVJdIGNzcyByZWxvYWQgJXNcIixlLmpvaW4oXCIgXCIpKX1lbHNle2NvbnNvbGUubG9nKFwiW0hNUl0gUmVsb2FkIGFsbCBjc3NcIik7cmVsb2FkQWxsKCl9fXJldHVybiBkZWJvdW5jZSh1cGRhdGUsNTApfX0sODA4OmU9PntmdW5jdGlvbiBub3JtYWxpemVVcmwoZSl7cmV0dXJuIGUucmVkdWNlKChmdW5jdGlvbihlLHIpe3N3aXRjaChyKXtjYXNlXCIuLlwiOmUucG9wKCk7YnJlYWs7Y2FzZVwiLlwiOmJyZWFrO2RlZmF1bHQ6ZS5wdXNoKHIpfXJldHVybiBlfSksW10pLmpvaW4oXCIvXCIpfWUuZXhwb3J0cz1mdW5jdGlvbihlKXtlPWUudHJpbSgpO2lmKC9eZGF0YTovaS50ZXN0KGUpKXtyZXR1cm4gZX12YXIgcj1lLmluZGV4T2YoXCIvL1wiKSE9PS0xP2Uuc3BsaXQoXCIvL1wiKVswXStcIi8vXCI6XCJcIjt2YXIgdD1lLnJlcGxhY2UobmV3IFJlZ0V4cChyLFwiaVwiKSxcIlwiKS5zcGxpdChcIi9cIik7dmFyIG49dFswXS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xcLiQvLFwiXCIpO3RbMF09XCJcIjt2YXIgaT1ub3JtYWxpemVVcmwodCk7cmV0dXJuIHIrbitpfX19O3ZhciByPXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18odCl7dmFyIG49clt0XTtpZihuIT09dW5kZWZpbmVkKXtyZXR1cm4gbi5leHBvcnRzfXZhciBpPXJbdF09e2V4cG9ydHM6e319O3ZhciBhPXRydWU7dHJ5e2VbdF0oaSxpLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7YT1mYWxzZX1maW5hbGx5e2lmKGEpZGVsZXRlIHJbdF19cmV0dXJuIGkuZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHQ9X19uY2N3cGNrX3JlcXVpcmVfXyg2ODYpO21vZHVsZS5leHBvcnRzPXR9KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\ImgSlider.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":[\"400\",\"500\",\"600\",\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"}":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\components\\ImgSlider.tsx","import":"Poppins","arguments":[{"weight":["400","500","600","700"],"subsets":["latin"]}],"variableName":"poppins"} ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Poppins_3bfef9', '__Poppins_Fallback_3bfef9'\",\"fontStyle\":\"normal\"},\"className\":\"__className_3bfef9\"};\n    if(true) {\n      // 1703070892304\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-client)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHBcXFxcY29tcG9uZW50c1xcXFxJbWdTbGlkZXIudHN4XCIsXCJpbXBvcnRcIjpcIlBvcHBpbnNcIixcImFyZ3VtZW50c1wiOlt7XCJ3ZWlnaHRcIjpbXCI0MDBcIixcIjUwMFwiLFwiNjAwXCIsXCI3MDBcIl0sXCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwicG9wcGluc1wifSIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtCQUFrQixTQUFTLG9GQUFvRjtBQUMvRyxPQUFPLElBQVU7QUFDakI7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyxpTUFBb0csY0FBYyxzREFBc0Q7QUFDdE0sTUFBTSxVQUFVO0FBQ2hCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9mb250L2dvb2dsZS90YXJnZXQuY3NzP2Q0MzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN0eWxlXCI6e1wiZm9udEZhbWlseVwiOlwiJ19fUG9wcGluc18zYmZlZjknLCAnX19Qb3BwaW5zX0ZhbGxiYWNrXzNiZmVmOSdcIixcImZvbnRTdHlsZVwiOlwibm9ybWFsXCJ9LFwiY2xhc3NOYW1lXCI6XCJfX2NsYXNzTmFtZV8zYmZlZjlcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcwMzA3MDg5MjMwNFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJHOi9vYmplY3RfaHVudC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcInB1YmxpY1BhdGhcIjpcIi9fbmV4dC9cIixcImVzTW9kdWxlXCI6ZmFsc2UsXCJsb2NhbHNcIjp0cnVlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIFxuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\ImgSlider.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":[\"400\",\"500\",\"600\",\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"}\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\Modal.tsx\",\"import\":\"Bungee\",\"arguments\":[{\"weight\":\"400\",\"subsets\":[\"latin\"]}],\"variableName\":\"font1\"}":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\components\\Modal.tsx","import":"Bungee","arguments":[{"weight":"400","subsets":["latin"]}],"variableName":"font1"} ***!
  \************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Bungee_Fallback_d10ee3', '__Bungee_Fallback_Fallback_d10ee3'\",\"fontWeight\":400,\"fontStyle\":\"normal\"},\"className\":\"__className_d10ee3\"};\n    if(true) {\n      // 1703070856999\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-client)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHBcXFxcY29tcG9uZW50c1xcXFxNb2RhbC50c3hcIixcImltcG9ydFwiOlwiQnVuZ2VlXCIsXCJhcmd1bWVudHNcIjpbe1wid2VpZ2h0XCI6XCI0MDBcIixcInN1YnNldHNcIjpbXCJsYXRpblwiXX1dLFwidmFyaWFibGVOYW1lXCI6XCJmb250MVwifSIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtCQUFrQixTQUFTLHFIQUFxSDtBQUNoSixPQUFPLElBQVU7QUFDakI7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyxpTUFBb0csY0FBYyxzREFBc0Q7QUFDdE0sTUFBTSxVQUFVO0FBQ2hCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9mb250L2dvb2dsZS90YXJnZXQuY3NzPzg4N2QiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN0eWxlXCI6e1wiZm9udEZhbWlseVwiOlwiJ19fQnVuZ2VlX0ZhbGxiYWNrX2QxMGVlMycsICdfX0J1bmdlZV9GYWxsYmFja19GYWxsYmFja19kMTBlZTMnXCIsXCJmb250V2VpZ2h0XCI6NDAwLFwiZm9udFN0eWxlXCI6XCJub3JtYWxcIn0sXCJjbGFzc05hbWVcIjpcIl9fY2xhc3NOYW1lX2QxMGVlM1wifTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzAzMDcwODU2OTk5XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkc6L29iamVjdF9odW50L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\Modal.tsx\",\"import\":\"Bungee\",\"arguments\":[{\"weight\":\"400\",\"subsets\":[\"latin\"]}],\"variableName\":\"font1\"}\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\Room\\\\Capture.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":\"500\",\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"}":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\components\\Room\\Capture.tsx","import":"Poppins","arguments":[{"weight":"500","subsets":["latin"]}],"variableName":"poppins"} ***!
  \***********************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Poppins_3c03fe', '__Poppins_Fallback_3c03fe'\",\"fontWeight\":500,\"fontStyle\":\"normal\"},\"className\":\"__className_3c03fe\"};\n    if(true) {\n      // 1703070892333\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-client)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHBcXFxcY29tcG9uZW50c1xcXFxSb29tXFxcXENhcHR1cmUudHN4XCIsXCJpbXBvcnRcIjpcIlBvcHBpbnNcIixcImFyZ3VtZW50c1wiOlt7XCJ3ZWlnaHRcIjpcIjUwMFwiLFwic3Vic2V0c1wiOltcImxhdGluXCJdfV0sXCJ2YXJpYWJsZU5hbWVcIjpcInBvcHBpbnNcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxxR0FBcUc7QUFDaEksT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsaU1BQW9HLGNBQWMsc0RBQXNEO0FBQ3RNLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz8zNmU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX1BvcHBpbnNfM2MwM2ZlJywgJ19fUG9wcGluc19GYWxsYmFja18zYzAzZmUnXCIsXCJmb250V2VpZ2h0XCI6NTAwLFwiZm9udFN0eWxlXCI6XCJub3JtYWxcIn0sXCJjbGFzc05hbWVcIjpcIl9fY2xhc3NOYW1lXzNjMDNmZVwifTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzAzMDcwODkyMzMzXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkc6L29iamVjdF9odW50L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\Room\\\\Capture.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":\"500\",\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"}\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\Room\\\\Chat.tsx\",\"import\":\"Bungee\",\"arguments\":[{\"weight\":\"400\",\"subsets\":[\"latin\"]}],\"variableName\":\"bungee\"}":
/*!******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\components\\Room\\Chat.tsx","import":"Bungee","arguments":[{"weight":"400","subsets":["latin"]}],"variableName":"bungee"} ***!
  \******************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Bungee_e557cd', '__Bungee_Fallback_e557cd'\",\"fontWeight\":400,\"fontStyle\":\"normal\"},\"className\":\"__className_e557cd\"};\n    if(true) {\n      // 1703070892149\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-client)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHBcXFxcY29tcG9uZW50c1xcXFxSb29tXFxcXENoYXQudHN4XCIsXCJpbXBvcnRcIjpcIkJ1bmdlZVwiLFwiYXJndW1lbnRzXCI6W3tcIndlaWdodFwiOlwiNDAwXCIsXCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwiYnVuZ2VlXCJ9IiwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCLFNBQVMsbUdBQW1HO0FBQzlILE9BQU8sSUFBVTtBQUNqQjtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLGlNQUFvRyxjQUFjLHNEQUFzRDtBQUN0TSxNQUFNLFVBQVU7QUFDaEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/MDUwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wic3R5bGVcIjp7XCJmb250RmFtaWx5XCI6XCInX19CdW5nZWVfZTU1N2NkJywgJ19fQnVuZ2VlX0ZhbGxiYWNrX2U1NTdjZCdcIixcImZvbnRXZWlnaHRcIjo0MDAsXCJmb250U3R5bGVcIjpcIm5vcm1hbFwifSxcImNsYXNzTmFtZVwiOlwiX19jbGFzc05hbWVfZTU1N2NkXCJ9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MDMwNzA4OTIxNDlcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRzovb2JqZWN0X2h1bnQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCIvX25leHQvXCIsXCJlc01vZHVsZVwiOmZhbHNlLFwibG9jYWxzXCI6dHJ1ZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\Room\\\\Chat.tsx\",\"import\":\"Bungee\",\"arguments\":[{\"weight\":\"400\",\"subsets\":[\"latin\"]}],\"variableName\":\"bungee\"}\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\Room\\\\Chat.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":\"500\",\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"}":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\components\\Room\\Chat.tsx","import":"Poppins","arguments":[{"weight":"500","subsets":["latin"]}],"variableName":"poppins"} ***!
  \********************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Poppins_3c03fe', '__Poppins_Fallback_3c03fe'\",\"fontWeight\":500,\"fontStyle\":\"normal\"},\"className\":\"__className_3c03fe\"};\n    if(true) {\n      // 1703070891584\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-client)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHBcXFxcY29tcG9uZW50c1xcXFxSb29tXFxcXENoYXQudHN4XCIsXCJpbXBvcnRcIjpcIlBvcHBpbnNcIixcImFyZ3VtZW50c1wiOlt7XCJ3ZWlnaHRcIjpcIjUwMFwiLFwic3Vic2V0c1wiOltcImxhdGluXCJdfV0sXCJ2YXJpYWJsZU5hbWVcIjpcInBvcHBpbnNcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxxR0FBcUc7QUFDaEksT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsaU1BQW9HLGNBQWMsc0RBQXNEO0FBQ3RNLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz9kNjk3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX1BvcHBpbnNfM2MwM2ZlJywgJ19fUG9wcGluc19GYWxsYmFja18zYzAzZmUnXCIsXCJmb250V2VpZ2h0XCI6NTAwLFwiZm9udFN0eWxlXCI6XCJub3JtYWxcIn0sXCJjbGFzc05hbWVcIjpcIl9fY2xhc3NOYW1lXzNjMDNmZVwifTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzAzMDcwODkxNTg0XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkc6L29iamVjdF9odW50L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\components\\\\Room\\\\Chat.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":\"500\",\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"}\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\g\\\\page.tsx\",\"import\":\"Bungee\",\"arguments\":[{\"weight\":\"400\",\"subsets\":[\"latin\"]}],\"variableName\":\"font\"}":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\g\\page.tsx","import":"Bungee","arguments":[{"weight":"400","subsets":["latin"]}],"variableName":"font"} ***!
  \*************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Bungee_e557cd', '__Bungee_Fallback_e557cd'\",\"fontWeight\":400,\"fontStyle\":\"normal\"},\"className\":\"__className_e557cd\"};\n    if(true) {\n      // 1703070890714\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-client)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHBcXFxcZ1xcXFxwYWdlLnRzeFwiLFwiaW1wb3J0XCI6XCJCdW5nZWVcIixcImFyZ3VtZW50c1wiOlt7XCJ3ZWlnaHRcIjpcIjQwMFwiLFwic3Vic2V0c1wiOltcImxhdGluXCJdfV0sXCJ2YXJpYWJsZU5hbWVcIjpcImZvbnRcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxtR0FBbUc7QUFDOUgsT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsaU1BQW9HLGNBQWMsc0RBQXNEO0FBQ3RNLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz8xNGRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX0J1bmdlZV9lNTU3Y2QnLCAnX19CdW5nZWVfRmFsbGJhY2tfZTU1N2NkJ1wiLFwiZm9udFdlaWdodFwiOjQwMCxcImZvbnRTdHlsZVwiOlwibm9ybWFsXCJ9LFwiY2xhc3NOYW1lXCI6XCJfX2NsYXNzTmFtZV9lNTU3Y2RcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcwMzA3MDg5MDcxNFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJHOi9vYmplY3RfaHVudC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcInB1YmxpY1BhdGhcIjpcIi9fbmV4dC9cIixcImVzTW9kdWxlXCI6ZmFsc2UsXCJsb2NhbHNcIjp0cnVlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIFxuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\g\\\\page.tsx\",\"import\":\"Bungee\",\"arguments\":[{\"weight\":\"400\",\"subsets\":[\"latin\"]}],\"variableName\":\"font\"}\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\g\\\\page.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":[\"400\",\"500\",\"600\",\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"}":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\g\\page.tsx","import":"Poppins","arguments":[{"weight":["400","500","600","700"],"subsets":["latin"]}],"variableName":"poppins"} ***!
  \*************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Poppins_3bfef9', '__Poppins_Fallback_3bfef9'\",\"fontStyle\":\"normal\"},\"className\":\"__className_3bfef9\"};\n    if(true) {\n      // 1703070890723\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-client)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHBcXFxcZ1xcXFxwYWdlLnRzeFwiLFwiaW1wb3J0XCI6XCJQb3BwaW5zXCIsXCJhcmd1bWVudHNcIjpbe1wid2VpZ2h0XCI6W1wiNDAwXCIsXCI1MDBcIixcIjYwMFwiLFwiNzAwXCJdLFwic3Vic2V0c1wiOltcImxhdGluXCJdfV0sXCJ2YXJpYWJsZU5hbWVcIjpcInBvcHBpbnNcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxvRkFBb0Y7QUFDL0csT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsaU1BQW9HLGNBQWMsc0RBQXNEO0FBQ3RNLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz8yYTVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX1BvcHBpbnNfM2JmZWY5JywgJ19fUG9wcGluc19GYWxsYmFja18zYmZlZjknXCIsXCJmb250U3R5bGVcIjpcIm5vcm1hbFwifSxcImNsYXNzTmFtZVwiOlwiX19jbGFzc05hbWVfM2JmZWY5XCJ9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MDMwNzA4OTA3MjNcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRzovb2JqZWN0X2h1bnQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCIvX25leHQvXCIsXCJlc01vZHVsZVwiOmZhbHNlLFwibG9jYWxzXCI6dHJ1ZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\g\\\\page.tsx\",\"import\":\"Poppins\",\"arguments\":[{\"weight\":[\"400\",\"500\",\"600\",\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"poppins\"}\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVksT0FBTyxnQkFBZ0IsbUJBQW1CLE1BQU0sTUFBTSw0QkFBNEIsbURBQW1ELCtCQUErQixxREFBcUQsWUFBWSxJQUFJLG1DQUFtQyxhQUFhLEtBQUssb0JBQW9CLFNBQVMsbUJBQW1CLElBQUkscUNBQXFDLGVBQWUsS0FBSyx1QkFBdUIsU0FBUyx1QkFBdUIsSUFBSSx1QkFBdUIsbUJBQW1CLHVCQUF1QiwyQ0FBMkMsYUFBYSx1QkFBdUIsSUFBSSxjQUFjLFNBQVMsSUFBSSx3QkFBd0IsU0FBUywwQkFBMEIsNEJBQTRCLHFCQUFxQix1QkFBdUIsZ0RBQWdELGVBQWUsdUJBQXVCLElBQUksWUFBWSxTQUFTLElBQUksc0JBQXNCLFNBQVMsd0JBQXdCLFNBQVMsWUFBWSxNQUFNLFNBQVMsMkJBQTJCLFdBQVcsT0FBTyxRQUFRLGFBQWEsY0FBYyxLQUFLLEtBQUssYUFBYSxjQUFjLHNCQUFzQixNQUFNLE9BQU8sa0NBQWtDLE9BQU8sZUFBZSxTQUFTLElBQUksS0FBSyxhQUFhLE1BQU0sWUFBWSxLQUFLLFdBQVcsT0FBTyxRQUFRLG1CQUFtQix1QkFBdUIsb0NBQW9DLHVCQUF1QixZQUFZLG1CQUFtQixLQUFLLHFCQUFxQixzQkFBc0IscUJBQXFCLHlCQUF5QixtQkFBbUIsV0FBVyxhQUFhLDhCQUE4QixpQ0FBaUMsa0JBQWtCLGVBQWUsU0FBUyxVQUFVLGFBQWEsY0FBYyxpQkFBaUIsVUFBVSxtQkFBbUIsWUFBWSxXQUFXLHNCQUFzQiwwQkFBMEIsWUFBWSx1QkFBdUIsMkJBQTJCLHdCQUF3QixVQUFVLHNCQUFzQixxREFBcUQsaUJBQWlCLFdBQVcsb0JBQW9CLG1EQUFtRCxtQkFBbUIsWUFBWSxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSywrQkFBK0IsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzPzk3ODAiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7dmFyIGU9ezIyOTpmdW5jdGlvbihlKXt2YXIgdD1lLmV4cG9ydHM9e307dmFyIHI7dmFyIG47ZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpe3Rocm93IG5ldyBFcnJvcihcInNldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9ZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCgpe3Rocm93IG5ldyBFcnJvcihcImNsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX0oZnVuY3Rpb24oKXt0cnl7aWYodHlwZW9mIHNldFRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe3I9c2V0VGltZW91dH1lbHNle3I9ZGVmYXVsdFNldFRpbW91dH19Y2F0Y2goZSl7cj1kZWZhdWx0U2V0VGltb3V0fXRyeXtpZih0eXBlb2YgY2xlYXJUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtuPWNsZWFyVGltZW91dH1lbHNle249ZGVmYXVsdENsZWFyVGltZW91dH19Y2F0Y2goZSl7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX0pKCk7ZnVuY3Rpb24gcnVuVGltZW91dChlKXtpZihyPT09c2V0VGltZW91dCl7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX1pZigocj09PWRlZmF1bHRTZXRUaW1vdXR8fCFyKSYmc2V0VGltZW91dCl7cj1zZXRUaW1lb3V0O3JldHVybiBzZXRUaW1lb3V0KGUsMCl9dHJ5e3JldHVybiByKGUsMCl9Y2F0Y2godCl7dHJ5e3JldHVybiByLmNhbGwobnVsbCxlLDApfWNhdGNoKHQpe3JldHVybiByLmNhbGwodGhpcyxlLDApfX19ZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KGUpe2lmKG49PT1jbGVhclRpbWVvdXQpe3JldHVybiBjbGVhclRpbWVvdXQoZSl9aWYoKG49PT1kZWZhdWx0Q2xlYXJUaW1lb3V0fHwhbikmJmNsZWFyVGltZW91dCl7bj1jbGVhclRpbWVvdXQ7cmV0dXJuIGNsZWFyVGltZW91dChlKX10cnl7cmV0dXJuIG4oZSl9Y2F0Y2godCl7dHJ5e3JldHVybiBuLmNhbGwobnVsbCxlKX1jYXRjaCh0KXtyZXR1cm4gbi5jYWxsKHRoaXMsZSl9fX12YXIgaT1bXTt2YXIgbz1mYWxzZTt2YXIgdTt2YXIgYT0tMTtmdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKXtpZighb3x8IXUpe3JldHVybn1vPWZhbHNlO2lmKHUubGVuZ3RoKXtpPXUuY29uY2F0KGkpfWVsc2V7YT0tMX1pZihpLmxlbmd0aCl7ZHJhaW5RdWV1ZSgpfX1mdW5jdGlvbiBkcmFpblF1ZXVlKCl7aWYobyl7cmV0dXJufXZhciBlPXJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtvPXRydWU7dmFyIHQ9aS5sZW5ndGg7d2hpbGUodCl7dT1pO2k9W107d2hpbGUoKythPHQpe2lmKHUpe3VbYV0ucnVuKCl9fWE9LTE7dD1pLmxlbmd0aH11PW51bGw7bz1mYWxzZTtydW5DbGVhclRpbWVvdXQoZSl9dC5uZXh0VGljaz1mdW5jdGlvbihlKXt2YXIgdD1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0xKTtpZihhcmd1bWVudHMubGVuZ3RoPjEpe2Zvcih2YXIgcj0xO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspe3Rbci0xXT1hcmd1bWVudHNbcl19fWkucHVzaChuZXcgSXRlbShlLHQpKTtpZihpLmxlbmd0aD09PTEmJiFvKXtydW5UaW1lb3V0KGRyYWluUXVldWUpfX07ZnVuY3Rpb24gSXRlbShlLHQpe3RoaXMuZnVuPWU7dGhpcy5hcnJheT10fUl0ZW0ucHJvdG90eXBlLnJ1bj1mdW5jdGlvbigpe3RoaXMuZnVuLmFwcGx5KG51bGwsdGhpcy5hcnJheSl9O3QudGl0bGU9XCJicm93c2VyXCI7dC5icm93c2VyPXRydWU7dC5lbnY9e307dC5hcmd2PVtdO3QudmVyc2lvbj1cIlwiO3QudmVyc2lvbnM9e307ZnVuY3Rpb24gbm9vcCgpe310Lm9uPW5vb3A7dC5hZGRMaXN0ZW5lcj1ub29wO3Qub25jZT1ub29wO3Qub2ZmPW5vb3A7dC5yZW1vdmVMaXN0ZW5lcj1ub29wO3QucmVtb3ZlQWxsTGlzdGVuZXJzPW5vb3A7dC5lbWl0PW5vb3A7dC5wcmVwZW5kTGlzdGVuZXI9bm9vcDt0LnByZXBlbmRPbmNlTGlzdGVuZXI9bm9vcDt0Lmxpc3RlbmVycz1mdW5jdGlvbihlKXtyZXR1cm5bXX07dC5iaW5kaW5nPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LmN3ZD1mdW5jdGlvbigpe3JldHVyblwiL1wifTt0LmNoZGlyPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZFwiKX07dC51bWFzaz1mdW5jdGlvbigpe3JldHVybiAwfX19O3ZhciB0PXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18ocil7dmFyIG49dFtyXTtpZihuIT09dW5kZWZpbmVkKXtyZXR1cm4gbi5leHBvcnRzfXZhciBpPXRbcl09e2V4cG9ydHM6e319O3ZhciBvPXRydWU7dHJ5e2Vbcl0oaSxpLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7bz1mYWxzZX1maW5hbGx5e2lmKG8pZGVsZXRlIHRbcl19cmV0dXJuIGkuZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHI9X19uY2N3cGNrX3JlcXVpcmVfXygyMjkpO21vZHVsZS5leHBvcnRzPXJ9KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      case REACT_SERVER_CONTEXT_TYPE:\n        {\n          var context2 = type;\n          return (context2.displayName || context2._globalName) + '.Provider';\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe[prop-missing]\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      } // TODO(luna): This will currently only throw if the function component\n      // tries to access React/ReactDOM/props. We should probably make this throw\n      // in simple components too\n\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV = jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-client)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLHVMQUFzRTtBQUN4RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9lZjU2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/next/navigation.js":
/*!*****************************************!*\
  !*** ./node_modules/next/navigation.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/components/navigation */ \"(app-client)/./node_modules/next/dist/client/components/navigation.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL25leHQvbmF2aWdhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSx3SkFBK0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbmF2aWdhdGlvbi5qcz84ZGJjIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb24nKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/next/navigation.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/react-slideshow-image/dist/react-slideshow-image.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/react-slideshow-image/dist/react-slideshow-image.esm.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Fade: function() { return /* binding */ Fade; },\n/* harmony export */   Slide: function() { return /* binding */ Slide; },\n/* harmony export */   Zoom: function() { return /* binding */ Zoom; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! resize-observer-polyfill */ \"(app-client)/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\");\n/* harmony import */ var _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tweenjs/tween.js */ \"(app-client)/./node_modules/@tweenjs/tween.js/dist/tween.esm.js\");\n\n\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar getStartingIndex = function getStartingIndex(children, defaultIndex) {\n  if (defaultIndex && defaultIndex < react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children)) {\n    return defaultIndex;\n  }\n\n  return 0;\n};\nvar getResponsiveSettings = function getResponsiveSettings(wrapperWidth, responsive) {\n  if (typeof window !== 'undefined' && Array.isArray(responsive)) {\n    return responsive.find(function (each) {\n      return each.breakpoint <= wrapperWidth;\n    });\n  }\n\n  return;\n};\nvar EASING_METHODS = {\n  linear: _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Linear.None,\n  ease: _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Quadratic.InOut,\n  'ease-in': _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Quadratic.In,\n  'ease-out': _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Quadratic.Out,\n  cubic: _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Cubic.InOut,\n  'cubic-in': _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Cubic.In,\n  'cubic-out': _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Cubic.Out\n};\nvar getEasing = function getEasing(easeMethod) {\n  if (easeMethod) {\n    return EASING_METHODS[easeMethod];\n  }\n\n  return EASING_METHODS.linear;\n};\nvar showPreviousArrow = function showPreviousArrow(_ref, currentIndex, moveSlides) {\n  var prevArrow = _ref.prevArrow,\n      infinite = _ref.infinite;\n  var isDisabled = currentIndex <= 0 && !infinite;\n  var props = {\n    'data-type': 'prev',\n    'aria-label': 'Previous Slide',\n    disabled: isDisabled,\n    onClick: moveSlides\n  };\n\n  if (prevArrow) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(prevArrow, _extends({\n      className: (prevArrow.props.className || '') + \" nav \" + (isDisabled ? 'disabled' : '')\n    }, props));\n  }\n\n  var className = \"nav default-nav \" + (isDisabled ? 'disabled' : '');\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: className\n  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\"\n  })));\n};\nvar showNextArrow = function showNextArrow(properties, currentIndex, moveSlides) {\n  var nextArrow = properties.nextArrow,\n      infinite = properties.infinite,\n      children = properties.children;\n  var slidesToScroll = 1;\n\n  if ('slidesToScroll' in properties) {\n    slidesToScroll = properties.slidesToScroll || 1;\n  }\n\n  var isDisabled = currentIndex >= react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) - slidesToScroll && !infinite;\n  var props = {\n    'data-type': 'next',\n    'aria-label': 'Next Slide',\n    disabled: isDisabled,\n    onClick: moveSlides\n  };\n\n  if (nextArrow) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(nextArrow, _extends({\n      className: (nextArrow.props.className || '') + \" nav \" + (isDisabled ? 'disabled' : '')\n    }, props));\n  }\n\n  var className = \"nav default-nav \" + (isDisabled ? 'disabled' : '');\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: className\n  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"\n  })));\n};\n\nvar showDefaultIndicator = function showDefaultIndicator(isCurrentPageActive, key, indicatorProps) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", {\n    key: key\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: \"each-slideshow-indicator \" + (isCurrentPageActive ? 'active' : '')\n  }, indicatorProps)));\n};\n\nvar showCustomIndicator = function showCustomIndicator(isCurrentPageActive, key, indicatorProps, eachIndicator) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(eachIndicator, _extends({\n    className: eachIndicator.props.className + \" \" + (isCurrentPageActive ? 'active' : ''),\n    key: key\n  }, indicatorProps));\n};\n\nvar showIndicators = function showIndicators(props, currentIndex, navigate, responsiveSettings) {\n  var children = props.children,\n      indicators = props.indicators;\n  var slidesToScroll = 1;\n\n  if (responsiveSettings) {\n    slidesToScroll = responsiveSettings == null ? void 0 : responsiveSettings.settings.slidesToScroll;\n  } else if ('slidesToScroll' in props) {\n    slidesToScroll = props.slidesToScroll || 1;\n  }\n\n  var pages = Math.ceil(react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) / slidesToScroll);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n    className: \"indicators\"\n  }, Array.from({\n    length: pages\n  }, function (_, key) {\n    var indicatorProps = {\n      'data-key': key,\n      'aria-label': \"Go to slide \" + (key + 1),\n      onClick: navigate\n    };\n    var isCurrentPageActive = Math.floor((currentIndex + slidesToScroll - 1) / slidesToScroll) === key;\n\n    if (typeof indicators === 'function') {\n      return showCustomIndicator(isCurrentPageActive, key, indicatorProps, indicators(key));\n    }\n\n    return showDefaultIndicator(isCurrentPageActive, key, indicatorProps);\n  }));\n};\n\nvar defaultProps = {\n  duration: 5000,\n  transitionDuration: 1000,\n  defaultIndex: 0,\n  infinite: true,\n  autoplay: true,\n  indicators: false,\n  arrows: true,\n  pauseOnHover: true,\n  easing: 'linear',\n  canSwipe: true,\n  cssClass: '',\n  responsive: []\n};\n\nvar FadeZoom = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function (props, ref) {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getStartingIndex(props.children, props.defaultIndex)),\n      index = _useState[0],\n      setIndex = _useState[1];\n\n  var wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var innerWrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var tweenGroup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Group());\n  var timeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var resizeObserver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var childrenCount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(props.children);\n  }, [props.children]);\n  var applyStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (innerWrapperRef.current && wrapperRef.current) {\n      var wrapperWidth = wrapperRef.current.clientWidth;\n      var fullwidth = wrapperWidth * childrenCount;\n      innerWrapperRef.current.style.width = fullwidth + \"px\";\n\n      for (var _index = 0; _index < innerWrapperRef.current.children.length; _index++) {\n        var eachDiv = innerWrapperRef.current.children[_index];\n\n        if (eachDiv) {\n          eachDiv.style.width = wrapperWidth + \"px\";\n          eachDiv.style.left = _index * -wrapperWidth + \"px\";\n          eachDiv.style.display = \"block\";\n        }\n      }\n    }\n  }, [wrapperRef, innerWrapperRef, childrenCount]);\n  var initResizeObserver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (wrapperRef.current) {\n      resizeObserver.current = new resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_1__[\"default\"](function (entries) {\n        if (!entries) return;\n        applyStyle();\n      });\n      resizeObserver.current.observe(wrapperRef.current);\n    }\n  }, [wrapperRef, applyStyle]);\n  var play = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var autoplay = props.autoplay,\n        children = props.children,\n        duration = props.duration,\n        infinite = props.infinite;\n\n    if (autoplay && react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) > 1 && (infinite || index < react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) - 1)) {\n      timeout.current = setTimeout(moveNext, duration);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props, index]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    initResizeObserver();\n    return function () {\n      tweenGroup.current.removeAll();\n      clearTimeout(timeout.current);\n      removeResizeObserver();\n    };\n  }, [initResizeObserver, tweenGroup]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    clearTimeout(timeout.current);\n    play();\n  }, [index, props.autoplay, play]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    applyStyle();\n  }, [childrenCount, applyStyle]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, function () {\n    return {\n      goNext: function goNext() {\n        moveNext();\n      },\n      goBack: function goBack() {\n        moveBack();\n      },\n      goTo: function goTo(index, options) {\n        if (options != null && options.skipTransition) {\n          setIndex(index);\n        } else {\n          moveTo(index);\n        }\n      }\n    };\n  });\n\n  var removeResizeObserver = function removeResizeObserver() {\n    if (resizeObserver.current && wrapperRef.current) {\n      resizeObserver.current.unobserve(wrapperRef.current);\n    }\n  };\n\n  var pauseSlides = function pauseSlides() {\n    if (props.pauseOnHover) {\n      clearTimeout(timeout.current);\n    }\n  };\n\n  var startSlides = function startSlides() {\n    var pauseOnHover = props.pauseOnHover,\n        autoplay = props.autoplay,\n        duration = props.duration;\n\n    if (pauseOnHover && autoplay) {\n      timeout.current = setTimeout(function () {\n        return moveNext();\n      }, duration);\n    }\n  };\n\n  var moveNext = function moveNext() {\n    var children = props.children,\n        infinite = props.infinite;\n\n    if (!infinite && index === react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) - 1) {\n      return;\n    }\n\n    transitionSlide((index + 1) % react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children));\n  };\n\n  var moveBack = function moveBack() {\n    var children = props.children,\n        infinite = props.infinite;\n\n    if (!infinite && index === 0) {\n      return;\n    }\n\n    transitionSlide(index === 0 ? react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) - 1 : index - 1);\n  };\n\n  var preTransition = function preTransition(event) {\n    var currentTarget = event.currentTarget;\n\n    if (currentTarget.dataset.type === 'prev') {\n      moveBack();\n    } else {\n      moveNext();\n    }\n  };\n\n  var animate = function animate() {\n    requestAnimationFrame(animate);\n    tweenGroup.current.update();\n  };\n\n  var transitionSlide = function transitionSlide(newIndex) {\n    var existingTweens = tweenGroup.current.getAll();\n\n    if (!existingTweens.length) {\n      var _innerWrapperRef$curr;\n\n      if (!((_innerWrapperRef$curr = innerWrapperRef.current) != null && _innerWrapperRef$curr.children[newIndex])) {\n        newIndex = 0;\n      }\n\n      clearTimeout(timeout.current);\n      var value = {\n        opacity: 0,\n        scale: 1\n      };\n      animate();\n      var tween = new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Tween(value, tweenGroup.current).to({\n        opacity: 1,\n        scale: props.scale\n      }, props.transitionDuration).onUpdate(function (value) {\n        if (!innerWrapperRef.current) {\n          return;\n        }\n\n        innerWrapperRef.current.children[newIndex].style.opacity = value.opacity;\n        innerWrapperRef.current.children[index].style.opacity = 1 - value.opacity;\n        innerWrapperRef.current.children[index].style.transform = \"scale(\" + value.scale + \")\";\n      });\n      tween.easing(getEasing(props.easing));\n      tween.onStart(function () {\n        if (typeof props.onStartChange === 'function') {\n          props.onStartChange(index, newIndex);\n        }\n      });\n      tween.onComplete(function () {\n        if (innerWrapperRef.current) {\n          setIndex(newIndex);\n          innerWrapperRef.current.children[index].style.transform = \"scale(1)\";\n        }\n\n        if (typeof props.onChange === 'function') {\n          props.onChange(index, newIndex);\n        }\n      });\n      tween.start();\n    }\n  };\n\n  var moveTo = function moveTo(gotoIndex) {\n    if (gotoIndex !== index) {\n      transitionSlide(gotoIndex);\n    }\n  };\n\n  var navigate = function navigate(event) {\n    var currentTarget = event.currentTarget;\n\n    if (!currentTarget.dataset.key) {\n      return;\n    }\n\n    if (parseInt(currentTarget.dataset.key) !== index) {\n      moveTo(parseInt(currentTarget.dataset.key));\n    }\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    dir: \"ltr\",\n    \"aria-roledescription\": \"carousel\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"react-slideshow-container \" + (props.cssClass || ''),\n    onMouseEnter: pauseSlides,\n    onMouseOver: pauseSlides,\n    onMouseLeave: startSlides\n  }, props.arrows && showPreviousArrow(props, index, preTransition), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"react-slideshow-fadezoom-wrapper \" + props.cssClass,\n    ref: wrapperRef\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"react-slideshow-fadezoom-images-wrap\",\n    ref: innerWrapperRef\n  }, (react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(props.children, function (thisArg) {\n    return thisArg;\n  }) || []).map(function (each, key) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: {\n        opacity: key === index ? '1' : '0',\n        zIndex: key === index ? '1' : '0'\n      },\n      \"data-index\": key,\n      key: key,\n      \"aria-roledescription\": \"slide\",\n      \"aria-hidden\": key === index ? 'false' : 'true'\n    }, each);\n  }))), props.arrows && showNextArrow(props, index, preTransition)), props.indicators && showIndicators(props, index, navigate));\n});\nFadeZoom.defaultProps = defaultProps;\n\nvar Fade = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function (props, ref) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FadeZoom, Object.assign({}, props, {\n    scale: 1,\n    ref: ref\n  }));\n});\nFade.defaultProps = defaultProps;\n\nvar Zoom = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function (props, ref) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FadeZoom, Object.assign({}, props, {\n    ref: ref\n  }));\n});\nZoom.defaultProps = defaultProps;\n\nvar Slide = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function (props, ref) {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getStartingIndex(props.children, props.defaultIndex)),\n      index = _useState[0],\n      setIndex = _useState[1];\n\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),\n      wrapperWidth = _useState2[0],\n      setWrapperWidth = _useState2[1];\n\n  var wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var innerWrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var tweenGroup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Group());\n  var responsiveSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return getResponsiveSettings(wrapperWidth, props.responsive);\n  }, [wrapperWidth, props.responsive]);\n  var slidesToScroll = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    if (responsiveSettings) {\n      return responsiveSettings.settings.slidesToScroll;\n    }\n\n    return props.slidesToScroll || 1;\n  }, [responsiveSettings, props.slidesToScroll]);\n  var slidesToShow = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    if (responsiveSettings) {\n      return responsiveSettings.settings.slidesToShow;\n    }\n\n    return props.slidesToShow || 1;\n  }, [responsiveSettings, props.slidesToShow]);\n  var childrenCount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(props.children);\n  }, [props.children]);\n  var eachChildWidth = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return wrapperWidth / slidesToShow;\n  }, [wrapperWidth, slidesToShow]);\n  var timeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var resizeObserver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var startingClientX;\n  var dragging = false;\n  var distanceSwiped = 0;\n  var applyStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (innerWrapperRef.current) {\n      var fullwidth = wrapperWidth * innerWrapperRef.current.children.length;\n      innerWrapperRef.current.style.width = fullwidth + \"px\";\n\n      for (var _index = 0; _index < innerWrapperRef.current.children.length; _index++) {\n        var eachDiv = innerWrapperRef.current.children[_index];\n\n        if (eachDiv) {\n          eachDiv.style.width = eachChildWidth + \"px\";\n          eachDiv.style.display = \"block\";\n        }\n      }\n    }\n  }, [wrapperWidth, eachChildWidth]);\n  var initResizeObserver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (wrapperRef.current) {\n      resizeObserver.current = new resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_1__[\"default\"](function (entries) {\n        if (!entries) return;\n        setWidth();\n      });\n      resizeObserver.current.observe(wrapperRef.current);\n    }\n  }, [wrapperRef]);\n  var play = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var autoplay = props.autoplay,\n        infinite = props.infinite,\n        duration = props.duration;\n\n    if (autoplay && (infinite || index < childrenCount - 1)) {\n      timeout.current = setTimeout(moveNext, duration);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props, childrenCount, index]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    applyStyle();\n  }, [wrapperWidth, applyStyle]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    initResizeObserver();\n    return function () {\n      tweenGroup.current.removeAll();\n      clearTimeout(timeout.current);\n      removeResizeObserver();\n    };\n  }, [wrapperRef, initResizeObserver, tweenGroup]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    clearTimeout(timeout.current);\n    play();\n  }, [index, wrapperWidth, props.autoplay, play]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, function () {\n    return {\n      goNext: function goNext() {\n        moveNext();\n      },\n      goBack: function goBack() {\n        moveBack();\n      },\n      goTo: function goTo(index, options) {\n        if (options != null && options.skipTransition) {\n          setIndex(index);\n        } else {\n          moveTo(index);\n        }\n      }\n    };\n  });\n\n  var removeResizeObserver = function removeResizeObserver() {\n    if (resizeObserver && wrapperRef.current) {\n      resizeObserver.current.unobserve(wrapperRef.current);\n    }\n  };\n\n  var pauseSlides = function pauseSlides() {\n    if (props.pauseOnHover) {\n      clearTimeout(timeout.current);\n    }\n  };\n\n  var swipe = function swipe(event) {\n    if (props.canSwipe && dragging) {\n      var clientX;\n\n      if (window.TouchEvent && event.nativeEvent instanceof TouchEvent) {\n        clientX = event.nativeEvent.touches[0].pageX;\n      } else if (event.nativeEvent instanceof MouseEvent) {\n        clientX = event.nativeEvent.clientX;\n      }\n\n      if (clientX && startingClientX) {\n        var translateValue = eachChildWidth * (index + getOffset());\n        var distance = clientX - startingClientX;\n\n        if (!props.infinite && index === childrenCount - slidesToScroll && distance < 0) {\n          // if it is the last and infinite is false and you're swiping left\n          // then nothing happens\n          return;\n        }\n\n        if (!props.infinite && index === 0 && distance > 0) {\n          // if it is the first and infinite is false and you're swiping right\n          // then nothing happens\n          return;\n        }\n\n        distanceSwiped = distance;\n        translateValue -= distanceSwiped;\n        innerWrapperRef.current.style.transform = \"translate(-\" + translateValue + \"px)\";\n      }\n    }\n  };\n\n  var moveNext = function moveNext() {\n    if (!props.infinite && index === childrenCount - slidesToScroll) {\n      return;\n    }\n\n    var nextIndex = calculateIndex(index + slidesToScroll);\n    transitionSlide(nextIndex);\n  };\n\n  var moveBack = function moveBack() {\n    if (!props.infinite && index === 0) {\n      return;\n    }\n\n    var previousIndex = index - slidesToScroll;\n\n    if (previousIndex % slidesToScroll) {\n      previousIndex = Math.ceil(previousIndex / slidesToScroll) * slidesToScroll;\n    }\n\n    transitionSlide(previousIndex);\n  };\n\n  var goToSlide = function goToSlide(_ref) {\n    var currentTarget = _ref.currentTarget;\n\n    if (!currentTarget.dataset.key) {\n      return;\n    }\n\n    var datasetKey = parseInt(currentTarget.dataset.key);\n    moveTo(datasetKey * slidesToScroll);\n  };\n\n  var moveTo = function moveTo(index) {\n    transitionSlide(calculateIndex(index));\n  };\n\n  var calculateIndex = function calculateIndex(nextIndex) {\n    if (nextIndex < childrenCount && nextIndex + slidesToScroll > childrenCount) {\n      if ((childrenCount - slidesToScroll) % slidesToScroll) {\n        return childrenCount - slidesToScroll;\n      }\n\n      return nextIndex;\n    }\n\n    return nextIndex;\n  };\n\n  var startSlides = function startSlides() {\n    if (dragging) {\n      endSwipe();\n    } else if (props.pauseOnHover && props.autoplay) {\n      timeout.current = setTimeout(moveNext, props.duration);\n    }\n  };\n\n  var moveSlides = function moveSlides(_ref2) {\n    var dataset = _ref2.currentTarget.dataset;\n\n    if (dataset.type === 'next') {\n      moveNext();\n    } else {\n      moveBack();\n    }\n  };\n\n  var renderPreceedingSlides = function renderPreceedingSlides() {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().Children.toArray(props.children).slice(-slidesToShow).map(function (each, index) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        \"data-index\": index - slidesToShow,\n        \"aria-roledescription\": \"slide\",\n        \"aria-hidden\": \"true\",\n        key: index - slidesToShow\n      }, each);\n    });\n  };\n\n  var renderTrailingSlides = function renderTrailingSlides() {\n    if (!props.infinite && slidesToShow === slidesToScroll) {\n      return;\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default().Children.toArray(props.children).slice(0, slidesToShow).map(function (each, index) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        \"data-index\": childrenCount + index,\n        \"aria-roledescription\": \"slide\",\n        \"aria-hidden\": \"true\",\n        key: childrenCount + index\n      }, each);\n    });\n  };\n\n  var setWidth = function setWidth() {\n    if (wrapperRef.current) {\n      setWrapperWidth(wrapperRef.current.clientWidth);\n    }\n  };\n\n  var startSwipe = function startSwipe(event) {\n    if (props.canSwipe) {\n      if (window.TouchEvent && event.nativeEvent instanceof TouchEvent) {\n        startingClientX = event.nativeEvent.touches[0].pageX;\n      } else if (event.nativeEvent instanceof MouseEvent) {\n        startingClientX = event.nativeEvent.clientX;\n      }\n\n      clearTimeout(timeout.current);\n      dragging = true;\n    }\n  };\n\n  var endSwipe = function endSwipe() {\n    if (props.canSwipe) {\n      dragging = false;\n\n      if (Math.abs(distanceSwiped) / wrapperWidth > 0.2) {\n        if (distanceSwiped < 0) {\n          moveNext();\n        } else {\n          moveBack();\n        }\n      } else {\n        if (Math.abs(distanceSwiped) > 0) {\n          transitionSlide(index, 300);\n        }\n      }\n    }\n  };\n\n  var animate = function animate() {\n    requestAnimationFrame(animate);\n    tweenGroup.current.update();\n  };\n\n  var transitionSlide = function transitionSlide(toIndex, animationDuration) {\n    var transitionDuration = animationDuration || props.transitionDuration;\n    var currentIndex = index;\n    var existingTweens = tweenGroup.current.getAll();\n\n    if (!wrapperRef.current) {\n      return;\n    }\n\n    var childWidth = wrapperRef.current.clientWidth / slidesToShow;\n\n    if (!existingTweens.length) {\n      clearTimeout(timeout.current);\n      var value = {\n        margin: -childWidth * (currentIndex + getOffset()) + distanceSwiped\n      };\n      var tween = new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Tween(value, tweenGroup.current).to({\n        margin: -childWidth * (toIndex + getOffset())\n      }, transitionDuration).onUpdate(function (value) {\n        if (innerWrapperRef.current) {\n          innerWrapperRef.current.style.transform = \"translate(\" + value.margin + \"px)\";\n        }\n      });\n      tween.easing(getEasing(props.easing));\n      animate();\n      var newIndex = toIndex;\n\n      if (newIndex < 0) {\n        newIndex = childrenCount - slidesToScroll;\n      } else if (newIndex >= childrenCount) {\n        newIndex = 0;\n      }\n\n      tween.onStart(function () {\n        if (typeof props.onStartChange === 'function') {\n          props.onStartChange(index, newIndex);\n        }\n      });\n      tween.onComplete(function () {\n        distanceSwiped = 0;\n\n        if (typeof props.onChange === 'function') {\n          props.onChange(index, newIndex);\n        }\n\n        setIndex(newIndex);\n      });\n      tween.start();\n    }\n  };\n\n  var isSlideActive = function isSlideActive(key) {\n    return key < index + slidesToShow && key >= index;\n  };\n\n  var getOffset = function getOffset() {\n    if (!props.infinite) {\n      return 0;\n    }\n\n    return slidesToShow;\n  };\n\n  var style = {\n    transform: \"translate(-\" + (index + getOffset()) * eachChildWidth + \"px)\"\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    dir: \"ltr\",\n    \"aria-roledescription\": \"carousel\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"react-slideshow-container\",\n    onMouseEnter: pauseSlides,\n    onMouseOver: pauseSlides,\n    onMouseLeave: startSlides,\n    onMouseDown: startSwipe,\n    onMouseUp: endSwipe,\n    onMouseMove: swipe,\n    onTouchStart: startSwipe,\n    onTouchEnd: endSwipe,\n    onTouchCancel: endSwipe,\n    onTouchMove: swipe\n  }, props.arrows && showPreviousArrow(props, index, moveSlides), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"react-slideshow-wrapper slide \" + (props.cssClass || ''),\n    ref: wrapperRef\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"images-wrap\",\n    style: style,\n    ref: innerWrapperRef\n  }, props.infinite && renderPreceedingSlides(), (react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(props.children, function (thisArg) {\n    return thisArg;\n  }) || []).map(function (each, key) {\n    var isThisSlideActive = isSlideActive(key);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      \"data-index\": key,\n      key: key,\n      className: isThisSlideActive ? 'active' : '',\n      \"aria-roledescription\": \"slide\",\n      \"aria-hidden\": isThisSlideActive ? 'false' : 'true'\n    }, each);\n  }), renderTrailingSlides())), props.arrows && showNextArrow(props, index, moveSlides)), props.indicators && showIndicators(props, index, goToSlide, responsiveSettings));\n});\nSlide.defaultProps = defaultProps;\n\n\n//# sourceMappingURL=react-slideshow-image.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/react-slideshow-image/dist/react-slideshow-image.esm.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/react-webcam/dist/react-webcam.js":
/*!********************************************************!*\
  !*** ./node_modules/react-webcam/dist/react-webcam.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\"));\n\telse {}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_react__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_620__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_620__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_620__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_620__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__nested_webpack_require_620__.d = function(exports, name, getter) {\n/******/ \t\tif(!__nested_webpack_require_620__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__nested_webpack_require_620__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__nested_webpack_require_620__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __nested_webpack_require_620__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__nested_webpack_require_620__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_620__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__nested_webpack_require_620__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__nested_webpack_require_620__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__nested_webpack_require_620__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_620__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_620__(__nested_webpack_require_620__.s = \"./src/react-webcam.tsx\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/react-webcam.tsx\":\n/*!******************************!*\\\n  !*** ./src/react-webcam.tsx ***!\n  \\******************************/\n/*! exports provided: default */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_4284__) {\n\n\"use strict\";\n__nested_webpack_require_4284__.r(__nested_webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_4284__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_4284__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = ( false) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = ( false) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\n// polyfill based on https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n(function polyfillGetUserMedia() {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    // Older browsers might not implement mediaDevices at all, so we set an empty object first\n    if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n    }\n    // Some browsers partially implement mediaDevices. We can't just assign an object\n    // with getUserMedia as it would overwrite existing properties.\n    // Here, we will just add the getUserMedia property if it's missing.\n    if (navigator.mediaDevices.getUserMedia === undefined) {\n        navigator.mediaDevices.getUserMedia = function (constraints) {\n            // First get ahold of the legacy getUserMedia, if present\n            var getUserMedia = navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia;\n            // Some browsers just don't implement it - return a rejected promise with an error\n            // to keep a consistent interface\n            if (!getUserMedia) {\n                return Promise.reject(new Error(\"getUserMedia is not implemented in this browser\"));\n            }\n            // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n            return new Promise(function (resolve, reject) {\n                getUserMedia.call(navigator, constraints, resolve, reject);\n            });\n        };\n    }\n})();\nfunction hasGetUserMedia() {\n    return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n}\nvar Webcam = /** @class */ (function (_super) {\n    __extends(Webcam, _super);\n    function Webcam(props) {\n        var _this = _super.call(this, props) || this;\n        _this.canvas = null;\n        _this.ctx = null;\n        _this.requestUserMediaId = 0;\n        _this.unmounted = false;\n        _this.state = {\n            hasUserMedia: false\n        };\n        return _this;\n    }\n    Webcam.prototype.componentDidMount = function () {\n        var _a = this, state = _a.state, props = _a.props;\n        this.unmounted = false;\n        if (!hasGetUserMedia()) {\n            props.onUserMediaError(\"getUserMedia not supported\");\n            return;\n        }\n        if (!state.hasUserMedia) {\n            this.requestUserMedia();\n        }\n        if (props.children && typeof props.children != 'function') {\n            console.warn(\"children must be a function\");\n        }\n    };\n    Webcam.prototype.componentDidUpdate = function (nextProps) {\n        var props = this.props;\n        if (!hasGetUserMedia()) {\n            props.onUserMediaError(\"getUserMedia not supported\");\n            return;\n        }\n        var audioConstraintsChanged = JSON.stringify(nextProps.audioConstraints) !==\n            JSON.stringify(props.audioConstraints);\n        var videoConstraintsChanged = JSON.stringify(nextProps.videoConstraints) !==\n            JSON.stringify(props.videoConstraints);\n        var minScreenshotWidthChanged = nextProps.minScreenshotWidth !== props.minScreenshotWidth;\n        var minScreenshotHeightChanged = nextProps.minScreenshotHeight !== props.minScreenshotHeight;\n        if (videoConstraintsChanged ||\n            minScreenshotWidthChanged ||\n            minScreenshotHeightChanged) {\n            this.canvas = null;\n            this.ctx = null;\n        }\n        if (audioConstraintsChanged || videoConstraintsChanged) {\n            this.stopAndCleanup();\n            this.requestUserMedia();\n        }\n    };\n    Webcam.prototype.componentWillUnmount = function () {\n        this.unmounted = true;\n        this.stopAndCleanup();\n    };\n    Webcam.stopMediaStream = function (stream) {\n        if (stream) {\n            if (stream.getVideoTracks && stream.getAudioTracks) {\n                stream.getVideoTracks().map(function (track) {\n                    stream.removeTrack(track);\n                    track.stop();\n                });\n                stream.getAudioTracks().map(function (track) {\n                    stream.removeTrack(track);\n                    track.stop();\n                });\n            }\n            else {\n                stream.stop();\n            }\n        }\n    };\n    Webcam.prototype.stopAndCleanup = function () {\n        var state = this.state;\n        if (state.hasUserMedia) {\n            Webcam.stopMediaStream(this.stream);\n            if (state.src) {\n                window.URL.revokeObjectURL(state.src);\n            }\n        }\n    };\n    Webcam.prototype.getScreenshot = function (screenshotDimensions) {\n        var _a = this, state = _a.state, props = _a.props;\n        if (!state.hasUserMedia)\n            return null;\n        var canvas = this.getCanvas(screenshotDimensions);\n        return (canvas &&\n            canvas.toDataURL(props.screenshotFormat, props.screenshotQuality));\n    };\n    Webcam.prototype.getCanvas = function (screenshotDimensions) {\n        var _a = this, state = _a.state, props = _a.props;\n        if (!this.video) {\n            return null;\n        }\n        if (!state.hasUserMedia || !this.video.videoHeight)\n            return null;\n        if (!this.ctx) {\n            var canvasWidth = this.video.videoWidth;\n            var canvasHeight = this.video.videoHeight;\n            if (!this.props.forceScreenshotSourceSize) {\n                var aspectRatio = canvasWidth / canvasHeight;\n                canvasWidth = props.minScreenshotWidth || this.video.clientWidth;\n                canvasHeight = canvasWidth / aspectRatio;\n                if (props.minScreenshotHeight &&\n                    canvasHeight < props.minScreenshotHeight) {\n                    canvasHeight = props.minScreenshotHeight;\n                    canvasWidth = canvasHeight * aspectRatio;\n                }\n            }\n            this.canvas = document.createElement(\"canvas\");\n            this.canvas.width = (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.width) || canvasWidth;\n            this.canvas.height = (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.height) || canvasHeight;\n            this.ctx = this.canvas.getContext(\"2d\");\n        }\n        var _b = this, ctx = _b.ctx, canvas = _b.canvas;\n        if (ctx && canvas) {\n            // adjust the height and width of the canvas to the given dimensions\n            canvas.width = (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.width) || canvas.width;\n            canvas.height = (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.height) || canvas.height;\n            // mirror the screenshot\n            if (props.mirrored) {\n                ctx.translate(canvas.width, 0);\n                ctx.scale(-1, 1);\n            }\n            ctx.imageSmoothingEnabled = props.imageSmoothing;\n            ctx.drawImage(this.video, 0, 0, (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.width) || canvas.width, (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.height) || canvas.height);\n            // invert mirroring\n            if (props.mirrored) {\n                ctx.scale(-1, 1);\n                ctx.translate(-canvas.width, 0);\n            }\n        }\n        return canvas;\n    };\n    Webcam.prototype.requestUserMedia = function () {\n        var _this = this;\n        var props = this.props;\n        var sourceSelected = function (audioConstraints, videoConstraints) {\n            var constraints = {\n                video: typeof videoConstraints !== \"undefined\" ? videoConstraints : true\n            };\n            if (props.audio) {\n                constraints.audio =\n                    typeof audioConstraints !== \"undefined\" ? audioConstraints : true;\n            }\n            _this.requestUserMediaId++;\n            var myRequestUserMediaId = _this.requestUserMediaId;\n            navigator.mediaDevices\n                .getUserMedia(constraints)\n                .then(function (stream) {\n                if (_this.unmounted || myRequestUserMediaId !== _this.requestUserMediaId) {\n                    Webcam.stopMediaStream(stream);\n                }\n                else {\n                    _this.handleUserMedia(null, stream);\n                }\n            })\n                .catch(function (e) {\n                _this.handleUserMedia(e);\n            });\n        };\n        if (\"mediaDevices\" in navigator) {\n            sourceSelected(props.audioConstraints, props.videoConstraints);\n        }\n        else {\n            var optionalSource_1 = function (id) { return ({ optional: [{ sourceId: id }] }); };\n            var constraintToSourceId_1 = function (constraint) {\n                var deviceId = constraint.deviceId;\n                if (typeof deviceId === \"string\") {\n                    return deviceId;\n                }\n                if (Array.isArray(deviceId) && deviceId.length > 0) {\n                    return deviceId[0];\n                }\n                if (typeof deviceId === \"object\" && deviceId.ideal) {\n                    return deviceId.ideal;\n                }\n                return null;\n            };\n            // @ts-ignore: deprecated api\n            MediaStreamTrack.getSources(function (sources) {\n                var audioSource = null;\n                var videoSource = null;\n                sources.forEach(function (source) {\n                    if (source.kind === \"audio\") {\n                        audioSource = source.id;\n                    }\n                    else if (source.kind === \"video\") {\n                        videoSource = source.id;\n                    }\n                });\n                var audioSourceId = constraintToSourceId_1(props.audioConstraints);\n                if (audioSourceId) {\n                    audioSource = audioSourceId;\n                }\n                var videoSourceId = constraintToSourceId_1(props.videoConstraints);\n                if (videoSourceId) {\n                    videoSource = videoSourceId;\n                }\n                sourceSelected(optionalSource_1(audioSource), optionalSource_1(videoSource));\n            });\n        }\n    };\n    Webcam.prototype.handleUserMedia = function (err, stream) {\n        var props = this.props;\n        if (err || !stream) {\n            this.setState({ hasUserMedia: false });\n            props.onUserMediaError(err);\n            return;\n        }\n        this.stream = stream;\n        try {\n            if (this.video) {\n                this.video.srcObject = stream;\n            }\n            this.setState({ hasUserMedia: true });\n        }\n        catch (error) {\n            this.setState({\n                hasUserMedia: true,\n                src: window.URL.createObjectURL(stream)\n            });\n        }\n        props.onUserMedia(stream);\n    };\n    Webcam.prototype.render = function () {\n        var _this = this;\n        var _a = this, state = _a.state, props = _a.props;\n        var audio = props.audio, forceScreenshotSourceSize = props.forceScreenshotSourceSize, onUserMedia = props.onUserMedia, onUserMediaError = props.onUserMediaError, screenshotFormat = props.screenshotFormat, screenshotQuality = props.screenshotQuality, minScreenshotWidth = props.minScreenshotWidth, minScreenshotHeight = props.minScreenshotHeight, audioConstraints = props.audioConstraints, videoConstraints = props.videoConstraints, imageSmoothing = props.imageSmoothing, mirrored = props.mirrored, _b = props.style, style = _b === void 0 ? {} : _b, children = props.children, rest = __rest(props, [\"audio\", \"forceScreenshotSourceSize\", \"onUserMedia\", \"onUserMediaError\", \"screenshotFormat\", \"screenshotQuality\", \"minScreenshotWidth\", \"minScreenshotHeight\", \"audioConstraints\", \"videoConstraints\", \"imageSmoothing\", \"mirrored\", \"style\", \"children\"]);\n        var videoStyle = mirrored ? __assign(__assign({}, style), { transform: (style.transform || \"\") + \" scaleX(-1)\" }) : style;\n        var childrenProps = {\n            getScreenshot: this.getScreenshot.bind(this),\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"video\", __assign({ autoPlay: true, src: state.src, muted: !audio, playsInline: true, ref: function (ref) {\n                    _this.video = ref;\n                }, style: videoStyle }, rest)),\n            children && children(childrenProps)));\n    };\n    Webcam.defaultProps = {\n        audio: false,\n        forceScreenshotSourceSize: false,\n        imageSmoothing: true,\n        mirrored: false,\n        onUserMedia: function () { return undefined; },\n        onUserMediaError: function () { return undefined; },\n        screenshotFormat: \"image/webp\",\n        screenshotQuality: 0.92,\n    };\n    return Webcam;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = (Webcam);\n\n\n/***/ }),\n\n/***/ \"react\":\n/*!**************************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ })\n\n/******/ })[\"default\"];\n});\n//# sourceMappingURL=react-webcam.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXdlYmNhbS9kaXN0L3JlYWN0LXdlYmNhbS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUksSUFBeUQ7QUFDN0QsMkJBQTJCLG1CQUFPLENBQUMsNEVBQU87QUFDMUMsTUFBTSxFQUtvQztBQUMxQyxDQUFDO0FBQ0QscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDhCQUFtQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSw4QkFBbUI7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDhCQUFtQjtBQUM3QjtBQUNBO0FBQ0EsVUFBVSw4QkFBbUI7QUFDN0I7QUFDQTtBQUNBLFVBQVUsOEJBQW1CO0FBQzdCLGVBQWUsOEJBQW1CO0FBQ2xDLG1EQUFtRCwrQkFBK0I7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDhCQUFtQjtBQUM3QjtBQUNBLGlFQUFpRSxpQkFBaUI7QUFDbEY7QUFDQSwwREFBMEQsYUFBYTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsOEJBQW1CO0FBQzdCLGdDQUFnQyw4QkFBbUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4QkFBbUI7QUFDOUIsa0RBQWtELGdDQUFnQztBQUNsRiwwRUFBMEUsOEJBQW1CLDRCQUE0QixvQkFBb0I7QUFDN0k7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDhCQUFtQjtBQUM3QjtBQUNBLG9DQUFvQyw0QkFBNEI7QUFDaEUsMENBQTBDO0FBQzFDLFdBQVcsOEJBQW1CO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw4QkFBbUIsa0NBQWtDO0FBQy9EO0FBQ0E7QUFDQSxVQUFVLDhCQUFtQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsOEJBQW1CLENBQUMsOEJBQW1CO0FBQ3hELFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMEJBQW1CLEVBQUUsK0JBQW1COztBQUVoRTtBQUNBLCtCQUFtQixHQUFHLDBCQUFtQjtBQUN6Qyw4REFBOEQsK0JBQW1CO0FBQ2pGLG1GQUFtRiwrQkFBbUI7QUFDdEcsaUJBQWlCLE1BQWdDO0FBQ2pEO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNELGdCQUFnQixNQUErQjtBQUMvQztBQUNBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE1BQTZCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGNBQWM7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsVUFBVSxhQUFhLGNBQWMsR0FBRztBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIscUJBQXFCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsb0JBQW9CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdWlCQUF1aUI7QUFDdmlCLHdEQUF3RCxZQUFZLG9EQUFvRDtBQUN4SDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9GQUFvRjtBQUNwRjtBQUNBLGlCQUFpQixxQkFBcUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsbUJBQW1CO0FBQ3RELHdDQUF3QyxtQkFBbUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNkJBQTZCLDBCQUFtQjs7O0FBR2hELE9BQU87O0FBRVA7QUFDQTtBQUNBLGlCQUFpQixxRUFBcUU7QUFDdEY7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87O0FBRVAsVUFBVTtBQUNWLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3Qtd2ViY2FtL2Rpc3QvcmVhY3Qtd2ViY2FtLmpzPzhmMTMiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKFwicmVhY3RcIikpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW1wicmVhY3RcIl0sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiV2ViY2FtXCJdID0gZmFjdG9yeShyZXF1aXJlKFwicmVhY3RcIikpO1xuXHRlbHNlXG5cdFx0cm9vdFtcIldlYmNhbVwiXSA9IGZhY3Rvcnkocm9vdFtcIlJlYWN0XCJdKTtcbn0pKHRoaXMsIGZ1bmN0aW9uKF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfcmVhY3RfXykge1xucmV0dXJuIC8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuLyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0aTogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9XG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbi8qKioqKiovIFx0XHRtb2R1bGUubCA9IHRydWU7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4vKioqKioqLyBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4vKioqKioqLyBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4vKioqKioqLyBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4vKioqKioqLyBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuLyoqKioqKi8gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbi8qKioqKiovIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuLyoqKioqKi8gXHRcdHJldHVybiBucztcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuLyoqKioqKi8gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuLyoqKioqKi8gXHRcdHJldHVybiBnZXR0ZXI7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gXCIuL3NyYy9yZWFjdC13ZWJjYW0udHN4XCIpO1xuLyoqKioqKi8gfSlcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyAoe1xuXG4vKioqLyBcIi4vc3JjL3JlYWN0LXdlYmNhbS50c3hcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy9yZWFjdC13ZWJjYW0udHN4ICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciByZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgcmVhY3QgKi8gXCJyZWFjdFwiKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciByZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pO1xudmFyIF9fZXh0ZW5kcyA9ICh1bmRlZmluZWQgJiYgdW5kZWZpbmVkLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9fYXNzaWduID0gKHVuZGVmaW5lZCAmJiB1bmRlZmluZWQuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19yZXN0ID0gKHVuZGVmaW5lZCAmJiB1bmRlZmluZWQuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuXG4vLyBwb2x5ZmlsbCBiYXNlZCBvbiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvTWVkaWFEZXZpY2VzL2dldFVzZXJNZWRpYVxuKGZ1bmN0aW9uIHBvbHlmaWxsR2V0VXNlck1lZGlhKCkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIE9sZGVyIGJyb3dzZXJzIG1pZ2h0IG5vdCBpbXBsZW1lbnQgbWVkaWFEZXZpY2VzIGF0IGFsbCwgc28gd2Ugc2V0IGFuIGVtcHR5IG9iamVjdCBmaXJzdFxuICAgIGlmIChuYXZpZ2F0b3IubWVkaWFEZXZpY2VzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcyA9IHt9O1xuICAgIH1cbiAgICAvLyBTb21lIGJyb3dzZXJzIHBhcnRpYWxseSBpbXBsZW1lbnQgbWVkaWFEZXZpY2VzLiBXZSBjYW4ndCBqdXN0IGFzc2lnbiBhbiBvYmplY3RcbiAgICAvLyB3aXRoIGdldFVzZXJNZWRpYSBhcyBpdCB3b3VsZCBvdmVyd3JpdGUgZXhpc3RpbmcgcHJvcGVydGllcy5cbiAgICAvLyBIZXJlLCB3ZSB3aWxsIGp1c3QgYWRkIHRoZSBnZXRVc2VyTWVkaWEgcHJvcGVydHkgaWYgaXQncyBtaXNzaW5nLlxuICAgIGlmIChuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhID0gZnVuY3Rpb24gKGNvbnN0cmFpbnRzKSB7XG4gICAgICAgICAgICAvLyBGaXJzdCBnZXQgYWhvbGQgb2YgdGhlIGxlZ2FjeSBnZXRVc2VyTWVkaWEsIGlmIHByZXNlbnRcbiAgICAgICAgICAgIHZhciBnZXRVc2VyTWVkaWEgPSBuYXZpZ2F0b3IuZ2V0VXNlck1lZGlhIHx8XG4gICAgICAgICAgICAgICAgbmF2aWdhdG9yLndlYmtpdEdldFVzZXJNZWRpYSB8fFxuICAgICAgICAgICAgICAgIG5hdmlnYXRvci5tb3pHZXRVc2VyTWVkaWEgfHxcbiAgICAgICAgICAgICAgICBuYXZpZ2F0b3IubXNHZXRVc2VyTWVkaWE7XG4gICAgICAgICAgICAvLyBTb21lIGJyb3dzZXJzIGp1c3QgZG9uJ3QgaW1wbGVtZW50IGl0IC0gcmV0dXJuIGEgcmVqZWN0ZWQgcHJvbWlzZSB3aXRoIGFuIGVycm9yXG4gICAgICAgICAgICAvLyB0byBrZWVwIGEgY29uc2lzdGVudCBpbnRlcmZhY2VcbiAgICAgICAgICAgIGlmICghZ2V0VXNlck1lZGlhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihcImdldFVzZXJNZWRpYSBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBicm93c2VyXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIE90aGVyd2lzZSwgd3JhcCB0aGUgY2FsbCB0byB0aGUgb2xkIG5hdmlnYXRvci5nZXRVc2VyTWVkaWEgd2l0aCBhIFByb21pc2VcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICAgICAgZ2V0VXNlck1lZGlhLmNhbGwobmF2aWdhdG9yLCBjb25zdHJhaW50cywgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgIH1cbn0pKCk7XG5mdW5jdGlvbiBoYXNHZXRVc2VyTWVkaWEoKSB7XG4gICAgcmV0dXJuICEhKG5hdmlnYXRvci5tZWRpYURldmljZXMgJiYgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpO1xufVxudmFyIFdlYmNhbSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoV2ViY2FtLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFdlYmNhbShwcm9wcykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuY2FudmFzID0gbnVsbDtcbiAgICAgICAgX3RoaXMuY3R4ID0gbnVsbDtcbiAgICAgICAgX3RoaXMucmVxdWVzdFVzZXJNZWRpYUlkID0gMDtcbiAgICAgICAgX3RoaXMudW5tb3VudGVkID0gZmFsc2U7XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgaGFzVXNlck1lZGlhOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIFdlYmNhbS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMsIHN0YXRlID0gX2Euc3RhdGUsIHByb3BzID0gX2EucHJvcHM7XG4gICAgICAgIHRoaXMudW5tb3VudGVkID0gZmFsc2U7XG4gICAgICAgIGlmICghaGFzR2V0VXNlck1lZGlhKCkpIHtcbiAgICAgICAgICAgIHByb3BzLm9uVXNlck1lZGlhRXJyb3IoXCJnZXRVc2VyTWVkaWEgbm90IHN1cHBvcnRlZFwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXN0YXRlLmhhc1VzZXJNZWRpYSkge1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0VXNlck1lZGlhKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BzLmNoaWxkcmVuICYmIHR5cGVvZiBwcm9wcy5jaGlsZHJlbiAhPSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJjaGlsZHJlbiBtdXN0IGJlIGEgZnVuY3Rpb25cIik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFdlYmNhbS5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKG5leHRQcm9wcykge1xuICAgICAgICB2YXIgcHJvcHMgPSB0aGlzLnByb3BzO1xuICAgICAgICBpZiAoIWhhc0dldFVzZXJNZWRpYSgpKSB7XG4gICAgICAgICAgICBwcm9wcy5vblVzZXJNZWRpYUVycm9yKFwiZ2V0VXNlck1lZGlhIG5vdCBzdXBwb3J0ZWRcIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGF1ZGlvQ29uc3RyYWludHNDaGFuZ2VkID0gSlNPTi5zdHJpbmdpZnkobmV4dFByb3BzLmF1ZGlvQ29uc3RyYWludHMpICE9PVxuICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkocHJvcHMuYXVkaW9Db25zdHJhaW50cyk7XG4gICAgICAgIHZhciB2aWRlb0NvbnN0cmFpbnRzQ2hhbmdlZCA9IEpTT04uc3RyaW5naWZ5KG5leHRQcm9wcy52aWRlb0NvbnN0cmFpbnRzKSAhPT1cbiAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHByb3BzLnZpZGVvQ29uc3RyYWludHMpO1xuICAgICAgICB2YXIgbWluU2NyZWVuc2hvdFdpZHRoQ2hhbmdlZCA9IG5leHRQcm9wcy5taW5TY3JlZW5zaG90V2lkdGggIT09IHByb3BzLm1pblNjcmVlbnNob3RXaWR0aDtcbiAgICAgICAgdmFyIG1pblNjcmVlbnNob3RIZWlnaHRDaGFuZ2VkID0gbmV4dFByb3BzLm1pblNjcmVlbnNob3RIZWlnaHQgIT09IHByb3BzLm1pblNjcmVlbnNob3RIZWlnaHQ7XG4gICAgICAgIGlmICh2aWRlb0NvbnN0cmFpbnRzQ2hhbmdlZCB8fFxuICAgICAgICAgICAgbWluU2NyZWVuc2hvdFdpZHRoQ2hhbmdlZCB8fFxuICAgICAgICAgICAgbWluU2NyZWVuc2hvdEhlaWdodENoYW5nZWQpIHtcbiAgICAgICAgICAgIHRoaXMuY2FudmFzID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuY3R4ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXVkaW9Db25zdHJhaW50c0NoYW5nZWQgfHwgdmlkZW9Db25zdHJhaW50c0NoYW5nZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcEFuZENsZWFudXAoKTtcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdFVzZXJNZWRpYSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBXZWJjYW0ucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnVubW91bnRlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuc3RvcEFuZENsZWFudXAoKTtcbiAgICB9O1xuICAgIFdlYmNhbS5zdG9wTWVkaWFTdHJlYW0gPSBmdW5jdGlvbiAoc3RyZWFtKSB7XG4gICAgICAgIGlmIChzdHJlYW0pIHtcbiAgICAgICAgICAgIGlmIChzdHJlYW0uZ2V0VmlkZW9UcmFja3MgJiYgc3RyZWFtLmdldEF1ZGlvVHJhY2tzKSB7XG4gICAgICAgICAgICAgICAgc3RyZWFtLmdldFZpZGVvVHJhY2tzKCkubWFwKGZ1bmN0aW9uICh0cmFjaykge1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0ucmVtb3ZlVHJhY2sodHJhY2spO1xuICAgICAgICAgICAgICAgICAgICB0cmFjay5zdG9wKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgc3RyZWFtLmdldEF1ZGlvVHJhY2tzKCkubWFwKGZ1bmN0aW9uICh0cmFjaykge1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0ucmVtb3ZlVHJhY2sodHJhY2spO1xuICAgICAgICAgICAgICAgICAgICB0cmFjay5zdG9wKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdHJlYW0uc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBXZWJjYW0ucHJvdG90eXBlLnN0b3BBbmRDbGVhbnVwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3RhdGUgPSB0aGlzLnN0YXRlO1xuICAgICAgICBpZiAoc3RhdGUuaGFzVXNlck1lZGlhKSB7XG4gICAgICAgICAgICBXZWJjYW0uc3RvcE1lZGlhU3RyZWFtKHRoaXMuc3RyZWFtKTtcbiAgICAgICAgICAgIGlmIChzdGF0ZS5zcmMpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTChzdGF0ZS5zcmMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBXZWJjYW0ucHJvdG90eXBlLmdldFNjcmVlbnNob3QgPSBmdW5jdGlvbiAoc2NyZWVuc2hvdERpbWVuc2lvbnMpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcywgc3RhdGUgPSBfYS5zdGF0ZSwgcHJvcHMgPSBfYS5wcm9wcztcbiAgICAgICAgaWYgKCFzdGF0ZS5oYXNVc2VyTWVkaWEpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgdmFyIGNhbnZhcyA9IHRoaXMuZ2V0Q2FudmFzKHNjcmVlbnNob3REaW1lbnNpb25zKTtcbiAgICAgICAgcmV0dXJuIChjYW52YXMgJiZcbiAgICAgICAgICAgIGNhbnZhcy50b0RhdGFVUkwocHJvcHMuc2NyZWVuc2hvdEZvcm1hdCwgcHJvcHMuc2NyZWVuc2hvdFF1YWxpdHkpKTtcbiAgICB9O1xuICAgIFdlYmNhbS5wcm90b3R5cGUuZ2V0Q2FudmFzID0gZnVuY3Rpb24gKHNjcmVlbnNob3REaW1lbnNpb25zKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMsIHN0YXRlID0gX2Euc3RhdGUsIHByb3BzID0gX2EucHJvcHM7XG4gICAgICAgIGlmICghdGhpcy52aWRlbykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzdGF0ZS5oYXNVc2VyTWVkaWEgfHwgIXRoaXMudmlkZW8udmlkZW9IZWlnaHQpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgaWYgKCF0aGlzLmN0eCkge1xuICAgICAgICAgICAgdmFyIGNhbnZhc1dpZHRoID0gdGhpcy52aWRlby52aWRlb1dpZHRoO1xuICAgICAgICAgICAgdmFyIGNhbnZhc0hlaWdodCA9IHRoaXMudmlkZW8udmlkZW9IZWlnaHQ7XG4gICAgICAgICAgICBpZiAoIXRoaXMucHJvcHMuZm9yY2VTY3JlZW5zaG90U291cmNlU2l6ZSkge1xuICAgICAgICAgICAgICAgIHZhciBhc3BlY3RSYXRpbyA9IGNhbnZhc1dpZHRoIC8gY2FudmFzSGVpZ2h0O1xuICAgICAgICAgICAgICAgIGNhbnZhc1dpZHRoID0gcHJvcHMubWluU2NyZWVuc2hvdFdpZHRoIHx8IHRoaXMudmlkZW8uY2xpZW50V2lkdGg7XG4gICAgICAgICAgICAgICAgY2FudmFzSGVpZ2h0ID0gY2FudmFzV2lkdGggLyBhc3BlY3RSYXRpbztcbiAgICAgICAgICAgICAgICBpZiAocHJvcHMubWluU2NyZWVuc2hvdEhlaWdodCAmJlxuICAgICAgICAgICAgICAgICAgICBjYW52YXNIZWlnaHQgPCBwcm9wcy5taW5TY3JlZW5zaG90SGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbnZhc0hlaWdodCA9IHByb3BzLm1pblNjcmVlbnNob3RIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIGNhbnZhc1dpZHRoID0gY2FudmFzSGVpZ2h0ICogYXNwZWN0UmF0aW87XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgICAgICAgICAgdGhpcy5jYW52YXMud2lkdGggPSAoc2NyZWVuc2hvdERpbWVuc2lvbnMgPT09IG51bGwgfHwgc2NyZWVuc2hvdERpbWVuc2lvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNjcmVlbnNob3REaW1lbnNpb25zLndpZHRoKSB8fCBjYW52YXNXaWR0aDtcbiAgICAgICAgICAgIHRoaXMuY2FudmFzLmhlaWdodCA9IChzY3JlZW5zaG90RGltZW5zaW9ucyA9PT0gbnVsbCB8fCBzY3JlZW5zaG90RGltZW5zaW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2NyZWVuc2hvdERpbWVuc2lvbnMuaGVpZ2h0KSB8fCBjYW52YXNIZWlnaHQ7XG4gICAgICAgICAgICB0aGlzLmN0eCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgX2IgPSB0aGlzLCBjdHggPSBfYi5jdHgsIGNhbnZhcyA9IF9iLmNhbnZhcztcbiAgICAgICAgaWYgKGN0eCAmJiBjYW52YXMpIHtcbiAgICAgICAgICAgIC8vIGFkanVzdCB0aGUgaGVpZ2h0IGFuZCB3aWR0aCBvZiB0aGUgY2FudmFzIHRvIHRoZSBnaXZlbiBkaW1lbnNpb25zXG4gICAgICAgICAgICBjYW52YXMud2lkdGggPSAoc2NyZWVuc2hvdERpbWVuc2lvbnMgPT09IG51bGwgfHwgc2NyZWVuc2hvdERpbWVuc2lvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNjcmVlbnNob3REaW1lbnNpb25zLndpZHRoKSB8fCBjYW52YXMud2lkdGg7XG4gICAgICAgICAgICBjYW52YXMuaGVpZ2h0ID0gKHNjcmVlbnNob3REaW1lbnNpb25zID09PSBudWxsIHx8IHNjcmVlbnNob3REaW1lbnNpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzY3JlZW5zaG90RGltZW5zaW9ucy5oZWlnaHQpIHx8IGNhbnZhcy5oZWlnaHQ7XG4gICAgICAgICAgICAvLyBtaXJyb3IgdGhlIHNjcmVlbnNob3RcbiAgICAgICAgICAgIGlmIChwcm9wcy5taXJyb3JlZCkge1xuICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLndpZHRoLCAwKTtcbiAgICAgICAgICAgICAgICBjdHguc2NhbGUoLTEsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3R4LmltYWdlU21vb3RoaW5nRW5hYmxlZCA9IHByb3BzLmltYWdlU21vb3RoaW5nO1xuICAgICAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLnZpZGVvLCAwLCAwLCAoc2NyZWVuc2hvdERpbWVuc2lvbnMgPT09IG51bGwgfHwgc2NyZWVuc2hvdERpbWVuc2lvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNjcmVlbnNob3REaW1lbnNpb25zLndpZHRoKSB8fCBjYW52YXMud2lkdGgsIChzY3JlZW5zaG90RGltZW5zaW9ucyA9PT0gbnVsbCB8fCBzY3JlZW5zaG90RGltZW5zaW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2NyZWVuc2hvdERpbWVuc2lvbnMuaGVpZ2h0KSB8fCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgIC8vIGludmVydCBtaXJyb3JpbmdcbiAgICAgICAgICAgIGlmIChwcm9wcy5taXJyb3JlZCkge1xuICAgICAgICAgICAgICAgIGN0eC5zY2FsZSgtMSwgMSk7XG4gICAgICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgtY2FudmFzLndpZHRoLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2FudmFzO1xuICAgIH07XG4gICAgV2ViY2FtLnByb3RvdHlwZS5yZXF1ZXN0VXNlck1lZGlhID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgcHJvcHMgPSB0aGlzLnByb3BzO1xuICAgICAgICB2YXIgc291cmNlU2VsZWN0ZWQgPSBmdW5jdGlvbiAoYXVkaW9Db25zdHJhaW50cywgdmlkZW9Db25zdHJhaW50cykge1xuICAgICAgICAgICAgdmFyIGNvbnN0cmFpbnRzID0ge1xuICAgICAgICAgICAgICAgIHZpZGVvOiB0eXBlb2YgdmlkZW9Db25zdHJhaW50cyAhPT0gXCJ1bmRlZmluZWRcIiA/IHZpZGVvQ29uc3RyYWludHMgOiB0cnVlXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKHByb3BzLmF1ZGlvKSB7XG4gICAgICAgICAgICAgICAgY29uc3RyYWludHMuYXVkaW8gPVxuICAgICAgICAgICAgICAgICAgICB0eXBlb2YgYXVkaW9Db25zdHJhaW50cyAhPT0gXCJ1bmRlZmluZWRcIiA/IGF1ZGlvQ29uc3RyYWludHMgOiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMucmVxdWVzdFVzZXJNZWRpYUlkKys7XG4gICAgICAgICAgICB2YXIgbXlSZXF1ZXN0VXNlck1lZGlhSWQgPSBfdGhpcy5yZXF1ZXN0VXNlck1lZGlhSWQ7XG4gICAgICAgICAgICBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzXG4gICAgICAgICAgICAgICAgLmdldFVzZXJNZWRpYShjb25zdHJhaW50cylcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoc3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgaWYgKF90aGlzLnVubW91bnRlZCB8fCBteVJlcXVlc3RVc2VyTWVkaWFJZCAhPT0gX3RoaXMucmVxdWVzdFVzZXJNZWRpYUlkKSB7XG4gICAgICAgICAgICAgICAgICAgIFdlYmNhbS5zdG9wTWVkaWFTdHJlYW0oc3RyZWFtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZVVzZXJNZWRpYShudWxsLCBzdHJlYW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuaGFuZGxlVXNlck1lZGlhKGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlmIChcIm1lZGlhRGV2aWNlc1wiIGluIG5hdmlnYXRvcikge1xuICAgICAgICAgICAgc291cmNlU2VsZWN0ZWQocHJvcHMuYXVkaW9Db25zdHJhaW50cywgcHJvcHMudmlkZW9Db25zdHJhaW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgb3B0aW9uYWxTb3VyY2VfMSA9IGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gKHsgb3B0aW9uYWw6IFt7IHNvdXJjZUlkOiBpZCB9XSB9KTsgfTtcbiAgICAgICAgICAgIHZhciBjb25zdHJhaW50VG9Tb3VyY2VJZF8xID0gZnVuY3Rpb24gKGNvbnN0cmFpbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGV2aWNlSWQgPSBjb25zdHJhaW50LmRldmljZUlkO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZGV2aWNlSWQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRldmljZUlkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkZXZpY2VJZCkgJiYgZGV2aWNlSWQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGV2aWNlSWRbMF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZGV2aWNlSWQgPT09IFwib2JqZWN0XCIgJiYgZGV2aWNlSWQuaWRlYWwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRldmljZUlkLmlkZWFsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlOiBkZXByZWNhdGVkIGFwaVxuICAgICAgICAgICAgTWVkaWFTdHJlYW1UcmFjay5nZXRTb3VyY2VzKGZ1bmN0aW9uIChzb3VyY2VzKSB7XG4gICAgICAgICAgICAgICAgdmFyIGF1ZGlvU291cmNlID0gbnVsbDtcbiAgICAgICAgICAgICAgICB2YXIgdmlkZW9Tb3VyY2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIHNvdXJjZXMuZm9yRWFjaChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzb3VyY2Uua2luZCA9PT0gXCJhdWRpb1wiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdWRpb1NvdXJjZSA9IHNvdXJjZS5pZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChzb3VyY2Uua2luZCA9PT0gXCJ2aWRlb1wiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2aWRlb1NvdXJjZSA9IHNvdXJjZS5pZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHZhciBhdWRpb1NvdXJjZUlkID0gY29uc3RyYWludFRvU291cmNlSWRfMShwcm9wcy5hdWRpb0NvbnN0cmFpbnRzKTtcbiAgICAgICAgICAgICAgICBpZiAoYXVkaW9Tb3VyY2VJZCkge1xuICAgICAgICAgICAgICAgICAgICBhdWRpb1NvdXJjZSA9IGF1ZGlvU291cmNlSWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciB2aWRlb1NvdXJjZUlkID0gY29uc3RyYWludFRvU291cmNlSWRfMShwcm9wcy52aWRlb0NvbnN0cmFpbnRzKTtcbiAgICAgICAgICAgICAgICBpZiAodmlkZW9Tb3VyY2VJZCkge1xuICAgICAgICAgICAgICAgICAgICB2aWRlb1NvdXJjZSA9IHZpZGVvU291cmNlSWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNvdXJjZVNlbGVjdGVkKG9wdGlvbmFsU291cmNlXzEoYXVkaW9Tb3VyY2UpLCBvcHRpb25hbFNvdXJjZV8xKHZpZGVvU291cmNlKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgV2ViY2FtLnByb3RvdHlwZS5oYW5kbGVVc2VyTWVkaWEgPSBmdW5jdGlvbiAoZXJyLCBzdHJlYW0pIHtcbiAgICAgICAgdmFyIHByb3BzID0gdGhpcy5wcm9wcztcbiAgICAgICAgaWYgKGVyciB8fCAhc3RyZWFtKSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgaGFzVXNlck1lZGlhOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIHByb3BzLm9uVXNlck1lZGlhRXJyb3IoZXJyKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0cmVhbSA9IHN0cmVhbTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0aGlzLnZpZGVvKSB7XG4gICAgICAgICAgICAgICAgdGhpcy52aWRlby5zcmNPYmplY3QgPSBzdHJlYW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgaGFzVXNlck1lZGlhOiB0cnVlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgaGFzVXNlck1lZGlhOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNyYzogd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoc3RyZWFtKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcHJvcHMub25Vc2VyTWVkaWEoc3RyZWFtKTtcbiAgICB9O1xuICAgIFdlYmNhbS5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgX2EgPSB0aGlzLCBzdGF0ZSA9IF9hLnN0YXRlLCBwcm9wcyA9IF9hLnByb3BzO1xuICAgICAgICB2YXIgYXVkaW8gPSBwcm9wcy5hdWRpbywgZm9yY2VTY3JlZW5zaG90U291cmNlU2l6ZSA9IHByb3BzLmZvcmNlU2NyZWVuc2hvdFNvdXJjZVNpemUsIG9uVXNlck1lZGlhID0gcHJvcHMub25Vc2VyTWVkaWEsIG9uVXNlck1lZGlhRXJyb3IgPSBwcm9wcy5vblVzZXJNZWRpYUVycm9yLCBzY3JlZW5zaG90Rm9ybWF0ID0gcHJvcHMuc2NyZWVuc2hvdEZvcm1hdCwgc2NyZWVuc2hvdFF1YWxpdHkgPSBwcm9wcy5zY3JlZW5zaG90UXVhbGl0eSwgbWluU2NyZWVuc2hvdFdpZHRoID0gcHJvcHMubWluU2NyZWVuc2hvdFdpZHRoLCBtaW5TY3JlZW5zaG90SGVpZ2h0ID0gcHJvcHMubWluU2NyZWVuc2hvdEhlaWdodCwgYXVkaW9Db25zdHJhaW50cyA9IHByb3BzLmF1ZGlvQ29uc3RyYWludHMsIHZpZGVvQ29uc3RyYWludHMgPSBwcm9wcy52aWRlb0NvbnN0cmFpbnRzLCBpbWFnZVNtb290aGluZyA9IHByb3BzLmltYWdlU21vb3RoaW5nLCBtaXJyb3JlZCA9IHByb3BzLm1pcnJvcmVkLCBfYiA9IHByb3BzLnN0eWxlLCBzdHlsZSA9IF9iID09PSB2b2lkIDAgPyB7fSA6IF9iLCBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLCByZXN0ID0gX19yZXN0KHByb3BzLCBbXCJhdWRpb1wiLCBcImZvcmNlU2NyZWVuc2hvdFNvdXJjZVNpemVcIiwgXCJvblVzZXJNZWRpYVwiLCBcIm9uVXNlck1lZGlhRXJyb3JcIiwgXCJzY3JlZW5zaG90Rm9ybWF0XCIsIFwic2NyZWVuc2hvdFF1YWxpdHlcIiwgXCJtaW5TY3JlZW5zaG90V2lkdGhcIiwgXCJtaW5TY3JlZW5zaG90SGVpZ2h0XCIsIFwiYXVkaW9Db25zdHJhaW50c1wiLCBcInZpZGVvQ29uc3RyYWludHNcIiwgXCJpbWFnZVNtb290aGluZ1wiLCBcIm1pcnJvcmVkXCIsIFwic3R5bGVcIiwgXCJjaGlsZHJlblwiXSk7XG4gICAgICAgIHZhciB2aWRlb1N0eWxlID0gbWlycm9yZWQgPyBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc3R5bGUpLCB7IHRyYW5zZm9ybTogKHN0eWxlLnRyYW5zZm9ybSB8fCBcIlwiKSArIFwiIHNjYWxlWCgtMSlcIiB9KSA6IHN0eWxlO1xuICAgICAgICB2YXIgY2hpbGRyZW5Qcm9wcyA9IHtcbiAgICAgICAgICAgIGdldFNjcmVlbnNob3Q6IHRoaXMuZ2V0U2NyZWVuc2hvdC5iaW5kKHRoaXMpLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gKHJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXCJjcmVhdGVFbGVtZW50XCJdKHJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXCJGcmFnbWVudFwiXSwgbnVsbCxcbiAgICAgICAgICAgIHJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXCJjcmVhdGVFbGVtZW50XCJdKFwidmlkZW9cIiwgX19hc3NpZ24oeyBhdXRvUGxheTogdHJ1ZSwgc3JjOiBzdGF0ZS5zcmMsIG11dGVkOiAhYXVkaW8sIHBsYXlzSW5saW5lOiB0cnVlLCByZWY6IGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMudmlkZW8gPSByZWY7XG4gICAgICAgICAgICAgICAgfSwgc3R5bGU6IHZpZGVvU3R5bGUgfSwgcmVzdCkpLFxuICAgICAgICAgICAgY2hpbGRyZW4gJiYgY2hpbGRyZW4oY2hpbGRyZW5Qcm9wcykpKTtcbiAgICB9O1xuICAgIFdlYmNhbS5kZWZhdWx0UHJvcHMgPSB7XG4gICAgICAgIGF1ZGlvOiBmYWxzZSxcbiAgICAgICAgZm9yY2VTY3JlZW5zaG90U291cmNlU2l6ZTogZmFsc2UsXG4gICAgICAgIGltYWdlU21vb3RoaW5nOiB0cnVlLFxuICAgICAgICBtaXJyb3JlZDogZmFsc2UsXG4gICAgICAgIG9uVXNlck1lZGlhOiBmdW5jdGlvbiAoKSB7IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICAgIG9uVXNlck1lZGlhRXJyb3I6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgc2NyZWVuc2hvdEZvcm1hdDogXCJpbWFnZS93ZWJwXCIsXG4gICAgICAgIHNjcmVlbnNob3RRdWFsaXR5OiAwLjkyLFxuICAgIH07XG4gICAgcmV0dXJuIFdlYmNhbTtcbn0ocmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1tcIkNvbXBvbmVudFwiXSkpO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZGVmYXVsdFwiXSA9IChXZWJjYW0pO1xuXG5cbi8qKiovIH0pLFxuXG4vKioqLyBcInJlYWN0XCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiBleHRlcm5hbCB7XCJyb290XCI6XCJSZWFjdFwiLFwiY29tbW9uanMyXCI6XCJyZWFjdFwiLFwiY29tbW9uanNcIjpcInJlYWN0XCIsXCJhbWRcIjpcInJlYWN0XCJ9ICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfcmVhY3RfXztcblxuLyoqKi8gfSlcblxuLyoqKioqKi8gfSlbXCJkZWZhdWx0XCJdO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC13ZWJjYW0uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/react-webcam/dist/react-webcam.js\n"));

/***/ }),

/***/ "(app-client)/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.Math === Math) {\r\n        return __webpack_require__.g;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-client)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=G%3A%5Cobject_hunt%5Capp%5Cg%5Cpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);